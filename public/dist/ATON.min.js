/*! For license information please see ATON.min.js.LICENSE.txt */
(()=>{"use strict";var e={812:e=>{function t(e,t){if("function"!=typeof e)throw new TypeError("argument fn must be a function");return e}function n(e,t,n){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var i=Object.getOwnPropertyDescriptor(e,t);if(!i)throw new TypeError("must call property on owner object");if(!i.configurable)throw new TypeError("property must be configurable")}e.exports=function(e){if(!e)throw new TypeError("argument namespace is required");function i(e){}return i._file=void 0,i._ignored=!0,i._namespace=e,i._traced=!1,i._warned=Object.create(null),i.function=t,i.property=n,i}},386:(e,t)=>{t.parse=function(e,t){if("string"!=typeof e)throw new TypeError("argument str must be a string");for(var i={},r=t||{},o=e.split(";"),s=r.decode||n,l=0;l<o.length;l++){var c=o[l],d=c.indexOf("=");if(!(d<0)){var h=c.substring(0,d).trim();if(null==i[h]){var u=c.substring(d+1,c.length).trim();'"'===u[0]&&(u=u.slice(1,-1)),i[h]=a(u,s)}}}return i},t.serialize=function(e,t,n){var a=n||{},o=a.encode||i;if("function"!=typeof o)throw new TypeError("option encode is invalid");if(!r.test(e))throw new TypeError("argument name is invalid");var s=o(t);if(s&&!r.test(s))throw new TypeError("argument val is invalid");var l=e+"="+s;if(null!=a.maxAge){var c=a.maxAge-0;if(isNaN(c)||!isFinite(c))throw new TypeError("option maxAge is invalid");l+="; Max-Age="+Math.floor(c)}if(a.domain){if(!r.test(a.domain))throw new TypeError("option domain is invalid");l+="; Domain="+a.domain}if(a.path){if(!r.test(a.path))throw new TypeError("option path is invalid");l+="; Path="+a.path}if(a.expires){if("function"!=typeof a.expires.toUTCString)throw new TypeError("option expires is invalid");l+="; Expires="+a.expires.toUTCString()}if(a.httpOnly&&(l+="; HttpOnly"),a.secure&&(l+="; Secure"),a.sameSite)switch("string"==typeof a.sameSite?a.sameSite.toLowerCase():a.sameSite){case!0:l+="; SameSite=Strict";break;case"lax":l+="; SameSite=Lax";break;case"strict":l+="; SameSite=Strict";break;case"none":l+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return l};var n=decodeURIComponent,i=encodeURIComponent,r=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function a(e,t){try{return t(e)}catch(t){return e}}},146:(e,t,n)=>{var i=n(386),r=n(812)("express-session");(e.exports=function(e){if(this.path="/",this.maxAge=null,this.httpOnly=!0,e){if("object"!=typeof e)throw new TypeError("argument options must be a object");for(var t in e)"data"!==t&&(this[t]=e[t])}void 0!==this.originalMaxAge&&null!==this.originalMaxAge||(this.originalMaxAge=this.maxAge)}).prototype={set expires(e){this._expires=e,this.originalMaxAge=this.maxAge},get expires(){return this._expires},set maxAge(e){if(e&&"number"!=typeof e&&!(e instanceof Date))throw new TypeError("maxAge must be a number or Date");e instanceof Date&&r("maxAge as Date; pass number of milliseconds instead"),this.expires="number"==typeof e?new Date(Date.now()+e):e},get maxAge(){return this.expires instanceof Date?this.expires.valueOf()-Date.now():this.expires},get data(){return{originalMaxAge:this.originalMaxAge,expires:this._expires,secure:this.secure,httpOnly:this.httpOnly,domain:this.domain,path:this.path,sameSite:this.sameSite}},serialize:function(e,t){return i.serialize(e,t,this.data)},toJSON:function(){return this.data}}}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};(()=>{n.d(i,{Z:()=>tc});class e extends THREE.Group{constructor(e,t){switch(super(),this.type=t||tc.NTYPES.SCENE,this.enablePicking(),this.type){case tc.NTYPES.SCENE:this._rootG=tc._rootVisible,this._nodes=tc.snodes;break;case tc.NTYPES.UI:this._rootG=tc._rootUI,this._nodes=tc.uinodes;break;case tc.NTYPES.SEM:this._rootG=tc._rootSem,this._nodes=tc.semnodes}this.as(e),this.kwords=void 0,this._bCloneOnLoadHit=!0,this._tlist=void 0,this._aniMixers=void 0,this.castShadow=!1,this.receiveShadow=!1,this._bs=new THREE.Sphere,this.autocenter=!1,this.onHover=void 0,this.onLeave=void 0,this.onSelect=void 0,this.nowHover=!1,this.nowEditing=!1,this.editable=!1,this.draggable=!1,this.nowDragging=!1,this.nowRotating=!1,this.isImported=!1,this.isImporter=!1,this.searchbarActive=!1,this.keyboardActive=!1,this.cardviewActive=!1,this.isPivotWrapper=!1,this.loadedFromJSON=!1,this.sketchfabUrl="",this.assetId="",this._points=void 0,this.isSphereShape=!1,this.isConvexShape=!1,this.autoRotationInterval=void 0,tc.on("SceneNodeLeave",(e=>{this.nid===e&&(this.nowHover=!1,this.nowEditing&&tc.Nav.setZoomWithWheel(!0))})),tc.on("SceneNodeHover",(e=>{this.nid===e&&(this.nowHover=!0,this.nowEditing&&tc.Nav.setZoomWithWheel(!1))}))}as(e){if(void 0!==e&&e!==tc.ROOT_NID)return this._nodes[e]=this,this.nid=e,this.name=e,this}setAsRoot(){return this._nodes[tc.ROOT_NID]=this,this.nid=tc.ROOT_NID,this}setCloneOnLoadHit(e){return this._bCloneOnLoadHit=e,this}addKeywords(e){let t=e.split(",");void 0===this.kwords&&(this.kwords={});for(let e in t){let n=t[e].trim();n.length>0&&(this.kwords[n]=!0)}for(let t in this.children){let n=this.children[t];void 0!==n.type&&n.addKeywords(e)}return this}hasKeyword(e){if(void 0!==this.kwords)return void 0!==this.kwords[e]}setDescription(e){return this.userData.description=e,this}getDescription(){return this.userData.description}setAudio(e){return this.userData.audio=e,this}getAudio(){return this.userData.audio}hide(){return this.visible=!1,tc.Utils.setPicking(this,this.type,!1),tc._renderer.shadowMap.enabled&&(tc._dMainL.shadow.needsUpdate=!0),this}show(){return this.visible=!0,tc.Utils.setPicking(this,this.type,this.bPickable),tc._renderer.shadowMap.enabled&&void 0!==tc._dMainL&&void 0!==tc._dMainL.shadow&&(tc._dMainL.shadow.needsUpdate=!0),this}toggle(e){return void 0===e?this.visible?this.hide():this.show():e?this.show():this.hide()}disablePicking(){return this.bPickable=!1,tc.Utils.setPicking(this,this.type,this.bPickable),this}enablePicking(){return this.bPickable=!0,tc.Utils.setPicking(this,this.type,this.bPickable),this}setPickable(e){return e?this.enablePicking():this.disablePicking(),this}setDraggable(e){return e||(e=!0),this.draggable=e,this}setNowScaling(e){void 0!==e&&(tc.actualEditingNode.nowScaling=e,!0===tc.actualEditingNode.nowScaling&&(!0===tc.actualEditingNode.isPivotWrapper?tc.getUINode("editModeLabelMessage").setText("Now scaling "+tc.actualEditingNode.children[0].nid):tc.getUINode("editModeLabelMessage").setText("Now scaling "+tc.actualEditingNode.nid),tc.actualEditingNode.setNowDragging(!1),tc.actualEditingNode.setNowRotating(!1)))}setNowRotating(e){void 0!==e&&(tc.actualEditingNode.nowRotating=e,!0===tc.actualEditingNode.nowRotating&&(!0===tc.actualEditingNode.isPivotWrapper?tc.getUINode("editModeLabelMessage").setText("Now rotating "+tc.actualEditingNode.children[0].nid):tc.getUINode("editModeLabelMessage").setText("Now rotating "+tc.actualEditingNode.nid),tc.actualEditingNode.setNowScaling(!1),tc.actualEditingNode.setNowDragging(!1)))}rotationEvent(e){if(this.nowRotating){let t={x:void 0,y:void 0,z:void 0};switch(tc._lastSelectedAxis){case"x":t.x=-e.y,t.y=0,t.z=0;break;case"y":t.x=0,t.y=e.x,t.z=0;break;case"z":t.x=0,t.y=0,t.z=e.x}this.setRotation(t.x,t.y,t.z)}}setAutoRotation(e=!0){return e?this.autoRotationInterval=setInterval((()=>{this.setRotation(this.rotation.x+.01,this.rotation.y+.01,this.rotation.z+.01)}),10):this.autoRotationInterval&&clearInterval(this.autoRotationInterval),this}setNowDragging(e){void 0!==e&&(tc.actualEditingNode.nowDragging=e,!0===tc.actualEditingNode.nowDragging&&(!0===tc.actualEditingNode.isPivotWrapper?tc.getUINode("editModeLabelMessage").setText("Now dragging "+tc.actualEditingNode.children[0].nid):tc.getUINode("editModeLabelMessage").setText("Now dragging "+tc.actualEditingNode.nid),tc.actualEditingNode.setNowRotating(!1),tc.actualEditingNode.setNowScaling(!1)))}setNowEditing(e){if(void 0!==e){if(console.log("ACTUAL EDITING NODE: ",tc.actualEditingNode),!0===e){if(tc.SceneHub.nowEditingNodes.includes(tc.actualEditingNode.nid))return tc.SUI.createMessageLabel("bannerEditor",.8,.4,"Another editor is editing this node",.04,3e3),void console.log("Another editor is editing this node");tc.getUINode("editModeLabelMessage").setText("Now editing "+tc.actualEditingNode.nid),tc.getUINode("verticalToolbarEditor")||tc.SUI.verticalToolbarEditor("verticalToolbarEditor",tc.actualEditingNode).setPosition(0,-.35,0).attachTo(tc.getUINode("editModeLabelMessage"))}else tc.getUINode("verticalToolbarEditor")&&tc.getUINode("verticalToolbarEditor").delete(),tc.actualEditingNode.nowDragging=e,tc.actualEditingNode.nowScaling=e,tc.actualEditingNode.nowRotating=e;tc.actualEditingNode.nowEditing=e,!0===tc.actualEditingNode.nowEditing?tc.Photon.fireEvent("StartEditNode",tc.actualEditingNode.nid):tc.Photon.fireEvent("StopEditNode",tc.actualEditingNode.nid)}}positionEvent(e){if(tc.actualEditingNode.nowDragging&&tc._mainClick)if(tc.actualEditingNode.isImported){if(tc.actualEditingNode.parent){const t=tc.actualEditingNode.parent,n=t.position.y;t.setPosition(e.x,n,e.z,!0)}}else{const t=tc.actualEditingNode.position.y;tc.actualEditingNode.setPosition(e.x,t,e.z,!0)}}setMaterial(e,t=""){return this.userData.cMat=e,this.traverse((t=>{t.isMesh&&(t.material=e),t.type&&(this.userData.cMat=e)})),""!==t&&(tc.Photon.fireEvent("NodeChangeMaterial",{nid:this.nid,material_id:t}),tc.Photon.updateSceneState(this.nid,t)),this}setMaterialById(e,t=!1){let n=tc.MatHub.getMaterial(e);return this.setMaterial.apply(this,t?[n,e]:[n]),this}getMaterial(){return this.userData.cMat}setDefaultAndHighlightMaterials(e,t){return this.userData.matSTDId=e,this.setMaterialById(e),this.userData.matHLId=t,console.log("BAU",t),this}highlight(){return this.userData.matHLId&&(console.log("HIGH",this.userData.matHLId),this.setMaterialById(this.userData.matHLId,!0)),this}restoreDefaultMaterial(){return this.userData.matSTDId&&this.setMaterialById(this.userData.matSTDId,!0),this}setOpacity(e){return this.traverse((t=>{t.isMesh&&(t.material.opacity=e)})),this}setShadowCast(e){return this.castShadow=e,this.traverse((t=>{t.isMesh&&(t.castShadow=e)})),this}setShadowReceive(e){return this.receiveShadow=e,this.traverse((t=>{t.isMesh&&(t.receiveShadow=e)})),this}setEnvMap(e){return this.traverse((t=>{t.isMesh&&(t.material.envMap=e)})),this}assignLightProbe(e){return this.traverse((t=>{t.isMesh&&t.geometry&&tc.Utils.assignLightProbeToMesh(e,t)})),this}assignLightProbesByProximity(){return 0===tc._lps.length||this.traverse((e=>{if(e.isMesh&&e.geometry){let t,n,i=new THREE.Vector3;(new THREE.Box3).setFromObject(e).getCenter(i);for(let e in tc._lps){let r=tc._lps[e],a=i.distanceToSquared(r.pos);(void 0===t||a<n)&&(n=a,t=r)}t&&tc.Utils.assignLightProbeToMesh(t,e)}})),this}clearLightProbing(){return this.traverse((e=>{e.isMesh&&e.geometry&&(tc.Utils.clearLightProbeFromMesh(e),e.material&&(e.material.envMap.dispose(),e.material.needsUpdate=!0))})),this}updateLightProbes=()=>(this.traverse((e=>{if(e.isMesh&&e.geometry){let t=e.userData.LP;void 0!==t&&(t.update(),e.material.envMap=t.getEnvTex(),e.material.needsUpdate=!0)}})),this);duplicate(e=!0){let t=this.clone();return e&&(console.log("traversaaaaaaaaaaaaaaaaaaaaaaaa"),t.traverse((e=>{e.isMesh&&(e.material=e.material.clone())}))),t.type=this.type,t}delete(){let e=this.parent;void 0!==e&&void 0!==e.nid?e.removeChild(this):tc._rootSem.remove(this)}removeChild(e){if(void 0!==e){e.nid,void 0!==e.nid&&delete this._nodes[e.nid],e.parent=void 0;try{return e.traverse((e=>{e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})),this.remove(e),this}catch(e){return}}}removeChildren(){for(let e=this.children.length-1;e>=0;e--)this.removeChild(this.children[e]);return this}attachTo(e){let t="string"==typeof e?this._nodes[e]:e;return t&&(t.add(this),void 0!==t.userData.cMat&&(this.userData.cMat=t.userData.cMat),void 0!==t.bPickable&&(this.bPickable=t.bPickable)),t}attachToRoot(){return this._rootG.add(this),void 0!==this._rootG.userData.cMat&&(this.userData.cMat=this._rootG.userData.cMat),void 0!==this._rootG.bPickable&&(this.bPickable=this._rootG.bPickable),this._rootG}getBound(){return this.dirtyBound(),this._bs}getBoxBound(){return this.boxBound(),this._bb}dirtyBound(){return(new THREE.Box3).setFromObject(this).getBoundingSphere(this._bs),this}boxBound(){return this._bb=(new THREE.Box3).setFromObject(this),this}autoFit(e,t){if(this.dirtyBound(),e&&(this.position.copy(this._bs.center),this.position.multiplyScalar(-1)),t&&t>0&&this._bs.radius>0){let e=t/this._bs.radius;this.scale.set(e,e,e)}}autoFitToSpawn(e,t,n){if(this.dirtyBound(),e&&(this.position.copy(this._bs.center),this.position.multiplyScalar(-1)),t&&t>0&&this._bs.radius>0){let e=t/this._bs.radius;n.scale.set(e,e,e)}}autoPlaceOnSpawn(e){this.setPosition(void 0,e,void 0)}getBoundingBoxForSketchfabNodes(){new THREE.Box3,new THREE.Box3;const e=this.children[2],t=e.getBound();console.log("SK NODE BS: ",t);const n=(new THREE.Box3).setFromObject(e);return console.log("SK NODE BB: ",n),this}setPosition(e,t,n,i=!1){if(e instanceof THREE.Vector3)this.isImported?this.parent.position.copy(e):this.position.copy(e);else if(e=void 0===e?this.position.x:e,t=void 0===t?this.position.y:t,n=void 0===n?this.position.z:n,this.isImported)this.parent.position.set(e,t,n);else if(this.parent&&this.parent.nid&&this.parent.nid.includes("objcount")){if(this.parent.parent&&this.parent.parent.nid&&HATHOR._actState===HATHOR.SELECTION_EDITNODES){const i=this.parent.parent.position.x,r=this.parent.parent.position.z;this.position.set(e-i,t,n-r)}}else this.position.set(e,t,n);if(i){tc.Photon.fireEvent("NodeNewPosition",{nid:this.nid,pos:{x:e,y:t,z:n}}),tc.Photon.updateSceneState(this.nid);let i={scenegraph:{}};i.scenegraph.nodes={},this.isImported?(i.scenegraph.nodes[this.parent.nid]={},i.scenegraph.nodes[this.parent.nid].urls=this.parent.sketchfabUrl,i.scenegraph.nodes[this.parent.nid].assetId=this.parent.assetId,i.scenegraph.nodes[this.parent.nid].editable=!0,i.scenegraph.nodes[this.parent.nid].isImported=this.parent.isImported,i.scenegraph.nodes[this.parent.nid].isImporter=this.parent.isImporter,i.scenegraph.nodes[this.parent.nid].isPivotWrapper=this.parent.isPivotWrapper,i.scenegraph.nodes[this.parent.nid].transform={},i.scenegraph.nodes[this.parent.nid].transform.scale=[this.parent.scale.x,this.parent.scale.y,this.parent.scale.z],i.scenegraph.nodes[this.parent.nid].transform.rotation=[this.parent.rotation.x,this.parent.rotation.y,this.parent.rotation.z],i.scenegraph.nodes[this.parent.nid].transform.position=[this.parent.position.x,this.parent.position.y,this.parent.position.z]):(i.scenegraph.nodes[this.nid]={},i.scenegraph.nodes[this.nid].urls=this.sketchfabUrl,i.scenegraph.nodes[this.nid].assetId=this.assetId,i.scenegraph.nodes[this.nid].editable=!0,i.scenegraph.nodes[this.nid].isImported=this.isImported,i.scenegraph.nodes[this.nid].isImporter=this.isImporter,i.scenegraph.nodes[this.nid].isPivotWrapper=this.isPivotWrapper,i.scenegraph.nodes[this.nid].transform={},i.scenegraph.nodes[this.nid].transform.scale=[this.scale.x,this.scale.y,this.scale.z],i.scenegraph.nodes[this.nid].transform.rotation=[this.rotation.x,this.rotation.y,this.rotation.z],i.scenegraph.nodes[this.nid].transform.position=[this.position.x,this.position.y,this.position.z]),tc.SceneHub.sendEdit(i,tc.SceneHub.MODE_ADD)}return this}getPosition(){return this.position}addToPosition(e,t,n){let i=this.getPosition(),r=i.x+e,a=i.y+t,o=i.z+n;this.setPosition(r,a,o)}setScale(e,t,n,i=!1){if(e instanceof THREE.Vector3?this.isImported&&this.parent?this.parent.scale.copy(e):this.scale.copy(e):(void 0===t&&(t=e,n=e),this.isImported&&this.parent?this.parent.scale.set(e,t,n):this.scale.set(e,t,n)),i){tc.Photon.fireEvent("NodeNewScale",{nid:this.nid,scale:{x:e,y:t,z:n}}),tc.Photon.updateSceneState(this.nid);let i={scenegraph:{}};i.scenegraph.nodes={},this.isImported?(i.scenegraph.nodes[this.parent.nid]={},i.scenegraph.nodes[this.parent.nid].urls=this.parent.sketchfabUrl,i.scenegraph.nodes[this.parent.nid].assetId=this.parent.assetId,i.scenegraph.nodes[this.parent.nid].editable=!0,i.scenegraph.nodes[this.parent.nid].isImported=this.parent.isImported,i.scenegraph.nodes[this.parent.nid].isImporter=this.parent.isImporter,i.scenegraph.nodes[this.parent.nid].isPivotWrapper=this.parent.isPivotWrapper,i.scenegraph.nodes[this.parent.nid].transform={},i.scenegraph.nodes[this.parent.nid].transform.scale=[this.parent.scale.x,this.parent.scale.y,this.parent.scale.z],i.scenegraph.nodes[this.parent.nid].transform.rotation=[this.parent.rotation.x,this.parent.rotation.y,this.parent.rotation.z],i.scenegraph.nodes[this.parent.nid].transform.position=[this.parent.position.x,this.parent.position.y,this.parent.position.z]):(i.scenegraph.nodes[this.nid]={},i.scenegraph.nodes[this.nid].urls=this.sketchfabUrl,i.scenegraph.nodes[this.nid].assetId=this.assetId,i.scenegraph.nodes[this.nid].editable=!0,i.scenegraph.nodes[this.nid].isImported=this.isImported,i.scenegraph.nodes[this.nid].isImporter=this.isImporter,i.scenegraph.nodes[this.nid].isPivotWrapper=this.isPivotWrapper,i.scenegraph.nodes[this.nid].transform={},i.scenegraph.nodes[this.nid].transform.scale=[this.scale.x,this.scale.y,this.scale.z],i.scenegraph.nodes[this.nid].transform.rotation=[this.rotation.x,this.rotation.y,this.rotation.z],i.scenegraph.nodes[this.nid].transform.position=[this.position.x,this.position.y,this.position.z]),tc.SceneHub.sendEdit(i,tc.SceneHub.MODE_ADD)}return this}incrementScale(){return this.setScale(this.scale.x+.1,this.scale.y+.1,this.scale.z+.1,!0),this}positiveRot(){switch(tc._lastSelectedAxis){case"x":this.setRotation(this.rotation.x+.05,this.rotation.y,this.rotation.z,!0);break;case"y":this.setRotation(this.rotation.x,this.rotation.y+.05,this.rotation.z,!0);break;case"z":this.setRotation(this.rotation.x,this.rotation.y,this.rotation.z+.05,!0)}return this}decrementScale(){return this.setScale(this.scale.x-.1,this.scale.y-.1,this.scale.z-.1,!0),this}negativeRot(){switch(tc._lastSelectedAxis){case"x":this.setRotation(this.rotation.x-.05,this.rotation.y,this.rotation.z,!0);break;case"y":this.setRotation(this.rotation.x,this.rotation.y-.05,this.rotation.z,!0);break;case"z":this.setRotation(this.rotation.x,this.rotation.y,this.rotation.z-.05,!0)}return this}getScale(){return this.scale}setRotation(e,t,n,i=!1){let r;if(this.isImported?(r=this.parent,e instanceof THREE.Vector3?r.rotation.copy(e):(e=void 0===e?r.rotation.x:e,t=void 0===t?r.rotation.y:t,n=void 0===n?r.rotation.z:n,r.rotation.set(e,t,n))):e instanceof THREE.Vector3?this.rotation.copy(e):(e=void 0===e?this.rotation.x:e,t=void 0===t?this.rotation.y:t,n=void 0===n?this.rotation.z:n,this.rotation.set(e,t,n)),i){tc.Photon.fireEvent("NodeNewRotation",{nid:this.nid,rot:{x:e,y:t,z:n}}),tc.Photon.updateSceneState(this.nid),tc.snodes;let i={scenegraph:{}};i.scenegraph.nodes={},i.scenegraph.edges={},this.isImported?(i.scenegraph.nodes[this.parent.nid]={},i.scenegraph.nodes[this.parent.nid].urls=this.parent.sketchfabUrl,i.scenegraph.nodes[this.parent.nid].assetId=this.parent.assetId,i.scenegraph.nodes[this.parent.nid].editable=!0,i.scenegraph.nodes[this.parent.nid].isImported=this.parent.isImported,i.scenegraph.nodes[this.parent.nid].isImporter=this.parent.isImporter,i.scenegraph.nodes[this.parent.nid].isPivotWrapper=this.parent.isPivotWrapper,i.scenegraph.nodes[this.parent.nid].transform={},i.scenegraph.nodes[this.parent.nid].transform.scale=[this.parent.scale.x,this.parent.scale.y,this.parent.scale.z],i.scenegraph.nodes[this.parent.nid].transform.rotation=[this.parent.rotation.x,this.parent.rotation.y,this.parent.rotation.z],i.scenegraph.nodes[this.parent.nid].transform.position=[this.parent.position.x,this.parent.position.y,this.parent.position.z]):(i.scenegraph.nodes[this.nid]={},i.scenegraph.nodes[this.nid].urls=this.sketchfabUrl,i.scenegraph.nodes[this.nid].assetId=this.assetId,i.scenegraph.nodes[this.nid].editable=!0,i.scenegraph.nodes[this.nid].isImported=this.isImported,i.scenegraph.nodes[this.nid].isImporter=this.isImporter,i.scenegraph.nodes[this.nid].isPivotWrapper=this.isPivotWrapper,i.scenegraph.nodes[this.nid].transform={},i.scenegraph.nodes[this.nid].transform.scale=[this.scale.x,this.scale.y,this.scale.z],i.scenegraph.nodes[this.nid].transform.rotation=[this.rotation.x,this.rotation.y,this.rotation.z],i.scenegraph.nodes[this.nid].transform.position=[this.position.x,this.position.y,this.position.z]),tc.SceneHub.sendEdit(i,tc.SceneHub.MODE_ADD)}return this}getRotation(){return this.rotation}orientToCamera(){return this.quaternion.copy(tc.Nav._qOri),this}setYup(){return this.rotation.set(-1.57079632679,0,0),this}addTransform(e){let t;return"string"==typeof e&&(t=tc.Utils.parseTransformString(e)),void 0===t||(void 0===this._tlist&&(this._tlist=[]),this._tlist.push(t)),this}load(e,t){if(void 0===e)return this;let n=this;if(e=tc.Utils.resolveCollectionURL(e),tc.Utils.tryLoadFromService(e,n))return t&&t(),n;let i=tc.Utils.getFileExtension(e);if("json"===i)return tc.MRes.loadTileSetFromURL(e,n),t&&t(),n;if("ifc"===i&&void 0!==tc._ifcLoader)return tc._ifcLoader.load(e,(e=>{n.add(e),tc._bqScene=!0,tc.Utils.modelVisitor(n,e),n.bPickable&&n.enablePicking(),n.dirtyBound(),t&&t()})),n;if(tc._resHandler&&tc._resHandler[i])return tc._resHandler[i](e,n),n;if(n._bCloneOnLoadHit&&void 0!==tc._assetsManager[e])return tc._assetsManager[e].then((e=>{let i=e.clone();if(tc.Utils.modelVisitor(n,i),void 0!==n._tlist)for(let e in n._tlist)n._tlist[e].add(i.clone()),n.add(n._tlist[e]);else n.add(i);t&&t()})),n;tc._assetReqNew(e);let r=new Promise(((i,r)=>{tc._aLoader.load(e,(r=>{let a=r.scene||r.scene[0];if(tc.Utils.modelVisitor(n,a),void 0!==n._tlist)for(let e in n._tlist)n._tlist[e].add(a.clone()),n.add(n._tlist[e]);else n.add(a);tc.Utils.registerAniMixers(n,r),tc.CC.extract(r),i(a),console.log("Model "+e+" loaded"),console.log("%cModel loaded","color:green"),tc._assetReqComplete(e),n.type===tc.NTYPES.SCENE?tc._bqScene=!0:n.type===tc.NTYPES.SEM&&(tc._bqSem=!0),n.bPickable&&n.enablePicking(),n.dirtyBound(),n.boxBound(),t&&t()}),void 0,(n=>{console.log(n),console.log("%cError loading model "+e,"color:red"),tc._assetReqComplete(e),t&&t()}))}));return n._bCloneOnLoadHit&&(tc._assetsManager[e]=r),this}loadProm(e){return new Promise(((t,n)=>{void 0===e&&n("URL is undefined");let i=this;if(e=tc.Utils.resolveCollectionURL(e),tc.Utils.tryLoadFromService(e,i))t(i);else{let r=tc.Utils.getFileExtension(e);"json"===r?(tc.MRes.loadTileSetFromURL(e,i),t(i)):"ifc"===r&&void 0!==tc._ifcLoader?tc._ifcLoader.load(e,(e=>{i.add(e),tc._bqScene=!0,tc.Utils.modelVisitor(i,e),i.bPickable&&i.enablePicking(),i.dirtyBound(),t(i)})):tc._resHandler&&tc._resHandler[r]?(tc._resHandler[r](e,i),t(i)):i._bCloneOnLoadHit&&void 0!==tc._assetsManager[e]?tc._assetsManager[e].then((e=>{let n=e.clone();if(tc.Utils.modelVisitor(i,n),void 0!==i._tlist)for(let e in i._tlist)i._tlist[e].add(n.clone()),i.add(i._tlist[e]);else i.add(n);onComplete&&onComplete(),t(i)})):(tc._assetReqNew(e),tc._aLoader.load(e,(n=>{let r=n.scene||n.scene[0];if(tc.Utils.modelVisitor(i,r),void 0!==i._tlist)for(let e in i._tlist)i._tlist[e].add(r.clone()),i.add(i._tlist[e]);else i.add(r);tc.Utils.registerAniMixers(i,n),tc.CC.extract(n),t(r),tc._assetReqComplete(e),i.type===tc.NTYPES.SCENE?tc._bqScene=!0:i.type===tc.NTYPES.SEM&&(tc._bqSem=!0),i.bPickable&&i.enablePicking(),i.dirtyBound(),i.boxBound()}),void 0,(t=>{console.log("Error loading model "+e,"color:red"),tc._assetReqComplete(e),n(t)})))}}))}exportAs(e){return tc.Utils.exportNode(this,e),this}highlightOnHover(e){return void 0===e&&(e=!0),e?(this.setOnHover((()=>{this.highlight()})),this.setOnLeave((()=>{this.restoreDefaultMaterial()}))):(this.setOnHover((()=>{})),this.setOnLeave((()=>{}))),this}setOnHover(e){return this.onHover=e,this}setOnLeave(e){return this.onLeave=e,this}setOnSelect(e){return this.onSelect=e,this}setEditable(){return this.setOnSelect((()=>{!0===tc.SceneHub.editNodes&&(console.log("HOVERED NODE BEFORE SetNowEditing: ",this),tc.actualEditingNode=this,this.setNowEditing(!0))})),tc.on("MouseWheel",(e=>{if(this.nowEditing&&this.nowHover&&tc.SceneHub.editNodes)switch(tc._lastSelectedEditMode){case"scale":if(e<0)if(this.isImported){const e={action:"scale",node:this,scale:this.parent.scale.clone()};tc.undoStack.push(e),this.parent.incrementScale()}else if(this.isPivotWrapper){const e={action:"scale",node:this.children[0],scale:this.children[0].scale.clone()};tc.undoStack.push(e),this.children[0].incrementScale()}else{const e={action:"scale",node:this,scale:this.scale.clone()};tc.undoStack.push(e),this.incrementScale()}else if(e>0)if(this.isImported){const e={action:"scale",node:this,scale:this.parent.scale.clone()};tc.undoStack.push(e),this.parent.decrementScale()}else if(this.isPivotWrapper){const e={action:"scale",node:this.children[0],scale:this.children[0].scale.clone()};tc.undoStack.push(e),this.children[0].decrementScale()}else{const e={action:"scale",node:this,scale:this.scale.clone()};tc.undoStack.push(e),this.decrementScale()}break;case"rot":const t=1e-4*e;switch(console.log("DELTA: ",t),tc._lastSelectedAxis){case"x":if(this.isImported){const e={action:"rot",node:this,rot:this.parent.rotation.clone()};tc.undoStack.push(e),this.setRotation(this.parent.rotation.x-t,this.parent.rotation.y,this.parent.rotation.z,!0)}else if(this.isPivotWrapper){const e={action:"rot",node:this.children[0],rot:this.children[0].rotation.clone()};tc.undoStack.push(e),this.setRotation(this.children[0].rotation.x-t,this.children[0].rotation.y,this.children[0].rotation.z,!0)}else{const e={action:"rot",node:this,rot:this.rotation.clone()};tc.undoStack.push(e),this.setRotation(this.rotation.x-t,this.rotation.y,this.rotation.z,!0)}break;case"y":if(this.isImported){const e={action:"rot",node:this,rot:this.parent.rotation.clone()};tc.undoStack.push(e),this.setRotation(this.parent.rotation.x,this.parent.rotation.y-t,this.parent.rotation.z,!0)}else if(this.isPivotWrapper){const e={action:"rot",node:this.children[0],rot:this.children[0].rotation.clone()};tc.undoStack.push(e),this.setRotation(this.children[0].rotation.x,this.children[0].rotation.y-t,this.children[0].rotation.z,!0)}else{const e={action:"rot",node:this,rot:this.rotation.clone()};tc.undoStack.push(e),this.setRotation(this.rotation.x,this.rotation.y-t,this.rotation.z,!0)}break;case"z":if(this.isImported){const e={action:"rot",node:this,rot:this.parent.rotation.clone()};tc.undoStack.push(e),this.setRotation(this.parent.rotation.x,this.parent.rotation.y,this.parent.rotation.z-t,!0)}else if(this.isPivotWrapper){const e={action:"rot",node:this.children[0],rot:this.children[0].rotation.clone()};tc.undoStack.push(e),this.setRotation(this.children[0].rotation.x,this.children[0].rotation.y,this.children[0].rotation.z-t,!0)}else{const e={action:"rot",node:this,rot:this.rotation.clone()};tc.undoStack.push(e),this.setRotation(this.rotation.x,this.rotation.y,this.rotation.z-t,!0)}}}})),tc.on("ChangedRotationAxis",(e=>{tc.actualEditingNode.isPivotWrapper?tc.getUINode("editModeLabelMessage").setText("Now rotating "+tc.actualEditingNode.children[0].nid+" on "+e):tc.getUINode("editModeLabelMessage").setText("Now rotating "+tc.actualEditingNode.nid+" on "+e)})),this}loadCesiumIONAsset(e){return tc.MRes.loadCesiumIONAsset(e,this),this}async loadSketchfabAsset(e){let t=tc.getAPIToken("sketchfab"),n=this;if(null==t&&(console.log("A valid Sketchfab token is required"),t=prompt("Please enter a valid Sketchfab token:"),null==t||""===t))return this;let i="https://api.sketchfab.com/v3/models/"+e+"/download",r={method:"GET",headers:{Authorization:"Token "+t},mode:"cors"};return await fetch(i,r).then((e=>e.json())).then((async e=>{if(e.glb){let t=e.glb.url;return await n.loadProm(t),n}})),this}async loadSketchfabAssetProm(e){return new Promise((async(t,n)=>{let i=tc.getAPIToken("sketchfab"),r=this;if(null==i&&(console.log("A valid Sketchfab token is required"),i=prompt("Please enter a valid Sketchfab token:"),null==i||""===i))return void n("Invalid Sketchfab token");let a="https://api.sketchfab.com/v3/models/"+e+"/download",o={method:"GET",headers:{Authorization:"Token "+i},mode:"cors"};await fetch(a,o).then((e=>e.json())).then((e=>{if(e.glb){let n=e.glb.url;r.loadProm(n),t(r)}else n("Unsupported Sketchfab asset format")})).catch((e=>{n(e)}))}))}}const t=e;let r={init:()=>{r.evLocal={},r.evNetwork={},ATON.on=r.on,ATON.fireEvent=r.fireEvent,ATON.clearEventHandlers=r.clearEventHandlers},clearEventHandlers:e=>{r.evLocal[e]=[],r.evNetwork[e]=[]},executeHandlers:(e,t)=>{if(e)for(let n=0;n<e.length;n++){const i=e[n];i&&i(t)}},on:(e,t,n)=>{if(void 0!==t){const n=r.evLocal;void 0===n[e]&&(n[e]=[]),n[e].push(t)}void 0!==n&&ATON.Photon.on(e,n)},fireEvent:(e,t,n)=>{const i=r.evLocal[e];r.executeHandlers(i,t),n&&ATON.Photon.fireEvent(e,t)}};const a=r;let o={init:()=>{o.materials={},o.colors={},o._loader=new THREE.MaterialLoader,o._uSem={time:{type:"float",value:0},tint:{type:"vec4",value:new THREE.Vector4(.2,.2,1,.2)}},o.addDefaults()},getDefVertexShader:()=>"\n        varying vec3 vPositionW;\n        varying vec3 vNormalW;\n        varying vec3 vNormalV;\n        varying vec2 vUv;\n\n        void main(){\n            vUv = uv;\n\n            vPositionW = ( modelMatrix * vec4( position, 1.0 )).xyz;\n            vNormalV   = normalize( vec3( normalMatrix * normal ));\n            vNormalW   = ( modelMatrix * vec4(normal, 0.0 )).xyz;\n\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n    ",addDefaults:()=>{o.colors.white=new THREE.Color(1,1,1),o.colors.black=new THREE.Color(0,0,0),o.colors.green=new THREE.Color(0,1,0),o.colors.yellow=new THREE.Color(1,1,0),o.colors.red=new THREE.Color(1,0,0),o.colors.blue=new THREE.Color(0,0,1),o.colors.orange=new THREE.Color(1,.5,0),o.colors.lightgrey=new THREE.Color(.22,.22,.22),o.colors.defUI=new THREE.Color(.85,1,.95),o.colors.sem=new THREE.Color(0,1,.5),o.colors.darksem=new THREE.Color(0,0,.1),o.materials.defUI=new THREE.ShaderMaterial({uniforms:{tint:{type:"vec3",value:o.colors.defUI},opacity:{type:"float",value:0}},vertexShader:o.getDefVertexShader(),fragmentShader:"\n            varying vec3 vPositionW;\n\t\t    varying vec3 vNormalW;\n            varying vec3 vNormalV;\n            uniform vec3 tint;\n            //uniform vec3 base;\n            uniform float opacity;\n\n\t\t    void main(){\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\n\n                float f;\n\t\t        //f = dot(vNormalV, viewDirectionW);\n                f = dot(vNormalV, vec3(0,0,1));\n\t\t        f = clamp(1.0-f, 0.0, 1.0);\n                f *= f;\n\n                f = mix(opacity, 1.0 + opacity, f);\n                f = clamp(f, 0.0,1.0);\n\n                //vec3 col = mix(base,tint, f);\n\t\t        //gl_FragColor = vec4(col, f * opacity);\n\n                gl_FragColor = vec4(tint, f);\n\t\t    }\n        ",transparent:!0,depthWrite:!1}),o.addMaterial("fullyTransparent",new THREE.MeshBasicMaterial({transparent:!0,depthWrite:!1,opacity:0})),o.addMaterial("black",new THREE.MeshBasicMaterial({color:o.colors.black,transparent:!0,depthWrite:!0,side:THREE.DoubleSide,opacity:.8})),o.addMaterial("red",new THREE.MeshBasicMaterial({color:o.colors.red,transparent:!0,depthWrite:!0,side:THREE.DoubleSide,opacity:1})),o.materials.selector=o.materials.defUI.clone(),o.materials.outline=new THREE.MeshBasicMaterial({color:o.colors.green,side:THREE.BackSide,transparent:!0,depthWrite:!1,opacity:.2}),o.materials.controllerRay=o.materials.defUI.clone(),o.materials.controllerRay.uniforms.tint.value=o.colors.white,o.materials.xray=o.materials.defUI.clone(),o.materials.xray.uniforms.tint.value=o.colors.white,o.materials.xray.uniforms.opacity.value=.5,o.materials.teleportLoc=new THREE.MeshBasicMaterial({transparent:!0,opacity:1,depthWrite:!1,side:THREE.DoubleSide}),ATON.Utils.textureLoader.load(ATON.PATH_RES+"grad.png",(e=>{o.materials.teleportLoc.map=e})),o.materials.measurement=new THREE.MeshBasicMaterial({color:o.colors.white,transparent:!0,depthWrite:!1,opacity:.5,depthTest:!1}),o.addMaterial("semanticShape",o.materials.semanticShape=new THREE.ShaderMaterial({uniforms:o._uSem,vertexShader:o.getDefVertexShader(),fragmentShader:"\n            varying vec3 vPositionW;\n\t\t    varying vec3 vNormalW;\n            varying vec3 vNormalV;\n\n            uniform float time;\n            uniform vec4 tint;\n\n\t\t    void main(){\n\t\t        //vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\n\n                //float ff = dot(vNormalV, vec3(0,0,1));\n\t\t        //ff = clamp(1.0-ff, 0.0, 1.0);\n\n                float f = (1.0 * cos(time*2.0)); // - 0.5;\n                //f = cos(time + (vPositionW.y*10.0));\n                f = clamp(f, 0.0,1.0);\n\n\t\t        gl_FragColor = vec4(tint.rgb, tint.a * f);\n                //gl_FragColor = vec4(tint.rgb, ff);\n\t\t    }\n        ",transparent:!0,depthWrite:!1})),o.addMaterial("semanticShapeHL",new THREE.MeshBasicMaterial({color:o.colors.sem,transparent:!0,depthWrite:!1,opacity:.2})),o.addMaterial("semanticShapeEdit",new THREE.MeshBasicMaterial({color:o.colors.orange,transparent:!0,depthWrite:!1,opacity:.5})),o.materials.transWhite=new THREE.MeshBasicMaterial({color:o.colors.white,transparent:!0,depthWrite:!1,side:THREE.DoubleSide,opacity:.2}),o.materials.transBlack=new THREE.MeshBasicMaterial({color:o.colors.black,transparent:!0,depthWrite:!1,side:THREE.DoubleSide,opacity:.2}),o.materials.wireframe=new THREE.MeshBasicMaterial({color:o.colors.black,transparent:!0,depthWrite:!1,opacity:.1,wireframe:!0}),o.materials.normSlope=new THREE.ShaderMaterial({vertexShader:o.getDefVertexShader(),fragmentShader:"\n            varying vec3 vPositionW;\n\t\t    varying vec3 vNormalW;\n\n\t\t    void main(){\n                vec4 A = vec4(0,1,0, 1.0);\n                vec4 B = vec4(1,0,0, 1.0);\n\n                float f;\n                f = dot(vNormalW, vec3(0,1,0));\n\n\t\t        gl_FragColor = mix(B,A, f);\n\t\t    }\n        "}),o.materials.gradient=new THREE.ShaderMaterial({uniforms:{range:{type:"vec2",value:new THREE.Vector2(-4,5)}},vertexShader:o.getDefVertexShader(),fragmentShader:"\n            varying vec3 vPositionW;\n\n            uniform vec2 range;\n\n\t\t    void main(){\n                vec4 A = vec4(0,0,0, 1.0);\n                vec4 B = vec4(0,0.5,1, 1.0);\n\n                float t = (vPositionW.y - range.x)/(range.y - range.x);\n                t = clamp(t, 0.0,1.0);\n\n\t\t        gl_FragColor = mix(A,B, t);\n\t\t    }\n        "}),o.materials.lp=new THREE.ShaderMaterial({vertexShader:o.getDefVertexShader(),fragmentShader:"\n            varying vec3 vPositionW;\n\t\t    varying vec3 vNormalW;\n            varying vec3 vNormalV;\n\n\t\t    void main(){\n\t\t        vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\n\n                float f;\n\t\t        //f = dot(viewDirectionW, vNormalW);\n                f = dot(vNormalV, vec3(0,0,1));\n\t\t        f = clamp(1.0 - f, 0.0, 1.0);\n\n\t\t        gl_FragColor = vec4(1.0,1.0,1.0, f);\n\t\t    }\n        ",transparent:!0,depthWrite:!1});let e=(new THREE.TextureLoader).load(ATON.PATH_RES+"point-mask.png");e.generateMipmaps=!1,o.materials.point=new THREE.PointsMaterial({vertexColors:!0,alphaMap:e,alphaTest:.5,depthTest:!0,transparent:!1,size:4,sizeAttenuation:!1}),o.materials.chromakey=new THREE.ShaderMaterial({uniforms:{tBase:{type:"t"},keycolor:{type:"vec4",value:new THREE.Vector4(0,1,0,0)},similarity:{type:"float",value:.4},smoothness:{type:"float",value:.08},spill:{type:"float",value:.1}},vertexShader:o.getDefVertexShader(),fragmentShader:"\n            uniform sampler2D tBase;\n            uniform vec4 keycolor;\n\n            uniform float similarity;\n            uniform float smoothness;\n            uniform float spill;\n\n            varying vec2 vUv;\n\n            // From https://github.com/libretro/glsl-shaders/blob/master/nnedi3/shaders/rgb-to-yuv.glsl\n            vec2 RGBtoUV(vec3 rgb){\n                return vec2(\n                    rgb.r * -0.169 + rgb.g * -0.331 + rgb.b *  0.5    + 0.5,\n                    rgb.r *  0.5   + rgb.g * -0.419 + rgb.b * -0.081  + 0.5\n                );\n            }\n\n            // From https://godotshaders.com/shader/green-screen-chromakey/\n\t\t    void main(){\n\t\t        vec4 frag = texture2D(tBase, vUv);\n                vec4 orig = frag;\n\n                float chromaDist = distance(RGBtoUV(frag.rgb), RGBtoUV(keycolor.rgb));\n\n                float baseMask = chromaDist - similarity;\n                float fullMask = pow(clamp(baseMask / smoothness, 0.0,1.0), 1.5);\n                frag.a         = fullMask;\n              \n                float spillVal = pow(clamp(baseMask / spill, 0.0,1.0), 1.5);\n                float desat    = clamp(frag.r * 0.2126 + frag.g * 0.7152 + frag.b * 0.0722, 0.0,1.0);\n                frag.rgb       = mix(vec3(desat, desat, desat), frag.rgb, spillVal);\n\n                frag = mix(orig,frag, keycolor.w);\n\n\t\t        gl_FragColor = frag;\n\t\t    }\n        ",transparent:!0,side:THREE.DoubleSide})},addMaterial:(e,t)=>{o.materials[e]?console.log("MatHub: material "+e+" already registered"):o.materials[e]=t},loadMaterial:(e,t)=>{o._loader.load(t,(t=>{o.addMaterial(e,t)}),void 0,(e=>{console.log(e)}))},getMaterial:e=>o.materials[e],update:()=>{o._uSem.time.value+=ATON._dt}};const s=o;let l={TSTRING_SEPARATOR:" ",scene_hierarchy:{},init:()=>{ATON.device={},l.geomUnitSphere=new THREE.SphereGeometry(1,32,32),l.geomUnitCube=new THREE.BoxGeometry,l.exporterGLTF=void 0,l.exporterOBJ=void 0,l.exporterUSDZ=void 0,l._dlink=document.createElement("a"),l._dlink.style.display="none",document.body.appendChild(l._dlink),l.textureLoader=new THREE.TextureLoader,l._bvhBounds=0,l.stats={},l.stats.numVertices=0,l.stats.numTris=0},generateID:e=>(void 0===e&&(e="id"),e+"-"+Math.random().toString(36).substr(2,9)),goToURL:e=>{window.location.href=e},goToScene:(e,t)=>{if(void 0===e)return;if(e.length<2)return;let n=ATON.PATH_FE+e;void 0!==t&&(n+="&photon="+t),window.location.href=n},isConnectionSecure:()=>window.isSecureContext,isLocalhost:()=>!!window.location.origin.includes("localhost")||!!window.location.origin.includes("127.0.0.1"),showBVHbounds:e=>{e>0&&(l._bvhBounds=e)},_addBVHbounds:(e,t)=>{if(void 0===e)return;let n=new ThreeMeshBVH.MeshBVHVisualizer(e,t);n.displayParents=!0,n.update(),e.parent.add(n)},profileDevice:()=>{ATON.device.isMobile=!1,ATON.device.isMobile=!(!/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)&&!/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))),ATON.device.xrSupported={},ATON.device.xrSupported["immersive-vr"]=!1,ATON.device.xrSupported["immersive-ar"]=!1,"xr"in navigator&&(navigator.xr.isSessionSupported("immersive-vr").then((e=>{ATON.device.xrSupported["immersive-vr"]=!!e,console.log("WebXR VR session support: "+ATON.device.xrSupported["immersive-vr"]),ATON.fireEvent("XR_support",{type:"immersive-vr",v:ATON.device.xrSupported["immersive-vr"]})})),navigator.xr.isSessionSupported("immersive-ar").then((e=>{ATON.device.xrSupported["immersive-ar"]=!!e,console.log("WebXR AR session support: "+ATON.device.xrSupported["immersive-ar"]),ATON.fireEvent("XR_support",{type:"immersive-ar",v:ATON.device.xrSupported["immersive-ar"]})})))},profileRenderingCapabilities:()=>{if(void 0===ATON._renderer)return;let e=ATON._renderer.capabilities;void 0!==e&&(ATON.device.lowGPU=!1,e.isWebGL2||(ATON.device.lowGPU=!0),e.maxTextureSize<8192&&(ATON.device.lowGPU=!0),e.maxCubemapSize<4096&&(ATON.device.lowGPU=!0),console.log(e))},isMobile:()=>ATON.device.isMobile,isVRsupported:()=>ATON.device.xrSupported["immersive-vr"],isARsupported:()=>ATON.device.xrSupported["immersive-ar"],getFileExtension:e=>e.substr(e.lastIndexOf(".")+1).toLowerCase(),removeFileExtension:e=>e.replace(/\.[^/.]+$/,""),isVideo:e=>{let t=l.getFileExtension(e);return"mp4"===t||"webm"===t||"m3u8"===t},getBaseFolder:e=>{var t=e.lastIndexOf("/");return-1!==t?e.substring(0,t+1):""},getFilename:e=>e.split(/(\\|\/)/g).pop(),isResourceURL:e=>!!e.startsWith("http://")||!!e.startsWith("https://"),URLify:e=>{if("string"!=typeof e)return e;const t=e.match(/(((ftp|https?):\/\/)[\-\w@:%_\+.~#?,&\/\/=]+)/g);return t&&t.forEach((function(t){e=e.replace(t,"<a target='_blank' href='"+t+"'><img class='atonSmallIcon' src='"+ATON.PATH_RES+"icons/link.png'></a>")})),e},resolveCollectionURL:e=>e?(ATON._collMod&&(e=ATON._collMod(e)),e.startsWith("http")?e:ATON.PATH_COLLECTION+e):"",tryLoadFromService:(e,t)=>{if(!t)return!1;if(e.startsWith("https://cesium.com/ion/assets/")||e.startsWith("https://ion.cesium.com/assets/")){let n=e.split("/"),i=n[n.length-1];return t.loadCesiumIONAsset(i),!0}if(e.startsWith("https://assets.cesium.com/")){let n=e.split("/"),i=n[n.length-2];return t.loadCesiumIONAsset(i),!0}if(e.startsWith("https://sketchfab.com/3d-models/")){let n=e.split("-"),i=n[n.length-1];return t.loadSketchfabAsset(i),!0}for(let n in ATON._resMappers){let i=ATON._resMappers[n](e);if(void 0!==i)return t.load(i),!0}return!1},postJSON:(e,t,n,i)=>{$.ajax({url:e,type:"POST",xhrFields:{withCredentials:!0},data:JSON.stringify(t),contentType:"application/json; charset=utf-8",dataType:"json",success:e=>{n&&n(e)}}).fail((e=>{console.log(e),i&&i()}))},runAsync:e=>{const t=new Worker(URL.createObjectURL(new Blob([`postMessage((${e})());`]),{type:"application/javascript; charset=utf-8"}));return new Promise(((e,n)=>{t.onmessage=({data:n})=>{e(n),t.terminate()},t.onerror=e=>{n(e),t.terminate()}}))},mergeObject:e=>{e.updateMatrixWorld(!0);const t=[];e.traverse((e=>{if(e.isMesh){const n=e.geometry;n.applyMatrix4(e.matrixWorld),t.push(n.toNonIndexed())}}));const n=THREE.BufferGeometryUtils.mergeGeometries(t,!1),i=THREE.BufferGeometryUtils.mergeVertices(n).center(),r=new THREE.Group,a=new THREE.Mesh(i);return r.add(a),r},setPicking:(e,t,n)=>{void 0===n&&(n=!0),e.traverse((e=>{n?e.layers.enable(t):e.layers.disable(t)}))},graphPostVisitor:e=>{e.visible?console.log(e):l.setPicking(e,e.type,!1)},rotationBetweenDirections:(e,t)=>{const n=new THREE.Quaternion,i=(new THREE.Vector3).crossVectors(e,t);return n.x=i.x,n.y=i.y,n.z=i.z,n.w=1+e.clone().dot(t),n.normalize(),n},clampValue:(e,t,n)=>Math.min(Math.max(e,t),n),modelVisitor:(e,t)=>{if(void 0===t)return;if(void 0===e)return;let n=e.type;t.traverse((t=>{if(void 0!==t.name&&""!==t.name&&!t.isMesh){let e,n;t.children.length>0&&(e=t.children.map((e=>e.name))),n=t.parent?t.parent.name:"",e||(e="none"),l.scene_hierarchy[t.name]={parent:n,childs:e}}if(t.isMesh){let i;t.children.length>0&&(i=t.children.map((e=>e.name))),i||(i="none"),l.scene_hierarchy[t.name]={parent:t.parent.name,childs:i},n===ATON.NTYPES.SCENE&&(t.castShadow=!0,t.receiveShadow=!0,t.geometry&&(t.geometry.computeBoundsTree(),console.log("Computed visible BVH"),l._bvhBounds>0&&l._addBVHbounds(t,l._bvhBounds)),l.processMaterial(t.material)),n===ATON.NTYPES.SEM&&(t.material=ATON.MatHub.materials.semanticShape,t.geometry&&(t.geometry.computeBoundsTree(),console.log("Computed semantic BVH"))),e.userData.cMat&&(t.material=e.userData.cMat)}}))},processMaterial:e=>{void 0!==e&&null!==e.map&&void 0!==e.map&&(e.map.generateMipmaps=!0,e.map.anisotropy=ATON.device.isMobile?0:ATON._maxAnisotropy,e.map.minFilter=THREE.LinearMipmapLinearFilter,e.map.magFilter=THREE.LinearFilter,e.map.colorSpace=ATON._stdEncoding)},cleanupVisitor:e=>{console.log("OBJECT UTILS DIOCAAAAAAAAAAAAN: ",e),e.traverse((e=>{if(e.material)if(e.material.length)for(let t=0;t<e.material.length;++t)e.material[t].map&&e.material[t].map.dispose(),e.material[t].envMap&&e.material[t].envMap.dispose(),e.material[t].alphaMap&&e.material[t].alphaMap.dispose(),e.material[t].emissiveMap&&e.material[t].emissiveMap.dispose(),e.material[t].lightMap&&e.material[t].lightMap.dispose(),e.material[t].dispose();else e.material.map&&e.material.map.dispose(),e.material.envMap&&e.material.envMap.dispose(),e.material.alphaMap&&e.material.alphaMap.dispose(),e.material.emissiveMap&&e.material.emissiveMap.dispose(),e.material.lightMap&&e.material.lightMap.dispose(),e.material.dispose();e.userData&&e.userData.cMat&&e.userData.cMat.dispose(),e.geometry&&(e.geometry.disposeBoundsTree(),e.geometry.dispose())})),e=null},registerAniMixers:(e,t)=>{let n=t.scene||t.scene[0],i=!1;if(void 0===t.animations)return;let r=new THREE.AnimationMixer(n);t.animations.forEach((e=>{r.clipAction(e).play(),i=!0})),i&&(ATON._aniMixers.push(r),void 0===e._aniMixers&&(e._aniMixers=[]),e._aniMixers.push(r))},parseTransformString:e=>{let t=new THREE.Group,n=e.split(l.TSTRING_SEPARATOR),i=n.length;return i<3||(t.position.set(parseFloat(n[0]),parseFloat(n[1]),parseFloat(n[2])),i<6||(t.rotation.set(parseFloat(n[3]),parseFloat(n[4]),parseFloat(n[5])),i<9||t.scale.set(parseFloat(n[6]),parseFloat(n[7]),parseFloat(n[8])))),t},setVectorPrecision:(e,t)=>(e.x=parseFloat(e.x.toPrecision(t)),e.y=parseFloat(e.y.toPrecision(t)),e.z=parseFloat(e.z.toPrecision(t)),e),parseMD:e=>(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/^\s*\n\*/gm,"<ul>\n*")).replace(/^(\*.+)\s*\n([^\*])/gm,"$1\n</ul>\n\n$2")).replace(/^\*(.+)/gm,"<li>$1</li>")).replace(/^\s*\n\d\./gm,"<ol>\n1.")).replace(/^(\d\..+)\s*\n([^\d\.])/gm,"$1\n</ol>\n\n$2")).replace(/^\d\.(.+)/gm,"<li>$1</li>")).replace(/^\>(.+)/gm,"<blockquote>$1</blockquote>")).replace(/[\#]{6}(.+)/g,"<h6>$1</h6>")).replace(/[\#]{5}(.+)/g,"<h5>$1</h5>")).replace(/[\#]{4}(.+)/g,"<h4>$1</h4>")).replace(/[\#]{3}(.+)/g,"<h3>$1</h3>")).replace(/[\#]{2}(.+)/g,"<h2>$1</h2>")).replace(/[\#]{1}(.+)/g,"<h1>$1</h1>")).replace(/^(.+)\n\=+/gm,"<h1>$1</h1>")).replace(/^(.+)\n\-+/gm,"<h2>$1</h2>")).replace(/\!\[([^\]]+)\]\(([^\)]+)\)/g,'<img src="$2" alt="$1" />')).replace(/[\[]{1}([^\]]+)[\]]{1}[\(]{1}([^\)\"]+)(\"(.+)\")?[\)]{1}/g,'<a href="$2" title="$4">$1</a>')).replace(/[\*\_]{2}([^\*\_]+)[\*\_]{2}/g,"<b>$1</b>")).replace(/[\*\_]{1}([^\*\_]+)[\*\_]{1}/g,"<i>$1</i>")).replace(/[\~]{2}([^\~]+)[\~]{2}/g,"<del>$1</del>")).replace(/^\s*\n\`\`\`(([^\s]+))?/gm,'<pre class="$2">')).replace(/^\`\`\`\s*\n/gm,"</pre>\n\n")).replace(/[\`]{1}([^\`]+)[\`]{1}/g,"<code>$1</code>")).replace(/^\s*(\n)?(.+)/gm,(function(e){return/\<(\/)?(h\d|ul|ol|li|blockquote|pre|img)/.test(e)?e:"<p>"+e+"</p>"}))).replace(/(\<pre.+\>)\s*\n\<p\>(.+)\<\/p\>/gm,"$1$2"),checkAuth:e=>{$.ajax({type:"GET",url:ATON.PATH_RESTAPI+"user",xhrFields:{withCredentials:!0},dataType:"json",success:t=>{e(t)}})},getHumanReadableDistance:e=>{let t=" m";return e<.01?(t=" mm",t=(e*=1e3).toPrecision(3)+t,t):e<1?(t=" cm",t=(e*=100).toPrecision(3)+t,t):e>1e3?(t=" km",t=e.toPrecision(3)+t,t):(t=e.toPrecision(3)+t,t)},stripHTMLtagsFromString:e=>e.replace(/(<([^>]+)>)/gi,""),requestFullscreen:()=>{let e=document.documentElement;return e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen(),!0},downloadBlob:(e,t)=>{void 0!==t&&(l._dlink.href=URL.createObjectURL(e),l._dlink.download=t,l._dlink.click())},downloadText:(e,t)=>{l.downloadBlob(new Blob([e],{type:"text/plain"}),t)},downloadJSONobj:(e,t)=>{l.downloadText(JSON.stringify(e),t)},downloadArrayBuffer:(e,t)=>{l.downloadBlob(new Blob([e],{type:"application/octet-stream"}),t)},exportNode:(e,t)=>{let n=l.getFileExtension(t);if(!(n.length<1)){if("glb"===n||"gltf"===n){let i={binary:"glb"===n};void 0===l.exporterGLTF&&(l.exporterGLTF=new THREE.GLTFExporter),l.exporterGLTF.parse(e,(e=>{e instanceof ArrayBuffer?l.downloadArrayBuffer(e,t):(console.log(e),l.downloadJSONobj(e,t))}),i)}if("obj"===n){void 0===l.exporterOBJ&&(l.exporterOBJ=new THREE.OBJExporter);let n=l.exporterOBJ.parse(e);l.downloadText(n,t)}"usdz"===n&&(void 0===l.exporterUSDZ&&(l.exporterUSDZ=new THREE.USDZExporter),$("#idLoader").show(),l.exporterUSDZ.parse(e).then((e=>{l.downloadArrayBuffer(e,t),$("#idLoader").hide()})))}},takeScreenshot:(e,t)=>{let n=new Image;console.log("Screenshot with size:"+e),ATON.Nav._camera.aspect=1,ATON.Nav._camera.updateProjectionMatrix(),ATON._renderer.setSize(e,e),ATON._renderer.render(ATON._mainRoot,ATON.Nav._camera);let i=ATON._renderer.domElement;if(ATON.FX.composer){if(ATON.FX.composer.setSize(e,e),ATON.FX.passes[ATON.FX.PASS_AA]){let t=ATON.FX.passes[ATON.FX.PASS_AA].material.uniforms;t&&t.resolution.value.set(1/e,1/e)}ATON.FX.composer.render(),i=ATON.FX.composer.renderer.domElement}let r=ATON._renderer.domElement.toDataURL();return n.src=r,t&&(l._dlink.href=r.replace("image/png","image/octet-stream"),l._dlink.download=t,l._dlink.click()),ATON._onResize(),n},assignLightProbeToMesh:(e,t)=>{void 0!==e&&void 0!==t&&(t.noLP||(t.userData.LP=e))},clearLightProbeFromMesh:e=>{void 0!==e&&(e.noLP||(e.userData.LP=null))},vibrate:e=>{void 0===e&&(e=100),window.navigator.vibrate(e)},createATONCube:e=>{let t=new THREE.BoxGeometry(1,1,1),n=new THREE.MeshStandardMaterial;l.textureLoader.load(ATON.PATH_RES+"models/aton-cube.jpg",(e=>{e.colorSpace=ATON._stdEncoding,n.map=e}));let i=ATON.createSceneNode(e);return i.add(new THREE.Mesh(t)),i.setMaterial(n),i.enablePicking(),i},createATONCubePBR:e=>{let t=new THREE.BoxGeometry(1,1,1),n=new THREE.MeshStandardMaterial;n.metalness=1,l.textureLoader.load(ATON.PATH_RES+"models/aton-cube.jpg",(e=>{e.colorSpace=ATON._stdEncoding,n.map=e})),l.textureLoader.load(ATON.PATH_RES+"models/aton-cube-pbr.jpg",(e=>{e.colorSpace=ATON._stdEncoding,n.metalnessMap=e,n.roughnessMap=e})),l.textureLoader.load(ATON.PATH_RES+"models/aton-cube-nrm.png",(e=>{e.colorSpace=ATON._stdEncoding,n.normalMap=e}));let i=ATON.createSceneNode(e);return i.add(new THREE.Mesh(t)),i.setMaterial(n),i.enablePicking(),i},createGround:(e,t,n)=>{void 0===t&&(t=1),void 0===n&&(n=1);let i=new THREE.PlaneGeometry(t,n),r=new THREE.MeshStandardMaterial;void 0!==e&&l.textureLoader.load(e,(e=>{e.colorSpace=ATON._stdEncoding,r.map=e}));let a=ATON.createSceneNode().rotateX(.5*-Math.PI);return a.add(new THREE.Mesh(i,r)),a.enablePicking(),a}};const c=l,d="154",h=1,u=2,p=3,m=100,f=0,g=1,_=2,v=0,S=1,E=2,w=3,x=4,y=5,T=301,b=302,M=306,A=1e3,C=1001,P=1002,R=1003,N=1005,O=1006,L=1008,I=1009,U=1012,D=1014,F=1015,H=1016,B=1020,k=1023,V=1026,z=1027,G=33776,W=33777,X=33778,q=33779,j=36492,Y=2300,K=2301,Z=2302,J=3001,Q="srgb",ee="srgb-linear",te="display-p3",ne=7680,ie=35044,re="300 es",ae=1035,oe=2e3,se=2001;class le{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const ce=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let de=1234567;const he=Math.PI/180,ue=180/Math.PI;function pe(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(ce[255&e]+ce[e>>8&255]+ce[e>>16&255]+ce[e>>24&255]+"-"+ce[255&t]+ce[t>>8&255]+"-"+ce[t>>16&15|64]+ce[t>>24&255]+"-"+ce[63&n|128]+ce[n>>8&255]+"-"+ce[n>>16&255]+ce[n>>24&255]+ce[255&i]+ce[i>>8&255]+ce[i>>16&255]+ce[i>>24&255]).toLowerCase()}function me(e,t,n){return Math.max(t,Math.min(n,e))}function fe(e,t){return(e%t+t)%t}function ge(e,t,n){return(1-n)*e+n*t}function _e(e){return 0==(e&e-1)&&0!==e}function ve(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Se(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function Ee(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}const we={DEG2RAD:he,RAD2DEG:ue,generateUUID:pe,clamp:me,euclideanModulo:fe,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:ge,damp:function(e,t,n,i){return ge(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(fe(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(de=e);let t=de+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*he},radToDeg:function(e){return e*ue},isPowerOfTwo:_e,ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:ve,setQuaternionFromProperEuler:function(e,t,n,i,r){const a=Math.cos,o=Math.sin,s=a(n/2),l=o(n/2),c=a((t+i)/2),d=o((t+i)/2),h=a((t-i)/2),u=o((t-i)/2),p=a((i-t)/2),m=o((i-t)/2);switch(r){case"XYX":e.set(s*d,l*h,l*u,s*c);break;case"YZY":e.set(l*u,s*d,l*h,s*c);break;case"ZXZ":e.set(l*h,l*u,s*d,s*c);break;case"XZX":e.set(s*d,l*m,l*p,s*c);break;case"YXY":e.set(l*p,s*d,l*m,s*c);break;case"ZYZ":e.set(l*m,l*p,s*d,s*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:Ee,denormalize:Se};class xe{constructor(e=0,t=0){xe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(me(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ye{constructor(e,t,n,i,r,a,o,s,l){ye.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,a,o,s,l)}set(e,t,n,i,r,a,o,s,l){const c=this.elements;return c[0]=e,c[1]=i,c[2]=o,c[3]=t,c[4]=r,c[5]=s,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],c=n[4],d=n[7],h=n[2],u=n[5],p=n[8],m=i[0],f=i[3],g=i[6],_=i[1],v=i[4],S=i[7],E=i[2],w=i[5],x=i[8];return r[0]=a*m+o*_+s*E,r[3]=a*f+o*v+s*w,r[6]=a*g+o*S+s*x,r[1]=l*m+c*_+d*E,r[4]=l*f+c*v+d*w,r[7]=l*g+c*S+d*x,r[2]=h*m+u*_+p*E,r[5]=h*f+u*v+p*w,r[8]=h*g+u*S+p*x,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8];return t*a*c-t*o*l-n*r*c+n*o*s+i*r*l-i*a*s}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],d=c*a-o*l,h=o*s-c*r,u=l*r-a*s,p=t*d+n*h+i*u;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=d*m,e[1]=(i*l-c*n)*m,e[2]=(o*n-i*a)*m,e[3]=h*m,e[4]=(c*t-i*s)*m,e[5]=(i*r-o*t)*m,e[6]=u*m,e[7]=(n*s-l*t)*m,e[8]=(a*t-n*r)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const s=Math.cos(r),l=Math.sin(r);return this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-i*l,i*s,-i*(-l*a+s*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Te.makeScale(e,t)),this}rotate(e){return this.premultiply(Te.makeRotation(-e)),this}translate(e,t){return this.premultiply(Te.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Te=new ye;function be(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Me(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Ae={};function Ce(e){e in Ae||(Ae[e]=!0,console.warn(e))}function Pe(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Re(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const Ne=(new ye).fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Oe=(new ye).fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),Le={[ee]:e=>e,[Q]:e=>e.convertSRGBToLinear(),[te]:function(e){return e.convertSRGBToLinear().applyMatrix3(Oe)}},Ie={[ee]:e=>e,[Q]:e=>e.convertLinearToSRGB(),[te]:function(e){return e.applyMatrix3(Ne).convertLinearToSRGB()}},Ue={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(e){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!e},get workingColorSpace(){return ee},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;const i=Le[t],r=Ie[n];if(void 0===i||void 0===r)throw new Error(`Unsupported color space conversion, "${t}" to "${n}".`);return r(i(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}};let De;class Fe{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===De&&(De=Me("canvas")),De.width=e.width,De.height=e.height;const n=De.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=De}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Me("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let e=0;e<r.length;e++)r[e]=255*Pe(r[e]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Pe(t[e]/255)):t[e]=Pe(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let He=0;class Be{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:He++}),this.uuid=pe(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(ke(i[t].image)):e.push(ke(i[t]))}else e=ke(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function ke(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Fe.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ve=0;class ze extends le{constructor(e=ze.DEFAULT_IMAGE,t=ze.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,o=1023,s=1009,l=ze.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ve++}),this.uuid=pe(),this.name="",this.source=new Be(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new xe(0,0),this.repeat=new xe(1,1),this.center=new xe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ye,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof c?this.colorSpace=c:(Ce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===J?Q:""),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case A:e.x=e.x-Math.floor(e.x);break;case C:e.x=e.x<0?0:1;break;case P:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case A:e.y=e.y-Math.floor(e.y);break;case C:e.y=e.y<0?0:1;break;case P:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Ce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Q?J:3e3}set encoding(e){Ce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===J?Q:""}}ze.DEFAULT_IMAGE=null,ze.DEFAULT_MAPPING=300,ze.DEFAULT_ANISOTROPY=1;class Ge{constructor(e=0,t=0,n=0,i=1){Ge.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=.01,o=.1,s=e.elements,l=s[0],c=s[4],d=s[8],h=s[1],u=s[5],p=s[9],m=s[2],f=s[6],g=s[10];if(Math.abs(c-h)<a&&Math.abs(d-m)<a&&Math.abs(p-f)<a){if(Math.abs(c+h)<o&&Math.abs(d+m)<o&&Math.abs(p+f)<o&&Math.abs(l+u+g-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,s=(u+1)/2,_=(g+1)/2,v=(c+h)/4,S=(d+m)/4,E=(p+f)/4;return e>s&&e>_?e<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=v/n,r=S/n):s>_?s<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(s),n=v/i,r=E/i):_<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(_),n=S/r,i=E/r),this.set(n,i,r,t),this}let _=Math.sqrt((f-p)*(f-p)+(d-m)*(d-m)+(h-c)*(h-c));return Math.abs(_)<.001&&(_=1),this.x=(f-p)/_,this.y=(d-m)/_,this.z=(h-c)/_,this.w=Math.acos((l+u+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class We extends le{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ge(0,0,e,t),this.scissorTest=!1,this.viewport=new Ge(0,0,e,t);const i={width:e,height:t,depth:1};void 0!==n.encoding&&(Ce("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===J?Q:""),this.texture=new ze(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:O,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Be(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Xe extends ze{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=R,this.minFilter=R,this.wrapR=C,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qe extends ze{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=R,this.minFilter=R,this.wrapR=C,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class je{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let s=n[i+0],l=n[i+1],c=n[i+2],d=n[i+3];const h=r[a+0],u=r[a+1],p=r[a+2],m=r[a+3];if(0===o)return e[t+0]=s,e[t+1]=l,e[t+2]=c,void(e[t+3]=d);if(1===o)return e[t+0]=h,e[t+1]=u,e[t+2]=p,void(e[t+3]=m);if(d!==m||s!==h||l!==u||c!==p){let e=1-o;const t=s*h+l*u+c*p+d*m,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,o=Math.sin(o*a)/r}const r=o*n;if(s=s*e+h*r,l=l*e+u*r,c=c*e+p*r,d=d*e+m*r,e===1-o){const e=1/Math.sqrt(s*s+l*l+c*c+d*d);s*=e,l*=e,c*=e,d*=e}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],s=n[i+1],l=n[i+2],c=n[i+3],d=r[a],h=r[a+1],u=r[a+2],p=r[a+3];return e[t]=o*p+c*d+s*u-l*h,e[t+1]=s*p+c*h+l*d-o*u,e[t+2]=l*p+c*u+o*h-s*d,e[t+3]=c*p-o*d-s*h-l*u,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(n/2),c=o(i/2),d=o(r/2),h=s(n/2),u=s(i/2),p=s(r/2);switch(a){case"XYZ":this._x=h*c*d+l*u*p,this._y=l*u*d-h*c*p,this._z=l*c*p+h*u*d,this._w=l*c*d-h*u*p;break;case"YXZ":this._x=h*c*d+l*u*p,this._y=l*u*d-h*c*p,this._z=l*c*p-h*u*d,this._w=l*c*d+h*u*p;break;case"ZXY":this._x=h*c*d-l*u*p,this._y=l*u*d+h*c*p,this._z=l*c*p+h*u*d,this._w=l*c*d-h*u*p;break;case"ZYX":this._x=h*c*d-l*u*p,this._y=l*u*d+h*c*p,this._z=l*c*p-h*u*d,this._w=l*c*d+h*u*p;break;case"YZX":this._x=h*c*d+l*u*p,this._y=l*u*d+h*c*p,this._z=l*c*p-h*u*d,this._w=l*c*d-h*u*p;break;case"XZY":this._x=h*c*d-l*u*p,this._y=l*u*d-h*c*p,this._z=l*c*p+h*u*d,this._w=l*c*d+h*u*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],s=t[9],l=t[2],c=t[6],d=t[10],h=n+o+d;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(c-s)*e,this._y=(r-l)*e,this._z=(a-i)*e}else if(n>o&&n>d){const e=2*Math.sqrt(1+n-o-d);this._w=(c-s)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+l)/e}else if(o>d){const e=2*Math.sqrt(1+o-n-d);this._w=(r-l)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(s+c)/e}else{const e=2*Math.sqrt(1+d-n-o);this._w=(a-i)/e,this._x=(r+l)/e,this._y=(s+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(me(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,s=t._y,l=t._z,c=t._w;return this._x=n*c+a*o+i*l-r*s,this._y=i*c+a*s+r*o-n*l,this._z=r*c+a*l+n*s-i*o,this._w=a*c-n*o-i*s-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const s=1-o*o;if(s<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),c=Math.atan2(l,o),d=Math.sin((1-t)*c)/l,h=Math.sin(t*c)/l;return this._w=a*d+this._w*h,this._x=n*d+this._x*h,this._y=i*d+this._y*h,this._z=r*d+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Ye{constructor(e=0,t=0,n=0){Ye.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ke.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ke.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*i-o*n,c=s*n+o*t-r*i,d=s*i+r*n-a*t,h=-r*t-a*n-o*i;return this.x=l*s+h*-r+c*-o-d*-a,this.y=c*s+h*-a+d*-r-l*-o,this.z=d*s+h*-o+l*-a-c*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,s=t.z;return this.x=i*s-r*o,this.y=r*a-n*s,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return $e.copy(this).projectOnVector(e),this.sub($e)}reflect(e){return this.sub($e.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(me(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const $e=new Ye,Ke=new je;class Ze{constructor(e=new Ye(1/0,1/0,1/0),t=new Ye(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Qe.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Qe.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Qe.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),void 0!==e.boundingBox)null===e.boundingBox&&e.computeBoundingBox(),et.copy(e.boundingBox),et.applyMatrix4(e.matrixWorld),this.union(et);else{const n=e.geometry;if(void 0!==n)if(t&&void 0!==n.attributes&&void 0!==n.attributes.position){const t=n.attributes.position;for(let n=0,i=t.count;n<i;n++)Qe.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld),this.expandByPoint(Qe)}else null===n.boundingBox&&n.computeBoundingBox(),et.copy(n.boundingBox),et.applyMatrix4(e.matrixWorld),this.union(et)}const n=e.children;for(let e=0,i=n.length;e<i;e++)this.expandByObject(n[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Qe),Qe.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(st),lt.subVectors(this.max,st),tt.subVectors(e.a,st),nt.subVectors(e.b,st),it.subVectors(e.c,st),rt.subVectors(nt,tt),at.subVectors(it,nt),ot.subVectors(tt,it);let t=[0,-rt.z,rt.y,0,-at.z,at.y,0,-ot.z,ot.y,rt.z,0,-rt.x,at.z,0,-at.x,ot.z,0,-ot.x,-rt.y,rt.x,0,-at.y,at.x,0,-ot.y,ot.x,0];return!!ht(t,tt,nt,it,lt)&&(t=[1,0,0,0,1,0,0,0,1],!!ht(t,tt,nt,it,lt)&&(ct.crossVectors(rt,at),t=[ct.x,ct.y,ct.z],ht(t,tt,nt,it,lt)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Qe).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(Qe).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Je[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Je[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Je[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Je[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Je[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Je[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Je[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Je[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Je)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Je=[new Ye,new Ye,new Ye,new Ye,new Ye,new Ye,new Ye,new Ye],Qe=new Ye,et=new Ze,tt=new Ye,nt=new Ye,it=new Ye,rt=new Ye,at=new Ye,ot=new Ye,st=new Ye,lt=new Ye,ct=new Ye,dt=new Ye;function ht(e,t,n,i,r){for(let a=0,o=e.length-3;a<=o;a+=3){dt.fromArray(e,a);const o=r.x*Math.abs(dt.x)+r.y*Math.abs(dt.y)+r.z*Math.abs(dt.z),s=t.dot(dt),l=n.dot(dt),c=i.dot(dt);if(Math.max(-Math.max(s,l,c),Math.min(s,l,c))>o)return!1}return!0}const ut=new Ze,pt=new Ye,mt=new Ye;class ft{constructor(e=new Ye,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):ut.setFromPoints(e).getCenter(n);let i=0;for(let t=0,r=e.length;t<r;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;pt.subVectors(e,this.center);const t=pt.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(pt,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(mt.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(pt.copy(e.center).add(mt)),this.expandByPoint(pt.copy(e.center).sub(mt))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const gt=new Ye,_t=new Ye,vt=new Ye,St=new Ye,Et=new Ye,wt=new Ye,xt=new Ye;class yt{constructor(e=new Ye,t=new Ye(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,gt)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=gt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(gt.copy(this.origin).addScaledVector(this.direction,t),gt.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){_t.copy(e).add(t).multiplyScalar(.5),vt.copy(t).sub(e).normalize(),St.copy(this.origin).sub(_t);const r=.5*e.distanceTo(t),a=-this.direction.dot(vt),o=St.dot(this.direction),s=-St.dot(vt),l=St.lengthSq(),c=Math.abs(1-a*a);let d,h,u,p;if(c>0)if(d=a*s-o,h=a*o-s,p=r*c,d>=0)if(h>=-p)if(h<=p){const e=1/c;d*=e,h*=e,u=d*(d+a*h+2*o)+h*(a*d+h+2*s)+l}else h=r,d=Math.max(0,-(a*h+o)),u=-d*d+h*(h+2*s)+l;else h=-r,d=Math.max(0,-(a*h+o)),u=-d*d+h*(h+2*s)+l;else h<=-p?(d=Math.max(0,-(-a*r+o)),h=d>0?-r:Math.min(Math.max(-r,-s),r),u=-d*d+h*(h+2*s)+l):h<=p?(d=0,h=Math.min(Math.max(-r,-s),r),u=h*(h+2*s)+l):(d=Math.max(0,-(a*r+o)),h=d>0?r:Math.min(Math.max(-r,-s),r),u=-d*d+h*(h+2*s)+l);else h=a>0?-r:r,d=Math.max(0,-(a*h+o)),u=-d*d+h*(h+2*s)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,d),i&&i.copy(_t).addScaledVector(vt,h),u}intersectSphere(e,t){gt.subVectors(e.center,this.origin);const n=gt.dot(this.direction),i=gt.dot(gt)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,s=n+a;return s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,s;const l=1/this.direction.x,c=1/this.direction.y,d=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,i=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,i=(e.min.x-h.x)*l),c>=0?(r=(e.min.y-h.y)*c,a=(e.max.y-h.y)*c):(r=(e.max.y-h.y)*c,a=(e.min.y-h.y)*c),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),d>=0?(o=(e.min.z-h.z)*d,s=(e.max.z-h.z)*d):(o=(e.max.z-h.z)*d,s=(e.min.z-h.z)*d),n>s||o>i?null:((o>n||n!=n)&&(n=o),(s<i||i!=i)&&(i=s),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,gt)}intersectTriangle(e,t,n,i,r){Et.subVectors(t,e),wt.subVectors(n,e),xt.crossVectors(Et,wt);let a,o=this.direction.dot(xt);if(o>0){if(i)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}St.subVectors(this.origin,e);const s=a*this.direction.dot(wt.crossVectors(St,wt));if(s<0)return null;const l=a*this.direction.dot(Et.cross(St));if(l<0)return null;if(s+l>o)return null;const c=-a*St.dot(xt);return c<0?null:this.at(c/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Tt{constructor(e,t,n,i,r,a,o,s,l,c,d,h,u,p,m,f){Tt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,a,o,s,l,c,d,h,u,p,m,f)}set(e,t,n,i,r,a,o,s,l,c,d,h,u,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=c,g[10]=d,g[14]=h,g[3]=u,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Tt).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/bt.setFromMatrixColumn(e,0).length(),r=1/bt.setFromMatrixColumn(e,1).length(),a=1/bt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(i),l=Math.sin(i),c=Math.cos(r),d=Math.sin(r);if("XYZ"===e.order){const e=a*c,n=a*d,i=o*c,r=o*d;t[0]=s*c,t[4]=-s*d,t[8]=l,t[1]=n+i*l,t[5]=e-r*l,t[9]=-o*s,t[2]=r-e*l,t[6]=i+n*l,t[10]=a*s}else if("YXZ"===e.order){const e=s*c,n=s*d,i=l*c,r=l*d;t[0]=e+r*o,t[4]=i*o-n,t[8]=a*l,t[1]=a*d,t[5]=a*c,t[9]=-o,t[2]=n*o-i,t[6]=r+e*o,t[10]=a*s}else if("ZXY"===e.order){const e=s*c,n=s*d,i=l*c,r=l*d;t[0]=e-r*o,t[4]=-a*d,t[8]=i+n*o,t[1]=n+i*o,t[5]=a*c,t[9]=r-e*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){const e=a*c,n=a*d,i=o*c,r=o*d;t[0]=s*c,t[4]=i*l-n,t[8]=e*l+r,t[1]=s*d,t[5]=r*l+e,t[9]=n*l-i,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){const e=a*s,n=a*l,i=o*s,r=o*l;t[0]=s*c,t[4]=r-e*d,t[8]=i*d+n,t[1]=d,t[5]=a*c,t[9]=-o*c,t[2]=-l*c,t[6]=n*d+i,t[10]=e-r*d}else if("XZY"===e.order){const e=a*s,n=a*l,i=o*s,r=o*l;t[0]=s*c,t[4]=-d,t[8]=l*c,t[1]=e*d+r,t[5]=a*c,t[9]=n*d-i,t[2]=i*d-n,t[6]=o*c,t[10]=r*d+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(At,e,Ct)}lookAt(e,t,n){const i=this.elements;return Nt.subVectors(e,t),0===Nt.lengthSq()&&(Nt.z=1),Nt.normalize(),Pt.crossVectors(n,Nt),0===Pt.lengthSq()&&(1===Math.abs(n.z)?Nt.x+=1e-4:Nt.z+=1e-4,Nt.normalize(),Pt.crossVectors(n,Nt)),Pt.normalize(),Rt.crossVectors(Nt,Pt),i[0]=Pt.x,i[4]=Rt.x,i[8]=Nt.x,i[1]=Pt.y,i[5]=Rt.y,i[9]=Nt.y,i[2]=Pt.z,i[6]=Rt.z,i[10]=Nt.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],c=n[1],d=n[5],h=n[9],u=n[13],p=n[2],m=n[6],f=n[10],g=n[14],_=n[3],v=n[7],S=n[11],E=n[15],w=i[0],x=i[4],y=i[8],T=i[12],b=i[1],M=i[5],A=i[9],C=i[13],P=i[2],R=i[6],N=i[10],O=i[14],L=i[3],I=i[7],U=i[11],D=i[15];return r[0]=a*w+o*b+s*P+l*L,r[4]=a*x+o*M+s*R+l*I,r[8]=a*y+o*A+s*N+l*U,r[12]=a*T+o*C+s*O+l*D,r[1]=c*w+d*b+h*P+u*L,r[5]=c*x+d*M+h*R+u*I,r[9]=c*y+d*A+h*N+u*U,r[13]=c*T+d*C+h*O+u*D,r[2]=p*w+m*b+f*P+g*L,r[6]=p*x+m*M+f*R+g*I,r[10]=p*y+m*A+f*N+g*U,r[14]=p*T+m*C+f*O+g*D,r[3]=_*w+v*b+S*P+E*L,r[7]=_*x+v*M+S*R+E*I,r[11]=_*y+v*A+S*N+E*U,r[15]=_*T+v*C+S*O+E*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],s=e[9],l=e[13],c=e[2],d=e[6],h=e[10],u=e[14];return e[3]*(+r*s*d-i*l*d-r*o*h+n*l*h+i*o*u-n*s*u)+e[7]*(+t*s*u-t*l*h+r*a*h-i*a*u+i*l*c-r*s*c)+e[11]*(+t*l*d-t*o*u-r*a*d+n*a*u+r*o*c-n*l*c)+e[15]*(-i*o*c-t*s*d+t*o*h+i*a*d-n*a*h+n*s*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],s=e[6],l=e[7],c=e[8],d=e[9],h=e[10],u=e[11],p=e[12],m=e[13],f=e[14],g=e[15],_=d*f*l-m*h*l+m*s*u-o*f*u-d*s*g+o*h*g,v=p*h*l-c*f*l-p*s*u+a*f*u+c*s*g-a*h*g,S=c*m*l-p*d*l+p*o*u-a*m*u-c*o*g+a*d*g,E=p*d*s-c*m*s-p*o*h+a*m*h+c*o*f-a*d*f,w=t*_+n*v+i*S+r*E;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const x=1/w;return e[0]=_*x,e[1]=(m*h*r-d*f*r-m*i*u+n*f*u+d*i*g-n*h*g)*x,e[2]=(o*f*r-m*s*r+m*i*l-n*f*l-o*i*g+n*s*g)*x,e[3]=(d*s*r-o*h*r-d*i*l+n*h*l+o*i*u-n*s*u)*x,e[4]=v*x,e[5]=(c*f*r-p*h*r+p*i*u-t*f*u-c*i*g+t*h*g)*x,e[6]=(p*s*r-a*f*r-p*i*l+t*f*l+a*i*g-t*s*g)*x,e[7]=(a*h*r-c*s*r+c*i*l-t*h*l-a*i*u+t*s*u)*x,e[8]=S*x,e[9]=(p*d*r-c*m*r-p*n*u+t*m*u+c*n*g-t*d*g)*x,e[10]=(a*m*r-p*o*r+p*n*l-t*m*l-a*n*g+t*o*g)*x,e[11]=(c*o*r-a*d*r-c*n*l+t*d*l+a*n*u-t*o*u)*x,e[12]=E*x,e[13]=(c*m*i-p*d*i+p*n*h-t*m*h-c*n*f+t*d*f)*x,e[14]=(p*o*i-a*m*i-p*n*s+t*m*s+a*n*f-t*o*f)*x,e[15]=(a*d*i-c*o*i+c*n*s-t*d*s-a*n*h+t*o*h)*x,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,s=e.z,l=r*a,c=r*o;return this.set(l*a+n,l*o-i*s,l*s+i*o,0,l*o+i*s,c*o+n,c*s-i*a,0,l*s-i*o,c*s+i*a,r*s*s+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,s=t._w,l=r+r,c=a+a,d=o+o,h=r*l,u=r*c,p=r*d,m=a*c,f=a*d,g=o*d,_=s*l,v=s*c,S=s*d,E=n.x,w=n.y,x=n.z;return i[0]=(1-(m+g))*E,i[1]=(u+S)*E,i[2]=(p-v)*E,i[3]=0,i[4]=(u-S)*w,i[5]=(1-(h+g))*w,i[6]=(f+_)*w,i[7]=0,i[8]=(p+v)*x,i[9]=(f-_)*x,i[10]=(1-(h+m))*x,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=bt.set(i[0],i[1],i[2]).length();const a=bt.set(i[4],i[5],i[6]).length(),o=bt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Mt.copy(this);const s=1/r,l=1/a,c=1/o;return Mt.elements[0]*=s,Mt.elements[1]*=s,Mt.elements[2]*=s,Mt.elements[4]*=l,Mt.elements[5]*=l,Mt.elements[6]*=l,Mt.elements[8]*=c,Mt.elements[9]*=c,Mt.elements[10]*=c,t.setFromRotationMatrix(Mt),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=2e3){const s=this.elements,l=2*r/(t-e),c=2*r/(n-i),d=(t+e)/(t-e),h=(n+i)/(n-i);let u,p;if(o===oe)u=-(a+r)/(a-r),p=-2*a*r/(a-r);else{if(o!==se)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);u=-a/(a-r),p=-a*r/(a-r)}return s[0]=l,s[4]=0,s[8]=d,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=p,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=2e3){const s=this.elements,l=1/(t-e),c=1/(n-i),d=1/(a-r),h=(t+e)*l,u=(n+i)*c;let p,m;if(o===oe)p=(a+r)*d,m=-2*d;else{if(o!==se)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);p=r*d,m=-1*d}return s[0]=2*l,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=m,s[14]=-p,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const bt=new Ye,Mt=new Tt,At=new Ye(0,0,0),Ct=new Ye(1,1,1),Pt=new Ye,Rt=new Ye,Nt=new Ye,Ot=new Tt,Lt=new je;class It{constructor(e=0,t=0,n=0,i=It.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],s=i[1],l=i[5],c=i[9],d=i[2],h=i[6],u=i[10];switch(t){case"XYZ":this._y=Math.asin(me(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,u),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-me(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,u),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-d,r),this._z=0);break;case"ZXY":this._x=Math.asin(me(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-d,u),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-me(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(me(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-d,r)):(this._x=0,this._y=Math.atan2(o,u));break;case"XZY":this._z=Math.asin(-me(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-c,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ot.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ot,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Lt.setFromEuler(this),this.setFromQuaternion(Lt,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}It.DEFAULT_ORDER="XYZ";class Ut{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let Dt=0;const Ft=new Ye,Ht=new je,Bt=new Tt,kt=new Ye,Vt=new Ye,zt=new Ye,Gt=new je,Wt=new Ye(1,0,0),Xt=new Ye(0,1,0),qt=new Ye(0,0,1),jt={type:"added"},Yt={type:"removed"};class $t extends le{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Dt++}),this.uuid=pe(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$t.DEFAULT_UP.clone();const e=new Ye,t=new It,n=new je,i=new Ye(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Tt},normalMatrix:{value:new ye}}),this.matrix=new Tt,this.matrixWorld=new Tt,this.matrixAutoUpdate=$t.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=$t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Ut,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ht.setFromAxisAngle(e,t),this.quaternion.multiply(Ht),this}rotateOnWorldAxis(e,t){return Ht.setFromAxisAngle(e,t),this.quaternion.premultiply(Ht),this}rotateX(e){return this.rotateOnAxis(Wt,e)}rotateY(e){return this.rotateOnAxis(Xt,e)}rotateZ(e){return this.rotateOnAxis(qt,e)}translateOnAxis(e,t){return Ft.copy(e).applyQuaternion(this.quaternion),this.position.add(Ft.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Wt,e)}translateY(e){return this.translateOnAxis(Xt,e)}translateZ(e){return this.translateOnAxis(qt,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Bt.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?kt.copy(e):kt.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Vt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Bt.lookAt(Vt,kt,this.up):Bt.lookAt(kt,Vt,this.up),this.quaternion.setFromRotationMatrix(Bt),i&&(Bt.extractRotation(i.matrixWorld),Ht.setFromRotationMatrix(Bt),this.quaternion.premultiply(Ht.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(jt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Yt)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Yt)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Bt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Bt.multiply(e.parent.matrixWorld)),e.applyMatrix4(Bt),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectsByProperty(e,t);r.length>0&&(n=n.concat(r))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vt,e,zt),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vt,Gt,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const i=t[n];!0!==i.matrixWorldAutoUpdate&&!0!==e||i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=a(e.geometries),i=a(e.materials),r=a(e.textures),o=a(e.images),s=a(e.shapes),l=a(e.skeletons),c=a(e.animations),d=a(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),o.length>0&&(n.images=o),s.length>0&&(n.shapes=s),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),d.length>0&&(n.nodes=d)}return n.object=i,n;function a(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}$t.DEFAULT_UP=new Ye(0,1,0),$t.DEFAULT_MATRIX_AUTO_UPDATE=!0,$t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Kt=new Ye,Zt=new Ye,Jt=new Ye,Qt=new Ye,en=new Ye,tn=new Ye,nn=new Ye,rn=new Ye,an=new Ye,on=new Ye;let sn=!1;class ln{constructor(e=new Ye,t=new Ye,n=new Ye){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Kt.subVectors(e,t),i.cross(Kt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Kt.subVectors(i,t),Zt.subVectors(n,t),Jt.subVectors(e,t);const a=Kt.dot(Kt),o=Kt.dot(Zt),s=Kt.dot(Jt),l=Zt.dot(Zt),c=Zt.dot(Jt),d=a*l-o*o;if(0===d)return r.set(-2,-1,-1);const h=1/d,u=(l*s-o*c)*h,p=(a*c-o*s)*h;return r.set(1-u-p,p,u)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Qt),Qt.x>=0&&Qt.y>=0&&Qt.x+Qt.y<=1}static getUV(e,t,n,i,r,a,o,s){return!1===sn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),sn=!0),this.getInterpolation(e,t,n,i,r,a,o,s)}static getInterpolation(e,t,n,i,r,a,o,s){return this.getBarycoord(e,t,n,i,Qt),s.setScalar(0),s.addScaledVector(r,Qt.x),s.addScaledVector(a,Qt.y),s.addScaledVector(o,Qt.z),s}static isFrontFacing(e,t,n,i){return Kt.subVectors(n,t),Zt.subVectors(e,t),Kt.cross(Zt).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Kt.subVectors(this.c,this.b),Zt.subVectors(this.a,this.b),.5*Kt.cross(Zt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ln.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ln.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return!1===sn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),sn=!0),ln.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return ln.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return ln.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ln.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;en.subVectors(i,n),tn.subVectors(r,n),rn.subVectors(e,n);const s=en.dot(rn),l=tn.dot(rn);if(s<=0&&l<=0)return t.copy(n);an.subVectors(e,i);const c=en.dot(an),d=tn.dot(an);if(c>=0&&d<=c)return t.copy(i);const h=s*d-c*l;if(h<=0&&s>=0&&c<=0)return a=s/(s-c),t.copy(n).addScaledVector(en,a);on.subVectors(e,r);const u=en.dot(on),p=tn.dot(on);if(p>=0&&u<=p)return t.copy(r);const m=u*l-s*p;if(m<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(tn,o);const f=c*p-u*d;if(f<=0&&d-c>=0&&u-p>=0)return nn.subVectors(r,i),o=(d-c)/(d-c+(u-p)),t.copy(i).addScaledVector(nn,o);const g=1/(f+m+h);return a=m*g,o=h*g,t.copy(n).addScaledVector(en,a).addScaledVector(tn,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let cn=0;class dn extends le{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:cn++}),this.uuid=pe(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=m,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ne,this.stencilZFail=ne,this.stencilZPass=ne,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=this.alphaHash),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.forceSinglePass&&(n.forceSinglePass=this.forceSinglePass),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}const hn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},un={h:0,s:0,l:0},pn={h:0,s:0,l:0};function mn(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class fn{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(void 0===t&&void 0===n){const t=e;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Q){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Ue.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ue.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ue.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ue.workingColorSpace){if(e=fe(e,1),t=me(t,0,1),n=me(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=mn(r,i,e+1/3),this.g=mn(r,i,e),this.b=mn(r,i,e-1/3)}return Ue.toWorkingColorSpace(this,i),this}setStyle(e,t=Q){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===r)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Q){const n=hn[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Pe(e.r),this.g=Pe(e.g),this.b=Pe(e.b),this}copyLinearToSRGB(e){return this.r=Re(e.r),this.g=Re(e.g),this.b=Re(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Q){return Ue.fromWorkingColorSpace(gn.copy(this),e),65536*Math.round(me(255*gn.r,0,255))+256*Math.round(me(255*gn.g,0,255))+Math.round(me(255*gn.b,0,255))}getHexString(e=Q){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ue.workingColorSpace){Ue.fromWorkingColorSpace(gn.copy(this),t);const n=gn.r,i=gn.g,r=gn.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let s,l;const c=(o+a)/2;if(o===a)s=0,l=0;else{const e=a-o;switch(l=c<=.5?e/(a+o):e/(2-a-o),a){case n:s=(i-r)/e+(i<r?6:0);break;case i:s=(r-n)/e+2;break;case r:s=(n-i)/e+4}s/=6}return e.h=s,e.s=l,e.l=c,e}getRGB(e,t=Ue.workingColorSpace){return Ue.fromWorkingColorSpace(gn.copy(this),t),e.r=gn.r,e.g=gn.g,e.b=gn.b,e}getStyle(e=Q){Ue.fromWorkingColorSpace(gn.copy(this),e);const t=gn.r,n=gn.g,i=gn.b;return e!==Q?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(e,t,n){return this.getHSL(un),un.h+=e,un.s+=t,un.l+=n,this.setHSL(un.h,un.s,un.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(un),e.getHSL(pn);const n=ge(un.h,pn.h,t),i=ge(un.s,pn.s,t),r=ge(un.l,pn.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const gn=new fn;fn.NAMES=hn;class _n extends dn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new fn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=f,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const vn=new Ye,Sn=new xe;class En{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=ie,this.updateRange={offset:0,count:-1},this.gpuType=F,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Sn.fromBufferAttribute(this,t),Sn.applyMatrix3(e),this.setXY(t,Sn.x,Sn.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)vn.fromBufferAttribute(this,t),vn.applyMatrix3(e),this.setXYZ(t,vn.x,vn.y,vn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)vn.fromBufferAttribute(this,t),vn.applyMatrix4(e),this.setXYZ(t,vn.x,vn.y,vn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)vn.fromBufferAttribute(this,t),vn.applyNormalMatrix(e),this.setXYZ(t,vn.x,vn.y,vn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)vn.fromBufferAttribute(this,t),vn.transformDirection(e),this.setXYZ(t,vn.x,vn.y,vn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Se(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ee(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Se(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ee(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Se(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ee(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Se(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ee(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ee(t,this.array),n=Ee(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Ee(t,this.array),n=Ee(n,this.array),i=Ee(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Ee(t,this.array),n=Ee(n,this.array),i=Ee(i,this.array),r=Ee(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==ie&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}class wn extends En{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class xn extends En{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class yn extends En{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Tn=0;const bn=new Tt,Mn=new $t,An=new Ye,Cn=new Ze,Pn=new Ze,Rn=new Ye;class Nn extends le{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Tn++}),this.uuid=pe(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(be(e)?xn:wn)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new ye).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return bn.makeRotationFromQuaternion(e),this.applyMatrix4(bn),this}rotateX(e){return bn.makeRotationX(e),this.applyMatrix4(bn),this}rotateY(e){return bn.makeRotationY(e),this.applyMatrix4(bn),this}rotateZ(e){return bn.makeRotationZ(e),this.applyMatrix4(bn),this}translate(e,t,n){return bn.makeTranslation(e,t,n),this.applyMatrix4(bn),this}scale(e,t,n){return bn.makeScale(e,t,n),this.applyMatrix4(bn),this}lookAt(e){return Mn.lookAt(e),Mn.updateMatrix(),this.applyMatrix4(Mn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(An).negate(),this.translate(An.x,An.y,An.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new yn(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ze);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ye(-1/0,-1/0,-1/0),new Ye(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Cn.setFromBufferAttribute(n),this.morphTargetsRelative?(Rn.addVectors(this.boundingBox.min,Cn.min),this.boundingBox.expandByPoint(Rn),Rn.addVectors(this.boundingBox.max,Cn.max),this.boundingBox.expandByPoint(Rn)):(this.boundingBox.expandByPoint(Cn.min),this.boundingBox.expandByPoint(Cn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ft);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ye,1/0);if(e){const n=this.boundingSphere.center;if(Cn.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Pn.setFromBufferAttribute(n),this.morphTargetsRelative?(Rn.addVectors(Cn.min,Pn.min),Cn.expandByPoint(Rn),Rn.addVectors(Cn.max,Pn.max),Cn.expandByPoint(Rn)):(Cn.expandByPoint(Pn.min),Cn.expandByPoint(Pn.max))}Cn.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)Rn.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(Rn));if(t)for(let r=0,a=t.length;r<a;r++){const a=t[r],o=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)Rn.fromBufferAttribute(a,t),o&&(An.fromBufferAttribute(e,t),Rn.add(An)),i=Math.max(i,n.distanceToSquared(Rn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new En(new Float32Array(4*o),4));const s=this.getAttribute("tangent").array,l=[],c=[];for(let e=0;e<o;e++)l[e]=new Ye,c[e]=new Ye;const d=new Ye,h=new Ye,u=new Ye,p=new xe,m=new xe,f=new xe,g=new Ye,_=new Ye;function v(e,t,n){d.fromArray(i,3*e),h.fromArray(i,3*t),u.fromArray(i,3*n),p.fromArray(a,2*e),m.fromArray(a,2*t),f.fromArray(a,2*n),h.sub(d),u.sub(d),m.sub(p),f.sub(p);const r=1/(m.x*f.y-f.x*m.y);isFinite(r)&&(g.copy(h).multiplyScalar(f.y).addScaledVector(u,-m.y).multiplyScalar(r),_.copy(u).multiplyScalar(m.x).addScaledVector(h,-f.x).multiplyScalar(r),l[e].add(g),l[t].add(g),l[n].add(g),c[e].add(_),c[t].add(_),c[n].add(_))}let S=this.groups;0===S.length&&(S=[{start:0,count:n.length}]);for(let e=0,t=S.length;e<t;++e){const t=S[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)v(n[e+0],n[e+1],n[e+2])}const E=new Ye,w=new Ye,x=new Ye,y=new Ye;function T(e){x.fromArray(r,3*e),y.copy(x);const t=l[e];E.copy(t),E.sub(x.multiplyScalar(x.dot(t))).normalize(),w.crossVectors(y,t);const n=w.dot(c[e])<0?-1:1;s[4*e]=E.x,s[4*e+1]=E.y,s[4*e+2]=E.z,s[4*e+3]=n}for(let e=0,t=S.length;e<t;++e){const t=S[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)T(n[e+0]),T(n[e+1]),T(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new En(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new Ye,r=new Ye,a=new Ye,o=new Ye,s=new Ye,l=new Ye,c=new Ye,d=new Ye;if(e)for(let h=0,u=e.count;h<u;h+=3){const u=e.getX(h+0),p=e.getX(h+1),m=e.getX(h+2);i.fromBufferAttribute(t,u),r.fromBufferAttribute(t,p),a.fromBufferAttribute(t,m),c.subVectors(a,r),d.subVectors(i,r),c.cross(d),o.fromBufferAttribute(n,u),s.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),o.add(c),s.add(c),l.add(c),n.setXYZ(u,o.x,o.y,o.z),n.setXYZ(p,s.x,s.y,s.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),c.subVectors(a,r),d.subVectors(i,r),c.cross(d),n.setXYZ(e+0,c.x,c.y,c.z),n.setXYZ(e+1,c.x,c.y,c.z),n.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Rn.fromBufferAttribute(e,t),Rn.normalize(),e.setXYZ(t,Rn.x,Rn.y,Rn.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i);let o=0,s=0;for(let r=0,l=t.length;r<l;r++){o=e.isInterleavedBufferAttribute?t[r]*e.data.stride+e.offset:t[r]*i;for(let e=0;e<i;e++)a[s++]=n[o++]}return new En(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Nn,n=this.index.array,i=this.attributes;for(const r in i){const a=e(i[r],n);t.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],o=r[i];for(let t=0,i=o.length;t<i;t++){const i=e(o[t],n);a.push(i)}t.morphAttributes[i]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let r=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];a.push(i.toJSON(e.data))}a.length>0&&(i[t]=a,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const r=e.morphAttributes;for(const e in r){const n=[],i=r[e];for(let e=0,r=i.length;e<r;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const On=new Tt,Ln=new yt,In=new ft,Un=new Ye,Dn=new Ye,Fn=new Ye,Hn=new Ye,Bn=new Ye,kn=new Ye,Vn=new xe,zn=new xe,Gn=new xe,Wn=new Ye,Xn=new Ye,qn=new Ye,jn=new Ye,Yn=new Ye;class $n extends $t{constructor(e=new Nn,t=new _n){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){kn.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=o[n],s=r[n];0!==i&&(Bn.fromBufferAttribute(s,e),a?kn.addScaledVector(Bn,i):kn.addScaledVector(Bn.sub(t),i))}t.add(kn)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),In.copy(n.boundingSphere),In.applyMatrix4(r),Ln.copy(e.ray).recast(e.near),!1===In.containsPoint(Ln.origin)){if(null===Ln.intersectSphere(In,Un))return;if(Ln.origin.distanceToSquared(Un)>(e.far-e.near)**2)return}On.copy(r).invert(),Ln.copy(e.ray).applyMatrix4(On),null!==n.boundingBox&&!1===Ln.intersectsBox(n.boundingBox)||this._computeIntersections(e,t,Ln)}}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,s=r.attributes.position,l=r.attributes.uv,c=r.attributes.uv1,d=r.attributes.normal,h=r.groups,u=r.drawRange;if(null!==o)if(Array.isArray(a))for(let r=0,s=h.length;r<s;r++){const s=h[r],p=a[s.materialIndex];for(let r=Math.max(s.start,u.start),a=Math.min(o.count,Math.min(s.start+s.count,u.start+u.count));r<a;r+=3)i=Kn(this,p,e,n,l,c,d,o.getX(r),o.getX(r+1),o.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=s.materialIndex,t.push(i))}else for(let r=Math.max(0,u.start),s=Math.min(o.count,u.start+u.count);r<s;r+=3)i=Kn(this,a,e,n,l,c,d,o.getX(r),o.getX(r+1),o.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),t.push(i));else if(void 0!==s)if(Array.isArray(a))for(let r=0,o=h.length;r<o;r++){const o=h[r],p=a[o.materialIndex];for(let r=Math.max(o.start,u.start),a=Math.min(s.count,Math.min(o.start+o.count,u.start+u.count));r<a;r+=3)i=Kn(this,p,e,n,l,c,d,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=o.materialIndex,t.push(i))}else for(let r=Math.max(0,u.start),o=Math.min(s.count,u.start+u.count);r<o;r+=3)i=Kn(this,a,e,n,l,c,d,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),t.push(i))}}function Kn(e,t,n,i,r,a,o,s,l,c){e.getVertexPosition(s,Dn),e.getVertexPosition(l,Fn),e.getVertexPosition(c,Hn);const d=function(e,t,n,i,r,a,o,s){let l;if(l=1===t.side?i.intersectTriangle(o,a,r,!0,s):i.intersectTriangle(r,a,o,0===t.side,s),null===l)return null;Yn.copy(s),Yn.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(Yn);return c<n.near||c>n.far?null:{distance:c,point:Yn.clone(),object:e}}(e,t,n,i,Dn,Fn,Hn,jn);if(d){r&&(Vn.fromBufferAttribute(r,s),zn.fromBufferAttribute(r,l),Gn.fromBufferAttribute(r,c),d.uv=ln.getInterpolation(jn,Dn,Fn,Hn,Vn,zn,Gn,new xe)),a&&(Vn.fromBufferAttribute(a,s),zn.fromBufferAttribute(a,l),Gn.fromBufferAttribute(a,c),d.uv1=ln.getInterpolation(jn,Dn,Fn,Hn,Vn,zn,Gn,new xe),d.uv2=d.uv1),o&&(Wn.fromBufferAttribute(o,s),Xn.fromBufferAttribute(o,l),qn.fromBufferAttribute(o,c),d.normal=ln.getInterpolation(jn,Dn,Fn,Hn,Wn,Xn,qn,new Ye),d.normal.dot(i.direction)>0&&d.normal.multiplyScalar(-1));const e={a:s,b:l,c,normal:new Ye,materialIndex:0};ln.getNormal(Dn,Fn,Hn,e.normal),d.face=e}return d}class Zn extends Nn{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const s=[],l=[],c=[],d=[];let h=0,u=0;function p(e,t,n,i,r,a,p,m,f,g,_){const v=a/f,S=p/g,E=a/2,w=p/2,x=m/2,y=f+1,T=g+1;let b=0,M=0;const A=new Ye;for(let a=0;a<T;a++){const o=a*S-w;for(let s=0;s<y;s++){const h=s*v-E;A[e]=h*i,A[t]=o*r,A[n]=x,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=m>0?1:-1,c.push(A.x,A.y,A.z),d.push(s/f),d.push(1-a/g),b+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=h+t+y*e,i=h+t+y*(e+1),r=h+(t+1)+y*(e+1),a=h+(t+1)+y*e;s.push(n,i,a),s.push(i,r,a),M+=6}o.addGroup(u,M,_),u+=M,h+=b}p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(s),this.setAttribute("position",new yn(l,3)),this.setAttribute("normal",new yn(c,3)),this.setAttribute("uv",new yn(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Jn(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function Qn(e){const t={};for(let n=0;n<e.length;n++){const i=Jn(e[n]);for(const e in i)t[e]=i[e]}return t}function ei(e){return null===e.getRenderTarget()?e.outputColorSpace:ee}const ti={clone:Jn,merge:Qn};class ni extends dn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Jn(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class ii extends $t{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Tt,this.projectionMatrix=new Tt,this.projectionMatrixInverse=new Tt,this.coordinateSystem=oe}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class ri extends ii{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*ue*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*he*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*ue*Math.atan(Math.tan(.5*he*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*he*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/o,i*=a.width/e,n*=a.height/o}const o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ai=-90;class oi extends $t{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new ri(ai,1,e,t);i.layers=this.layers,this.add(i);const r=new ri(ai,1,e,t);r.layers=this.layers,this.add(r);const a=new ri(ai,1,e,t);a.layers=this.layers,this.add(a);const o=new ri(ai,1,e,t);o.layers=this.layers,this.add(o);const s=new ri(ai,1,e,t);s.layers=this.layers,this.add(s);const l=new ri(ai,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,s]=t;for(const e of t)this.remove(e);if(e===oe)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),s.up.set(0,1,0),s.lookAt(0,0,-1);else{if(e!==se)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),s.up.set(0,-1,0),s.lookAt(0,0,-1)}for(const e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,r,a,o,s,l]=this.children,c=e.getRenderTarget(),d=e.toneMapping,h=e.xr.enabled;e.toneMapping=v,e.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,s),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(c),e.toneMapping=d,e.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class si extends ze{constructor(e,t,n,i,r,a,o,s,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:T,n,i,r,a,o,s,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class li extends We{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];void 0!==t.encoding&&(Ce("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===J?Q:""),this.texture=new si(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:O}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Zn(5,5,5),o=new ni({name:"CubemapFromEquirect",uniforms:Jn(n),vertexShader:i,fragmentShader:r,side:1,blending:0});o.uniforms.tEquirect.value=t;const s=new $n(a,o),l=t.minFilter;return t.minFilter===L&&(t.minFilter=O),new oi(1,10,this).update(e,s),t.minFilter=l,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(r)}}const ci=new Ye,di=new Ye,hi=new ye;class ui{constructor(e=new Ye(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=ci.subVectors(n,t).cross(di.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(ci),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||hi.getNormalMatrix(e),i=this.coplanarPoint(ci).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const pi=new ft,mi=new Ye;class fi{constructor(e=new ui,t=new ui,n=new ui,i=new ui,r=new ui,a=new ui){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3){const n=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],s=i[3],l=i[4],c=i[5],d=i[6],h=i[7],u=i[8],p=i[9],m=i[10],f=i[11],g=i[12],_=i[13],v=i[14],S=i[15];if(n[0].setComponents(s-r,h-l,f-u,S-g).normalize(),n[1].setComponents(s+r,h+l,f+u,S+g).normalize(),n[2].setComponents(s+a,h+c,f+p,S+_).normalize(),n[3].setComponents(s-a,h-c,f-p,S-_).normalize(),n[4].setComponents(s-o,h-d,f-m,S-v).normalize(),t===oe)n[5].setComponents(s+o,h+d,f+m,S+v).normalize();else{if(t!==se)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);n[5].setComponents(o,d,m,v).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),pi.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),pi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(pi)}intersectsSprite(e){return pi.center.set(0,0,0),pi.radius=.7071067811865476,pi.applyMatrix4(e.matrixWorld),this.intersectsSphere(pi)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(mi.x=i.normal.x>0?e.max.x:e.min.x,mi.y=i.normal.y>0?e.max.y:e.min.y,mi.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(mi)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function gi(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function _i(e,t){const n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=i.get(t);void 0===a?i.set(t,function(t,i){const r=t.array,a=t.usage,o=e.createBuffer();let s;if(e.bindBuffer(i,o),e.bufferData(i,r,a),t.onUploadCallback(),r instanceof Float32Array)s=e.FLOAT;else if(r instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");s=e.HALF_FLOAT}else s=e.UNSIGNED_SHORT;else if(r instanceof Int16Array)s=e.SHORT;else if(r instanceof Uint32Array)s=e.UNSIGNED_INT;else if(r instanceof Int32Array)s=e.INT;else if(r instanceof Int8Array)s=e.BYTE;else if(r instanceof Uint8Array)s=e.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);s=e.UNSIGNED_BYTE}return{buffer:o,type:s,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):a.version<t.version&&(function(t,i,r){const a=i.array,o=i.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1),i.onUploadCallback()}(a.buffer,t,r),a.version=t.version)}}}class vi extends Nn{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),s=Math.floor(i),l=o+1,c=s+1,d=e/o,h=t/s,u=[],p=[],m=[],f=[];for(let e=0;e<c;e++){const t=e*h-a;for(let n=0;n<l;n++){const i=n*d-r;p.push(i,-t,0),m.push(0,0,1),f.push(n/o),f.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){const n=t+l*e,i=t+l*(e+1),r=t+1+l*(e+1),a=t+1+l*e;u.push(n,i,a),u.push(i,r,a)}this.setIndex(u),this.setAttribute("position",new yn(p,3)),this.setAttribute("normal",new yn(m,3)),this.setAttribute("uv",new yn(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vi(e.width,e.height,e.widthSegments,e.heightSegments)}}const Si={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tanisotropyV /= material.anisotropy;\n\tmaterial.anisotropy = saturate( material.anisotropy );\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, vMapUv );\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},Ei={common:{diffuse:{value:new fn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ye},alphaMap:{value:null},alphaMapTransform:{value:new ye},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ye}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ye}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ye}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ye},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ye},normalScale:{value:new xe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ye},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ye}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ye}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ye}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ye},alphaTest:{value:0},uvTransform:{value:new ye}},sprite:{diffuse:{value:new fn(16777215)},opacity:{value:1},center:{value:new xe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ye},alphaMap:{value:null},alphaMapTransform:{value:new ye},alphaTest:{value:0}}},wi={basic:{uniforms:Qn([Ei.common,Ei.specularmap,Ei.envmap,Ei.aomap,Ei.lightmap,Ei.fog]),vertexShader:Si.meshbasic_vert,fragmentShader:Si.meshbasic_frag},lambert:{uniforms:Qn([Ei.common,Ei.specularmap,Ei.envmap,Ei.aomap,Ei.lightmap,Ei.emissivemap,Ei.bumpmap,Ei.normalmap,Ei.displacementmap,Ei.fog,Ei.lights,{emissive:{value:new fn(0)}}]),vertexShader:Si.meshlambert_vert,fragmentShader:Si.meshlambert_frag},phong:{uniforms:Qn([Ei.common,Ei.specularmap,Ei.envmap,Ei.aomap,Ei.lightmap,Ei.emissivemap,Ei.bumpmap,Ei.normalmap,Ei.displacementmap,Ei.fog,Ei.lights,{emissive:{value:new fn(0)},specular:{value:new fn(1118481)},shininess:{value:30}}]),vertexShader:Si.meshphong_vert,fragmentShader:Si.meshphong_frag},standard:{uniforms:Qn([Ei.common,Ei.envmap,Ei.aomap,Ei.lightmap,Ei.emissivemap,Ei.bumpmap,Ei.normalmap,Ei.displacementmap,Ei.roughnessmap,Ei.metalnessmap,Ei.fog,Ei.lights,{emissive:{value:new fn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Si.meshphysical_vert,fragmentShader:Si.meshphysical_frag},toon:{uniforms:Qn([Ei.common,Ei.aomap,Ei.lightmap,Ei.emissivemap,Ei.bumpmap,Ei.normalmap,Ei.displacementmap,Ei.gradientmap,Ei.fog,Ei.lights,{emissive:{value:new fn(0)}}]),vertexShader:Si.meshtoon_vert,fragmentShader:Si.meshtoon_frag},matcap:{uniforms:Qn([Ei.common,Ei.bumpmap,Ei.normalmap,Ei.displacementmap,Ei.fog,{matcap:{value:null}}]),vertexShader:Si.meshmatcap_vert,fragmentShader:Si.meshmatcap_frag},points:{uniforms:Qn([Ei.points,Ei.fog]),vertexShader:Si.points_vert,fragmentShader:Si.points_frag},dashed:{uniforms:Qn([Ei.common,Ei.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Si.linedashed_vert,fragmentShader:Si.linedashed_frag},depth:{uniforms:Qn([Ei.common,Ei.displacementmap]),vertexShader:Si.depth_vert,fragmentShader:Si.depth_frag},normal:{uniforms:Qn([Ei.common,Ei.bumpmap,Ei.normalmap,Ei.displacementmap,{opacity:{value:1}}]),vertexShader:Si.meshnormal_vert,fragmentShader:Si.meshnormal_frag},sprite:{uniforms:Qn([Ei.sprite,Ei.fog]),vertexShader:Si.sprite_vert,fragmentShader:Si.sprite_frag},background:{uniforms:{uvTransform:{value:new ye},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Si.background_vert,fragmentShader:Si.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Si.backgroundCube_vert,fragmentShader:Si.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Si.cube_vert,fragmentShader:Si.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Si.equirect_vert,fragmentShader:Si.equirect_frag},distanceRGBA:{uniforms:Qn([Ei.common,Ei.displacementmap,{referencePosition:{value:new Ye},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Si.distanceRGBA_vert,fragmentShader:Si.distanceRGBA_frag},shadow:{uniforms:Qn([Ei.lights,Ei.fog,{color:{value:new fn(0)},opacity:{value:1}}]),vertexShader:Si.shadow_vert,fragmentShader:Si.shadow_frag}};wi.physical={uniforms:Qn([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ye},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ye},clearcoatNormalScale:{value:new xe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ye},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ye},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ye},sheen:{value:0},sheenColor:{value:new fn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ye},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ye},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ye},transmissionSamplerSize:{value:new xe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ye},attenuationDistance:{value:0},attenuationColor:{value:new fn(0)},specularColor:{value:new fn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ye},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ye},anisotropyVector:{value:new xe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ye}}]),vertexShader:Si.meshphysical_vert,fragmentShader:Si.meshphysical_frag};const xi={r:0,b:0,g:0};function yi(e,t,n,i,r,a,o){const s=new fn(0);let l,c,d=!0===a?0:1,h=null,u=0,p=null;function m(t,n){t.getRGB(xi,ei(e)),i.buffers.color.setClear(xi.r,xi.g,xi.b,n,o)}return{getClearColor:function(){return s},setClearColor:function(e,t=1){s.set(e),d=t,m(s,d)},getClearAlpha:function(){return d},setClearAlpha:function(e){d=e,m(s,d)},render:function(a,f){let g=!1,_=!0===f.isScene?f.background:null;switch(_&&_.isTexture&&(_=(f.backgroundBlurriness>0?n:t).get(_)),null===_?m(s,d):_&&_.isColor&&(m(_,1),g=!0),e.xr.getEnvironmentBlendMode()){case"opaque":g=!0;break;case"additive":i.buffers.color.setClear(0,0,0,1,o),g=!0;break;case"alpha-blend":i.buffers.color.setClear(0,0,0,0,o),g=!0}(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),_&&(_.isCubeTexture||_.mapping===M)?(void 0===c&&(c=new $n(new Zn(1,1,1),new ni({name:"BackgroundCubeMaterial",uniforms:Jn(wi.backgroundCube.uniforms),vertexShader:wi.backgroundCube.vertexShader,fragmentShader:wi.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&!1===_.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=f.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=f.backgroundIntensity,c.material.toneMapped=_.colorSpace!==Q,h===_&&u===_.version&&p===e.toneMapping||(c.material.needsUpdate=!0,h=_,u=_.version,p=e.toneMapping),c.layers.enableAll(),a.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(void 0===l&&(l=new $n(new vi(2,2),new ni({name:"BackgroundMaterial",uniforms:Jn(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=_,l.material.uniforms.backgroundIntensity.value=f.backgroundIntensity,l.material.toneMapped=_.colorSpace!==Q,!0===_.matrixAutoUpdate&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),h===_&&u===_.version&&p===e.toneMapping||(l.material.needsUpdate=!0,h=_,u=_.version,p=e.toneMapping),l.layers.enableAll(),a.unshift(l,l.geometry,l.material,0,0,null))}}}function Ti(e,t,n,i){const r=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||null!==a,s={},l=p(null);let c=l,d=!1;function h(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function u(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){const t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function m(){const e=c.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){g(e,0)}function g(n,r){const a=c.newAttributes,o=c.enabledAttributes,s=c.attributeDivisors;a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==r&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),s[n]=r)}function _(){const t=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function v(t,n,i,r,a,o,s){!0===s?e.vertexAttribIPointer(t,n,i,a,o):e.vertexAttribPointer(t,n,i,r,a,o)}function S(){E(),d=!0,c!==l&&(c=l,h(c.object))}function E(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,S,E){let w=!1;if(o){const t=function(t,n,r){const o=!0===r.wireframe;let l=s[t.id];void 0===l&&(l={},s[t.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let d=c[o];return void 0===d&&(d=p(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),c[o]=d),d}(S,u,l);c!==t&&(c=t,h(c.object)),w=function(e,t,n,i){const r=c.attributes,a=t.attributes;let o=0;const s=n.getAttributes();for(const t in s)if(s[t].location>=0){const n=r[t];let i=a[t];if(void 0===i&&("instanceMatrix"===t&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(i=e.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;o++}return c.attributesNum!==o||c.index!==i}(r,S,u,E),w&&function(e,t,n,i){const r={},a=t.attributes;let o=0;const s=n.getAttributes();for(const t in s)if(s[t].location>=0){let n=a[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),r[t]=i,o++}c.attributes=r,c.attributesNum=o,c.index=i}(r,S,u,E)}else{const e=!0===l.wireframe;c.geometry===S.id&&c.program===u.id&&c.wireframe===e||(c.geometry=S.id,c.program=u.id,c.wireframe=e,w=!0)}null!==E&&n.update(E,e.ELEMENT_ARRAY_BUFFER),(w||d)&&(d=!1,function(r,a,o,s){if(!1===i.isWebGL2&&(r.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;m();const l=s.attributes,c=o.getAttributes(),d=a.defaultAttributeValues;for(const t in c){const a=c[t];if(a.location>=0){let o=l[t];if(void 0===o&&("instanceMatrix"===t&&r.instanceMatrix&&(o=r.instanceMatrix),"instanceColor"===t&&r.instanceColor&&(o=r.instanceColor)),void 0!==o){const t=o.normalized,l=o.itemSize,c=n.get(o);if(void 0===c)continue;const d=c.buffer,h=c.type,u=c.bytesPerElement,p=!0===i.isWebGL2&&(h===e.INT||h===e.UNSIGNED_INT||1013===o.gpuType);if(o.isInterleavedBufferAttribute){const n=o.data,i=n.stride,c=o.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<a.locationSize;e++)g(a.location+e,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<a.locationSize;e++)f(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,d);for(let e=0;e<a.locationSize;e++)v(a.location+e,l/a.locationSize,h,t,i*u,(c+l/a.locationSize*e)*u,p)}else{if(o.isInstancedBufferAttribute){for(let e=0;e<a.locationSize;e++)g(a.location+e,o.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<a.locationSize;e++)f(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,d);for(let e=0;e<a.locationSize;e++)v(a.location+e,l/a.locationSize,h,t,l*u,l/a.locationSize*e*u,p)}}else if(void 0!==d){const n=d[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(a.location,n);break;case 3:e.vertexAttrib3fv(a.location,n);break;case 4:e.vertexAttrib4fv(a.location,n);break;default:e.vertexAttrib1fv(a.location,n)}}}}_()}(r,l,u,S),null!==E&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(E).buffer))},reset:S,resetDefaultState:E,dispose:function(){S();for(const e in s){const t=s[e];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const n=t[e];for(const e in n)u(n[e].object),delete n[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const n=s[t];if(void 0===n[e.id])continue;const i=n[e.id];for(const e in i)u(i[e].object),delete i[e];delete n[e.id]}},initAttributes:m,enableAttribute:f,disableUnusedAttributes:_}}function bi(e,t,n,i){const r=i.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,i){e.drawArrays(a,t,i),n.update(i,a,1)},this.renderInstances=function(i,o,s){if(0===s)return;let l,c;if(r)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,i,o,s),n.update(o,a,s)}}function Mi(e,t,n){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name;let o=void 0!==n.precision?n.precision:"highp";const s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const l=a||t.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,d=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),m=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),_=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=h>0,S=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:_,vertexTextures:v,floatFragmentTextures:S,floatVertexTextures:v&&S,maxSamples:a?e.getParameter(e.MAX_SAMPLES):0}}function Ai(e){const t=this;let n=null,i=0,r=!1,a=!1;const o=new ui,s=new ye,l={value:null,needsUpdate:!1};function c(e,n,i,r){const a=null!==e?e.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const t=i+4*a,r=n.matrixWorldInverse;s.getNormalMatrix(r),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,n=i;t!==a;++t,n+=4)o.copy(e[t]).applyMatrix4(r,s),o.normal.toArray(c,n),c[n+3]=o.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==i||r;return r=t,i=e.length,n},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=c(e,t,0)},this.setState=function(o,s,d){const h=o.clippingPlanes,u=o.clipIntersection,p=o.clipShadows,m=e.get(o);if(!r||null===h||0===h.length||a&&!p)a?c(null):(l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0);else{const e=a?0:i,t=4*e;let r=m.clippingState||null;l.value=r,r=c(h,s,t,d);for(let e=0;e!==t;++e)r[e]=n[e];m.clippingState=r,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=e}}}function Ci(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=T:304===t&&(e.mapping=b),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping;if(303===a||304===a){if(t.has(r))return n(t.get(r).texture,r.mapping);{const a=r.image;if(a&&a.height>0){const o=new li(a.height/2);return o.fromEquirectangularTexture(e,r),t.set(r,o),r.addEventListener("dispose",i),n(o.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}class Pi extends ii{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,s=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const Ri=[.125,.215,.35,.446,.526,.582],Ni=new Pi,Oi=new fn;let Li=null;const Ii=(1+Math.sqrt(5))/2,Ui=1/Ii,Di=[new Ye(1,1,1),new Ye(-1,1,1),new Ye(1,1,-1),new Ye(-1,1,-1),new Ye(0,Ii,Ui),new Ye(0,Ii,-Ui),new Ye(Ui,0,Ii),new Ye(-Ui,0,Ii),new Ye(Ii,Ui,0),new Ye(-Ii,Ui,0)];class Fi{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Li=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Vi(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ki(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Li),e.scissorTest=!1,Bi(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===T||e.mapping===b?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Li=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:O,minFilter:O,generateMipmaps:!1,type:H,format:k,colorSpace:ee,depthBuffer:!1},i=Hi(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Hi(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],i=[];let r=e;const a=e-4+1+Ri.length;for(let o=0;o<a;o++){const a=Math.pow(2,r);n.push(a);let s=1/a;o>e-4?s=Ri[o-e+4-1]:0===o&&(s=0),i.push(s);const l=1/(a-2),c=-l,d=1+l,h=[c,c,d,c,d,d,c,c,d,d,c,d],u=6,p=6,m=3,f=2,g=1,_=new Float32Array(m*p*u),v=new Float32Array(f*p*u),S=new Float32Array(g*p*u);for(let e=0;e<u;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];_.set(i,m*p*e),v.set(h,f*p*e);const r=[e,e,e,e,e,e];S.set(r,g*p*e)}const E=new Nn;E.setAttribute("position",new En(_,m)),E.setAttribute("uv",new En(v,f)),E.setAttribute("faceIndex",new En(S,g)),t.push(E),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(e,t,n){const i=new Float32Array(20),r=new Ye(0,1,0);return new ni({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(i,e,t)}return i}_compileMaterial(e){const t=new $n(this._lodPlanes[0],e);this._renderer.compile(t,Ni)}_sceneToCubeUV(e,t,n,i){const r=new ri(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,c=s.toneMapping;s.getClearColor(Oi),s.toneMapping=v,s.autoClear=!1;const d=new _n({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new $n(new Zn,d);let u=!1;const p=e.background;p?p.isColor&&(d.color.copy(p),e.background=null,u=!0):(d.color.copy(Oi),u=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(r.up.set(0,a[t],0),r.lookAt(o[t],0,0)):1===n?(r.up.set(0,0,a[t]),r.lookAt(0,o[t],0)):(r.up.set(0,a[t],0),r.lookAt(0,0,o[t]));const l=this._cubeSize;Bi(i,n*l,t>2?l:0,l,l),s.setRenderTarget(i),u&&s.render(h,r),s.render(e,r)}h.geometry.dispose(),h.material.dispose(),s.toneMapping=c,s.autoClear=l,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===T||e.mapping===b;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Vi()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ki());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new $n(this._lodPlanes[0],r);r.uniforms.envMap.value=e;const o=this._cubeSize;Bi(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(a,Ni)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=Di[(t-1)%Di.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new $n(this._lodPlanes[i],l),d=l.uniforms,h=this._sizeLods[n]-1,u=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,p=r/u,m=isFinite(r)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);f.push(n),0===e?g+=n:e<m&&(g+=2*n)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=f,d.latitudinal.value="latitudinal"===a,o&&(d.poleAxis.value=o);const{_lodMax:_}=this;d.dTheta.value=u,d.mipInt.value=_-n;const v=this._sizeLods[i];Bi(t,3*v*(i>_-4?i-_+4:0),4*(this._cubeSize-v),3*v,2*v),s.setRenderTarget(t),s.render(c,Ni)}}function Hi(e,t,n){const i=new We(e,t,n);return i.texture.mapping=M,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Bi(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function ki(){return new ni({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Vi(){return new ni({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function zi(e){let t=new WeakMap,n=null;function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping,o=303===a||304===a,s=a===T||a===b;if(o||s){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let i=t.get(r);return null===n&&(n=new Fi(e)),i=o?n.fromEquirectangular(r,i):n.fromCubemap(r,i),t.set(r,i),i.texture}if(t.has(r))return t.get(r).texture;{const a=r.image;if(o&&a&&a.height>0||s&&a&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(a)){null===n&&(n=new Fi(e));const a=o?n.fromEquirectangular(r):n.fromCubemap(r);return t.set(r,a),r.addEventListener("dispose",i),a.texture}return null}}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Gi(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Wi(e,t,n,i){const r={},a=new WeakMap;function o(e){const s=e.target;null!==s.index&&t.remove(s.index);for(const e in s.attributes)t.remove(s.attributes[e]);for(const e in s.morphAttributes){const n=s.morphAttributes[e];for(let e=0,i=n.length;e<i;e++)t.remove(n[e])}s.removeEventListener("dispose",o),delete r[s.id];const l=a.get(s);l&&(t.remove(l),a.delete(s)),i.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,n.memory.geometries--}function s(e){const n=[],i=e.index,r=e.attributes.position;let o=0;if(null!==i){const e=i.array;o=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{const e=r.array;o=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}const s=new(be(n)?xn:wn)(n,1);s.version=o;const l=a.get(e);l&&t.remove(l),a.set(e,s)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",o),r[t.id]=!0,n.memory.geometries++),t},update:function(n){const i=n.attributes;for(const n in i)t.update(i[n],e.ARRAY_BUFFER);const r=n.morphAttributes;for(const n in r){const i=r[n];for(let n=0,r=i.length;n<r;n++)t.update(i[n],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&s(e)}else s(e);return a.get(e)}}}function Xi(e,t,n,i){const r=i.isWebGL2;let a,o,s;this.setMode=function(e){a=e},this.setIndex=function(e){o=e.type,s=e.bytesPerElement},this.render=function(t,i){e.drawElements(a,i,o,t*s),n.update(i,a,1)},this.renderInstances=function(i,l,c){if(0===c)return;let d,h;if(r)d=e,h="drawElementsInstanced";else if(d=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===d)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[h](a,l,o,i*s,c),n.update(l,a,c)}}function qi(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,i,r){switch(t.calls++,i){case e.TRIANGLES:t.triangles+=r*(n/3);break;case e.LINES:t.lines+=r*(n/2);break;case e.LINE_STRIP:t.lines+=r*(n-1);break;case e.LINE_LOOP:t.lines+=r*n;break;case e.POINTS:t.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function ji(e,t){return e[0]-t[0]}function Yi(e,t){return Math.abs(t[1])-Math.abs(e[1])}function $i(e,t,n){const i={},r=new Float32Array(8),a=new WeakMap,o=new Ge,s=[];for(let e=0;e<8;e++)s[e]=[e,0];return{update:function(l,c,d){const h=l.morphTargetInfluences;if(!0===t.isWebGL2){const u=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=void 0!==u?u.length:0;let m=a.get(c);if(void 0===m||m.count!==p){void 0!==m&&m.texture.dispose();const _=void 0!==c.morphAttributes.position,v=void 0!==c.morphAttributes.normal,S=void 0!==c.morphAttributes.color,E=c.morphAttributes.position||[],w=c.morphAttributes.normal||[],x=c.morphAttributes.color||[];let y=0;!0===_&&(y=1),!0===v&&(y=2),!0===S&&(y=3);let T=c.attributes.position.count*y,b=1;T>t.maxTextureSize&&(b=Math.ceil(T/t.maxTextureSize),T=t.maxTextureSize);const M=new Float32Array(T*b*4*p),A=new Xe(M,T,b,p);A.type=F,A.needsUpdate=!0;const C=4*y;for(let R=0;R<p;R++){const N=E[R],O=w[R],L=x[R],I=T*b*4*R;for(let U=0;U<N.count;U++){const D=U*C;!0===_&&(o.fromBufferAttribute(N,U),M[I+D+0]=o.x,M[I+D+1]=o.y,M[I+D+2]=o.z,M[I+D+3]=0),!0===v&&(o.fromBufferAttribute(O,U),M[I+D+4]=o.x,M[I+D+5]=o.y,M[I+D+6]=o.z,M[I+D+7]=0),!0===S&&(o.fromBufferAttribute(L,U),M[I+D+8]=o.x,M[I+D+9]=o.y,M[I+D+10]=o.z,M[I+D+11]=4===L.itemSize?o.w:1)}}function P(){A.dispose(),a.delete(c),c.removeEventListener("dispose",P)}m={count:p,texture:A,size:new xe(T,b)},a.set(c,m),c.addEventListener("dispose",P)}let f=0;for(let H=0;H<h.length;H++)f+=h[H];const g=c.morphTargetsRelative?1:1-f;d.getUniforms().setValue(e,"morphTargetBaseInfluence",g),d.getUniforms().setValue(e,"morphTargetInfluences",h),d.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),d.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{const B=void 0===h?0:h.length;let k=i[c.id];if(void 0===k||k.length!==B){k=[];for(let X=0;X<B;X++)k[X]=[X,0];i[c.id]=k}for(let q=0;q<B;q++){const j=k[q];j[0]=q,j[1]=h[q]}k.sort(Yi);for(let Y=0;Y<8;Y++)Y<B&&k[Y][1]?(s[Y][0]=k[Y][0],s[Y][1]=k[Y][1]):(s[Y][0]=Number.MAX_SAFE_INTEGER,s[Y][1]=0);s.sort(ji);const V=c.morphAttributes.position,z=c.morphAttributes.normal;let G=0;for(let $=0;$<8;$++){const K=s[$],Z=K[0],J=K[1];Z!==Number.MAX_SAFE_INTEGER&&J?(V&&c.getAttribute("morphTarget"+$)!==V[Z]&&c.setAttribute("morphTarget"+$,V[Z]),z&&c.getAttribute("morphNormal"+$)!==z[Z]&&c.setAttribute("morphNormal"+$,z[Z]),r[$]=J,G+=J):(V&&!0===c.hasAttribute("morphTarget"+$)&&c.deleteAttribute("morphTarget"+$),z&&!0===c.hasAttribute("morphNormal"+$)&&c.deleteAttribute("morphNormal"+$),r[$]=0)}const W=c.morphTargetsRelative?1:1-G;d.getUniforms().setValue(e,"morphTargetBaseInfluence",W),d.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function Ki(e,t,n,i){let r=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(o){const s=i.render.frame,l=o.geometry,c=t.get(o,l);if(r.get(c)!==s&&(t.update(c),r.set(c,s)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",a)&&o.addEventListener("dispose",a),r.get(o)!==s&&(n.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&n.update(o.instanceColor,e.ARRAY_BUFFER),r.set(o,s))),o.isSkinnedMesh){const e=o.skeleton;r.get(e)!==s&&(e.update(),r.set(e,s))}return c},dispose:function(){r=new WeakMap}}}const Zi=new ze,Ji=new Xe,Qi=new qe,er=new si,tr=[],nr=[],ir=new Float32Array(16),rr=new Float32Array(9),ar=new Float32Array(4);function or(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=tr[r];if(void 0===a&&(a=new Float32Array(r),tr[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function sr(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function lr(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function cr(e,t){let n=nr[t];void 0===n&&(n=new Int32Array(t),nr[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function dr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function hr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(sr(n,t))return;e.uniform2fv(this.addr,t),lr(n,t)}}function ur(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(sr(n,t))return;e.uniform3fv(this.addr,t),lr(n,t)}}function pr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(sr(n,t))return;e.uniform4fv(this.addr,t),lr(n,t)}}function mr(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(sr(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),lr(n,t)}else{if(sr(n,i))return;ar.set(i),e.uniformMatrix2fv(this.addr,!1,ar),lr(n,i)}}function fr(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(sr(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),lr(n,t)}else{if(sr(n,i))return;rr.set(i),e.uniformMatrix3fv(this.addr,!1,rr),lr(n,i)}}function gr(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(sr(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),lr(n,t)}else{if(sr(n,i))return;ir.set(i),e.uniformMatrix4fv(this.addr,!1,ir),lr(n,i)}}function _r(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function vr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(sr(n,t))return;e.uniform2iv(this.addr,t),lr(n,t)}}function Sr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(sr(n,t))return;e.uniform3iv(this.addr,t),lr(n,t)}}function Er(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(sr(n,t))return;e.uniform4iv(this.addr,t),lr(n,t)}}function wr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function xr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(sr(n,t))return;e.uniform2uiv(this.addr,t),lr(n,t)}}function yr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(sr(n,t))return;e.uniform3uiv(this.addr,t),lr(n,t)}}function Tr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(sr(n,t))return;e.uniform4uiv(this.addr,t),lr(n,t)}}function br(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(t||Zi,r)}function Mr(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||Qi,r)}function Ar(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||er,r)}function Cr(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Ji,r)}function Pr(e,t){e.uniform1fv(this.addr,t)}function Rr(e,t){const n=or(t,this.size,2);e.uniform2fv(this.addr,n)}function Nr(e,t){const n=or(t,this.size,3);e.uniform3fv(this.addr,n)}function Or(e,t){const n=or(t,this.size,4);e.uniform4fv(this.addr,n)}function Lr(e,t){const n=or(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Ir(e,t){const n=or(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Ur(e,t){const n=or(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Dr(e,t){e.uniform1iv(this.addr,t)}function Fr(e,t){e.uniform2iv(this.addr,t)}function Hr(e,t){e.uniform3iv(this.addr,t)}function Br(e,t){e.uniform4iv(this.addr,t)}function kr(e,t){e.uniform1uiv(this.addr,t)}function Vr(e,t){e.uniform2uiv(this.addr,t)}function zr(e,t){e.uniform3uiv(this.addr,t)}function Gr(e,t){e.uniform4uiv(this.addr,t)}function Wr(e,t,n){const i=this.cache,r=t.length,a=cr(n,r);sr(i,a)||(e.uniform1iv(this.addr,a),lr(i,a));for(let e=0;e!==r;++e)n.setTexture2D(t[e]||Zi,a[e])}function Xr(e,t,n){const i=this.cache,r=t.length,a=cr(n,r);sr(i,a)||(e.uniform1iv(this.addr,a),lr(i,a));for(let e=0;e!==r;++e)n.setTexture3D(t[e]||Qi,a[e])}function qr(e,t,n){const i=this.cache,r=t.length,a=cr(n,r);sr(i,a)||(e.uniform1iv(this.addr,a),lr(i,a));for(let e=0;e!==r;++e)n.setTextureCube(t[e]||er,a[e])}function jr(e,t,n){const i=this.cache,r=t.length,a=cr(n,r);sr(i,a)||(e.uniform1iv(this.addr,a),lr(i,a));for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||Ji,a[e])}class Yr{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return dr;case 35664:return hr;case 35665:return ur;case 35666:return pr;case 35674:return mr;case 35675:return fr;case 35676:return gr;case 5124:case 35670:return _r;case 35667:case 35671:return vr;case 35668:case 35672:return Sr;case 35669:case 35673:return Er;case 5125:return wr;case 36294:return xr;case 36295:return yr;case 36296:return Tr;case 35678:case 36198:case 36298:case 36306:case 35682:return br;case 35679:case 36299:case 36307:return Mr;case 35680:case 36300:case 36308:case 36293:return Ar;case 36289:case 36303:case 36311:case 36292:return Cr}}(t.type)}}class $r{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Pr;case 35664:return Rr;case 35665:return Nr;case 35666:return Or;case 35674:return Lr;case 35675:return Ir;case 35676:return Ur;case 5124:case 35670:return Dr;case 35667:case 35671:return Fr;case 35668:case 35672:return Hr;case 35669:case 35673:return Br;case 5125:return kr;case 36294:return Vr;case 36295:return zr;case 36296:return Gr;case 35678:case 36198:case 36298:case 36306:case 35682:return Wr;case 35679:case 36299:case 36307:return Xr;case 35680:case 36300:case 36308:case 36293:return qr;case 36289:case 36303:case 36311:case 36292:return jr}}(t.type)}}class Kr{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const Zr=/(\w+)(\])?(\[|\.)?/g;function Jr(e,t){e.seq.push(t),e.map[t.id]=t}function Qr(e,t,n){const i=e.name,r=i.length;for(Zr.lastIndex=0;;){const a=Zr.exec(i),o=Zr.lastIndex;let s=a[1];const l="]"===a[2],c=a[3];if(l&&(s|=0),void 0===c||"["===c&&o+2===r){Jr(n,void 0===c?new Yr(s,e,t):new $r(s,e,t));break}{let e=n.map[s];void 0===e&&(e=new Kr(s),Jr(n,e)),n=e}}}class ea{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);Qr(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const a=t[r],o=n[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function ta(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let na=0;function ia(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){const n=e.split("\n"),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=r;e<a;e++){const r=e+1;i.push(`${r===t?">":" "} ${r}: ${n[e]}`)}return i.join("\n")}(e.getShaderSource(t),i)}return r}function ra(e,t){const n=function(e){switch(e){case ee:return["Linear","( value )"];case Q:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function aa(e,t){let n;switch(t){case S:n="Linear";break;case E:n="Reinhard";break;case w:n="OptimizedCineon";break;case x:n="ACESFilmic";break;case y:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function oa(e){return""!==e}function sa(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function la(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const ca=/^[ \t]*#include +<([\w\d./]+)>/gm;function da(e){return e.replace(ca,ua)}const ha=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function ua(e,t){let n=Si[t];if(void 0===n){const e=ha.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");n=Si[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e)}return da(n)}const pa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ma(e){return e.replace(pa,fa)}function fa(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function ga(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function _a(e,t,n,i){const r=e.getContext(),a=n.defines;let o=n.vertexShader,s=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===h?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===u?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===p&&(t="SHADOWMAP_TYPE_VSM"),t}(n),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case T:case b:t="ENVMAP_TYPE_CUBE";break;case M:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),d=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===b&&(t="ENVMAP_MODE_REFRACTION"),t}(n),m=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case f:t="ENVMAP_BLENDING_MULTIPLY";break;case g:t="ENVMAP_BLENDING_MIX";break;case _:t="ENVMAP_BLENDING_ADD"}return t}(n),S=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),E=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(oa).join("\n")}(n),w=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(a),x=r.createProgram();let y,A,C=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(y=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w].filter(oa).join("\n"),y.length>0&&(y+="\n"),A=[E,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w].filter(oa).join("\n"),A.length>0&&(A+="\n")):(y=[ga(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(oa).join("\n"),A=[E,ga(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,w,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+d:"",n.envMap?"#define "+m:"",S?"#define CUBEUV_TEXEL_WIDTH "+S.texelWidth:"",S?"#define CUBEUV_TEXEL_HEIGHT "+S.texelHeight:"",S?"#define CUBEUV_MAX_MIP "+S.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==v?"#define TONE_MAPPING":"",n.toneMapping!==v?Si.tonemapping_pars_fragment:"",n.toneMapping!==v?aa("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Si.colorspace_pars_fragment,ra("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(oa).join("\n")),o=da(o),o=sa(o,n),o=la(o,n),s=da(s),s=sa(s,n),s=la(s,n),o=ma(o),s=ma(s),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(C="#version 300 es\n",y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+y,A=["#define varying in",n.glslVersion===re?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===re?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+A);const P=C+y+o,R=C+A+s,N=ta(r,r.VERTEX_SHADER,P),O=ta(r,r.FRAGMENT_SHADER,R);if(r.attachShader(x,N),r.attachShader(x,O),void 0!==n.index0AttributeName?r.bindAttribLocation(x,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),e.debug.checkShaderErrors){const t=r.getProgramInfoLog(x).trim(),n=r.getShaderInfoLog(N).trim(),i=r.getShaderInfoLog(O).trim();let a=!0,o=!0;if(!1===r.getProgramParameter(x,r.LINK_STATUS))if(a=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(r,x,N,O);else{const e=ia(r,N,"vertex"),n=ia(r,O,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(x,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==n&&""!==i||(o=!1);o&&(this.diagnostics={runnable:a,programLog:t,vertexShader:{log:n,prefix:y},fragmentShader:{log:i,prefix:A}})}let L,I;return r.deleteShader(N),r.deleteShader(O),this.getUniforms=function(){return void 0===L&&(L=new ea(r,x)),L},this.getAttributes=function(){return void 0===I&&(I=function(e,t){const n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r),a=i.name;let o=1;i.type===e.FLOAT_MAT2&&(o=2),i.type===e.FLOAT_MAT3&&(o=3),i.type===e.FLOAT_MAT4&&(o=4),n[a]={type:i.type,location:e.getAttribLocation(t,a),locationSize:o}}return n}(r,x)),I},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=na++,this.cacheKey=t,this.usedTimes=1,this.program=x,this.vertexShader=N,this.fragmentShader=O,this}let va=0;class Sa{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new Ea(e),t.set(e,n)),n}}class Ea{constructor(e){this.id=va++,this.code=e,this.usedTimes=0}}function wa(e,t,n,i,r,a,o){const s=new Ut,l=new Sa,c=[],d=r.isWebGL2,h=r.logarithmicDepthBuffer,u=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(e){return 0===e?"uv":`uv${e}`}return{getParameters:function(a,s,c,g,_){const S=g.fog,E=_.geometry,w=a.isMeshStandardMaterial?g.environment:null,x=(a.isMeshStandardMaterial?n:t).get(a.envMap||w),y=x&&x.mapping===M?x.image.height:null,T=m[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const b=E.morphAttributes.position||E.morphAttributes.normal||E.morphAttributes.color,A=void 0!==b?b.length:0;let C,P,R,N,O=0;if(void 0!==E.morphAttributes.position&&(O=1),void 0!==E.morphAttributes.normal&&(O=2),void 0!==E.morphAttributes.color&&(O=3),T){const e=wi[T];C=e.vertexShader,P=e.fragmentShader}else C=a.vertexShader,P=a.fragmentShader,l.update(a),R=l.getVertexShaderID(a),N=l.getFragmentShaderID(a);const L=e.getRenderTarget(),I=!0===_.isInstancedMesh,U=!!a.map,D=!!a.matcap,F=!!x,H=!!a.aoMap,B=!!a.lightMap,k=!!a.bumpMap,V=!!a.normalMap,z=!!a.displacementMap,G=!!a.emissiveMap,W=!!a.metalnessMap,X=!!a.roughnessMap,q=a.anisotropy>0,j=a.clearcoat>0,Y=a.iridescence>0,$=a.sheen>0,K=a.transmission>0,Z=q&&!!a.anisotropyMap,J=j&&!!a.clearcoatMap,Q=j&&!!a.clearcoatNormalMap,te=j&&!!a.clearcoatRoughnessMap,ne=Y&&!!a.iridescenceMap,ie=Y&&!!a.iridescenceThicknessMap,re=$&&!!a.sheenColorMap,ae=$&&!!a.sheenRoughnessMap,oe=!!a.specularMap,se=!!a.specularColorMap,le=!!a.specularIntensityMap,ce=K&&!!a.transmissionMap,de=K&&!!a.thicknessMap,he=!!a.gradientMap,ue=!!a.alphaMap,pe=a.alphaTest>0,me=!!a.alphaHash,fe=!!a.extensions,ge=!!E.attributes.uv1,_e=!!E.attributes.uv2,ve=!!E.attributes.uv3;return{isWebGL2:d,shaderID:T,shaderType:a.type,shaderName:a.name,vertexShader:C,fragmentShader:P,defines:a.defines,customVertexShaderID:R,customFragmentShaderID:N,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:I,instancingColor:I&&null!==_.instanceColor,supportsVertexTextures:u,outputColorSpace:null===L?e.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:ee,map:U,matcap:D,envMap:F,envMapMode:F&&x.mapping,envMapCubeUVHeight:y,aoMap:H,lightMap:B,bumpMap:k,normalMap:V,displacementMap:u&&z,emissiveMap:G,normalMapObjectSpace:V&&1===a.normalMapType,normalMapTangentSpace:V&&0===a.normalMapType,metalnessMap:W,roughnessMap:X,anisotropy:q,anisotropyMap:Z,clearcoat:j,clearcoatMap:J,clearcoatNormalMap:Q,clearcoatRoughnessMap:te,iridescence:Y,iridescenceMap:ne,iridescenceThicknessMap:ie,sheen:$,sheenColorMap:re,sheenRoughnessMap:ae,specularMap:oe,specularColorMap:se,specularIntensityMap:le,transmission:K,transmissionMap:ce,thicknessMap:de,gradientMap:he,opaque:!1===a.transparent&&1===a.blending,alphaMap:ue,alphaTest:pe,alphaHash:me,combine:a.combine,mapUv:U&&f(a.map.channel),aoMapUv:H&&f(a.aoMap.channel),lightMapUv:B&&f(a.lightMap.channel),bumpMapUv:k&&f(a.bumpMap.channel),normalMapUv:V&&f(a.normalMap.channel),displacementMapUv:z&&f(a.displacementMap.channel),emissiveMapUv:G&&f(a.emissiveMap.channel),metalnessMapUv:W&&f(a.metalnessMap.channel),roughnessMapUv:X&&f(a.roughnessMap.channel),anisotropyMapUv:Z&&f(a.anisotropyMap.channel),clearcoatMapUv:J&&f(a.clearcoatMap.channel),clearcoatNormalMapUv:Q&&f(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:te&&f(a.clearcoatRoughnessMap.channel),iridescenceMapUv:ne&&f(a.iridescenceMap.channel),iridescenceThicknessMapUv:ie&&f(a.iridescenceThicknessMap.channel),sheenColorMapUv:re&&f(a.sheenColorMap.channel),sheenRoughnessMapUv:ae&&f(a.sheenRoughnessMap.channel),specularMapUv:oe&&f(a.specularMap.channel),specularColorMapUv:se&&f(a.specularColorMap.channel),specularIntensityMapUv:le&&f(a.specularIntensityMap.channel),transmissionMapUv:ce&&f(a.transmissionMap.channel),thicknessMapUv:de&&f(a.thicknessMap.channel),alphaMapUv:ue&&f(a.alphaMap.channel),vertexTangents:!!E.attributes.tangent&&(V||q),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!E.attributes.color&&4===E.attributes.color.itemSize,vertexUv1s:ge,vertexUv2s:_e,vertexUv3s:ve,pointsUvs:!0===_.isPoints&&!!E.attributes.uv&&(U||ue),fog:!!S,useFog:!0===a.fog,fogExp2:S&&S.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==E.morphAttributes.position,morphNormals:void 0!==E.morphAttributes.normal,morphColors:void 0!==E.morphAttributes.color,morphTargetsCount:A,morphTextureStride:O,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:v,useLegacyLights:e.useLegacyLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:fe&&!0===a.extensions.derivatives,extensionFragDepth:fe&&!0===a.extensions.fragDepth,extensionDrawBuffers:fe&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:fe&&!0===a.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){s.disableAll(),t.isWebGL2&&s.enable(0),t.supportsVertexTextures&&s.enable(1),t.instancing&&s.enable(2),t.instancingColor&&s.enable(3),t.matcap&&s.enable(4),t.envMap&&s.enable(5),t.normalMapObjectSpace&&s.enable(6),t.normalMapTangentSpace&&s.enable(7),t.clearcoat&&s.enable(8),t.iridescence&&s.enable(9),t.alphaTest&&s.enable(10),t.vertexColors&&s.enable(11),t.vertexAlphas&&s.enable(12),t.vertexUv1s&&s.enable(13),t.vertexUv2s&&s.enable(14),t.vertexUv3s&&s.enable(15),t.vertexTangents&&s.enable(16),t.anisotropy&&s.enable(17),e.push(s.mask),s.disableAll(),t.fog&&s.enable(0),t.useFog&&s.enable(1),t.flatShading&&s.enable(2),t.logarithmicDepthBuffer&&s.enable(3),t.skinning&&s.enable(4),t.morphTargets&&s.enable(5),t.morphNormals&&s.enable(6),t.morphColors&&s.enable(7),t.premultipliedAlpha&&s.enable(8),t.shadowMapEnabled&&s.enable(9),t.useLegacyLights&&s.enable(10),t.doubleSided&&s.enable(11),t.flipSided&&s.enable(12),t.useDepthPacking&&s.enable(13),t.dithering&&s.enable(14),t.transmission&&s.enable(15),t.sheen&&s.enable(16),t.opaque&&s.enable(17),t.pointsUvs&&s.enable(18),e.push(s.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=wi[t];n=ti.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,t=c.length;e<t;e++){const t=c[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new _a(e,n,t,a),c.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:c,dispose:function(){l.dispose()}}}function xa(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function ya(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ta(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function ba(){const e=[];let t=0;const n=[],i=[],r=[];function a(n,i,r,a,o,s){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:o,group:s},e[t]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=o,l.group=s),t++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){t=0,n.length=0,i.length=0,r.length=0},push:function(e,t,o,s,l,c){const d=a(e,t,o,s,l,c);o.transmission>0?i.push(d):!0===o.transparent?r.push(d):n.push(d)},unshift:function(e,t,o,s,l,c){const d=a(e,t,o,s,l,c);o.transmission>0?i.unshift(d):!0===o.transparent?r.unshift(d):n.unshift(d)},finish:function(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||ya),i.length>1&&i.sort(t||Ta),r.length>1&&r.sort(t||Ta)}}}function Ma(){let e=new WeakMap;return{get:function(t,n){const i=e.get(t);let r;return void 0===i?(r=new ba,e.set(t,[r])):n>=i.length?(r=new ba,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function Aa(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new Ye,color:new fn};break;case"SpotLight":n={position:new Ye,direction:new Ye,color:new fn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Ye,color:new fn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Ye,skyColor:new fn,groundColor:new fn};break;case"RectAreaLight":n={color:new fn,position:new Ye,halfWidth:new Ye,halfHeight:new Ye}}return e[t.id]=n,n}}}let Ca=0;function Pa(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function Ra(e,t){const n=new Aa,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xe,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let e=0;e<9;e++)r.probe.push(new Ye);const a=new Ye,o=new Tt,s=new Tt;return{setup:function(a,o){let s=0,l=0,c=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let d=0,h=0,u=0,p=0,m=0,f=0,g=0,_=0,v=0,S=0;a.sort(Pa);const E=!0===o?Math.PI:1;for(let e=0,t=a.length;e<t;e++){const t=a[e],o=t.color,w=t.intensity,x=t.distance,y=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=o.r*w*E,l+=o.g*w*E,c+=o.b*w*E;else if(t.isLightProbe)for(let e=0;e<9;e++)r.probe[e].addScaledVector(t.sh.coefficients[e],w);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*E),t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.directionalShadow[d]=n,r.directionalShadowMap[d]=y,r.directionalShadowMatrix[d]=t.shadow.matrix,f++}r.directional[d]=e,d++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(o).multiplyScalar(w*E),e.distance=x,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,r.spot[u]=e;const a=t.shadow;if(t.map&&(r.spotLightMap[v]=t.map,v++,a.updateMatrices(t),t.castShadow&&S++),r.spotLightMatrix[u]=a.matrix,t.castShadow){const e=i.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,r.spotShadow[u]=e,r.spotShadowMap[u]=y,_++}u++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(o).multiplyScalar(w),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),r.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*E),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,r.pointShadow[h]=n,r.pointShadowMap[h]=y,r.pointShadowMatrix[h]=t.shadow.matrix,g++}r.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(w*E),e.groundColor.copy(t.groundColor).multiplyScalar(w*E),r.hemi[m]=e,m++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=Ei.LTC_FLOAT_1,r.rectAreaLTC2=Ei.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Ei.LTC_HALF_1,r.rectAreaLTC2=Ei.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=s,r.ambient[1]=l,r.ambient[2]=c;const w=r.hash;w.directionalLength===d&&w.pointLength===h&&w.spotLength===u&&w.rectAreaLength===p&&w.hemiLength===m&&w.numDirectionalShadows===f&&w.numPointShadows===g&&w.numSpotShadows===_&&w.numSpotMaps===v||(r.directional.length=d,r.spot.length=u,r.rectArea.length=p,r.point.length=h,r.hemi.length=m,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=_,r.spotShadowMap.length=_,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=g,r.spotLightMatrix.length=_+v-S,r.spotLightMap.length=v,r.numSpotLightShadowsWithMaps=S,w.directionalLength=d,w.pointLength=h,w.spotLength=u,w.rectAreaLength=p,w.hemiLength=m,w.numDirectionalShadows=f,w.numPointShadows=g,w.numSpotShadows=_,w.numSpotMaps=v,r.version=Ca++)},setupView:function(e,t){let n=0,i=0,l=0,c=0,d=0;const h=t.matrixWorldInverse;for(let t=0,u=e.length;t<u;t++){const u=e[t];if(u.isDirectionalLight){const e=r.directional[n];e.direction.setFromMatrixPosition(u.matrixWorld),a.setFromMatrixPosition(u.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),n++}else if(u.isSpotLight){const e=r.spot[l];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(u.matrixWorld),a.setFromMatrixPosition(u.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),l++}else if(u.isRectAreaLight){const e=r.rectArea[c];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(h),s.identity(),o.copy(u.matrixWorld),o.premultiply(h),s.extractRotation(o),e.halfWidth.set(.5*u.width,0,0),e.halfHeight.set(0,.5*u.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),c++}else if(u.isPointLight){const e=r.point[i];e.position.setFromMatrixPosition(u.matrixWorld),e.position.applyMatrix4(h),i++}else if(u.isHemisphereLight){const e=r.hemi[d];e.direction.setFromMatrixPosition(u.matrixWorld),e.direction.transformDirection(h),d++}}},state:r}}function Na(e,t){const n=new Ra(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(e){n.setup(i,e)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function Oa(e,t){let n=new WeakMap;return{get:function(i,r=0){const a=n.get(i);let o;return void 0===a?(o=new Na(e,t),n.set(i,[o])):r>=a.length?(o=new Na(e,t),a.push(o)):o=a[r],o},dispose:function(){n=new WeakMap}}}class La extends dn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ia extends dn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Ua(e,t,n){let i=new fi;const r=new xe,a=new xe,o=new Ge,s=new La({depthPacking:3201}),l=new Ia,c={},d=n.maxTextureSize,u={0:1,1:0,2:2},m=new ni({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xe},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),f=m.clone();f.defines.HORIZONTAL_PASS=1;const g=new Nn;g.setAttribute("position",new En(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new $n(g,m),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=h;let S=this.type;function E(n,i){const a=t.update(_);m.defines.VSM_SAMPLES!==n.blurSamples&&(m.defines.VSM_SAMPLES=n.blurSamples,f.defines.VSM_SAMPLES=n.blurSamples,m.needsUpdate=!0,f.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new We(r.x,r.y)),m.uniforms.shadow_pass.value=n.map.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,a,m,_,null),f.uniforms.shadow_pass.value=n.mapPass.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,a,f,_,null)}function w(t,n,i,r){let a=null;const o=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==o)a=o;else if(a=!0===i.isPointLight?l:s,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=a.uuid,t=n.uuid;let i=c[e];void 0===i&&(i={},c[e]=i);let r=i[t];void 0===r&&(r=a.clone(),i[t]=r),a=r}return a.visible=n.visible,a.wireframe=n.wireframe,a.side=r===p?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=i),a}function x(n,r,a,o,s){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&s===p)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=t.update(n),r=n.material;if(Array.isArray(r)){const t=i.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],d=r[c.materialIndex];if(d&&d.visible){const t=w(n,d,o,s);e.renderBufferDirect(a,null,i,t,n,c)}}}else if(r.visible){const t=w(n,r,o,s);e.renderBufferDirect(a,null,i,t,n,null)}}const l=n.children;for(let e=0,t=l.length;e<t;e++)x(l[e],r,a,o,s)}this.render=function(t,n,s){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),c=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),u=e.state;u.setBlending(0),u.buffers.color.setClear(1,1,1,1),u.buffers.depth.setTest(!0),u.setScissorTest(!1);const m=S!==p&&this.type===p,f=S===p&&this.type!==p;for(let l=0,c=t.length;l<c;l++){const c=t[l],h=c.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;r.copy(h.mapSize);const g=h.getFrameExtents();if(r.multiply(g),a.copy(h.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(a.x=Math.floor(d/g.x),r.x=a.x*g.x,h.mapSize.x=a.x),r.y>d&&(a.y=Math.floor(d/g.y),r.y=a.y*g.y,h.mapSize.y=a.y)),null===h.map||!0===m||!0===f){const e=this.type!==p?{minFilter:R,magFilter:R}:{};null!==h.map&&h.map.dispose(),h.map=new We(r.x,r.y,e),h.map.texture.name=c.name+".shadowMap",h.camera.updateProjectionMatrix()}e.setRenderTarget(h.map),e.clear();const _=h.getViewportCount();for(let e=0;e<_;e++){const t=h.getViewport(e);o.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),u.viewport(o),h.updateMatrices(c,e),i=h.getFrustum(),x(n,s,h.camera,c,this.type)}!0!==h.isPointLightShadow&&this.type===p&&E(h,s),h.needsUpdate=!1}S=this.type,v.needsUpdate=!1,e.setRenderTarget(l,c,h)}}function Da(e,t,n){const i=n.isWebGL2,r=new function(){let t=!1;const n=new Ge;let i=null;const r=new Ge(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,o,s){!0===s&&(t*=o,i*=o,a*=o),n.set(t,i,a,o),!1===r.equals(n)&&(e.clearColor(t,i,a,o),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(t){t?V(e.DEPTH_TEST):z(e.DEPTH_TEST)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},o=new function(){let t=!1,n=null,i=null,r=null,a=null,o=null,s=null,l=null,c=null;return{setTest:function(n){t||(n?V(e.STENCIL_TEST):z(e.STENCIL_TEST))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,o){i===t&&r===n&&a===o||(e.stencilFunc(t,n,o),i=t,r=n,a=o)},setOp:function(t,n,i){o===t&&s===n&&l===i||(e.stencilOp(t,n,i),o=t,s=n,l=i)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,o=null,s=null,l=null,c=null}}},s=new WeakMap,l=new WeakMap;let c={},d={},h=new WeakMap,u=[],p=null,f=!1,g=null,_=null,v=null,S=null,E=null,w=null,x=null,y=!1,T=null,b=null,M=null,A=null,C=null;const P=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let R=!1,N=0;const O=e.getParameter(e.VERSION);-1!==O.indexOf("WebGL")?(N=parseFloat(/^WebGL (\d)/.exec(O)[1]),R=N>=1):-1!==O.indexOf("OpenGL ES")&&(N=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),R=N>=2);let L=null,I={};const U=e.getParameter(e.SCISSOR_BOX),D=e.getParameter(e.VIEWPORT),F=(new Ge).fromArray(U),H=(new Ge).fromArray(D);function B(t,n,r,a){const o=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let s=0;s<r;s++)!i||t!==e.TEXTURE_3D&&t!==e.TEXTURE_2D_ARRAY?e.texImage2D(n+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,o):e.texImage3D(n,0,e.RGBA,1,1,a,0,e.RGBA,e.UNSIGNED_BYTE,o);return s}const k={};function V(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function z(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}k[e.TEXTURE_2D]=B(e.TEXTURE_2D,e.TEXTURE_2D,1),k[e.TEXTURE_CUBE_MAP]=B(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(k[e.TEXTURE_2D_ARRAY]=B(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),k[e.TEXTURE_3D]=B(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),r.setClear(0,0,0,1),a.setClear(1),o.setClear(0),V(e.DEPTH_TEST),a.setFunc(3),q(!1),j(1),V(e.CULL_FACE),X(0);const G={[m]:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};if(i)G[103]=e.MIN,G[104]=e.MAX;else{const e=t.get("EXT_blend_minmax");null!==e&&(G[103]=e.MIN_EXT,G[104]=e.MAX_EXT)}const W={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA};function X(t,n,i,r,a,o,s,l){if(0!==t){if(!1===f&&(V(e.BLEND),f=!0),5===t)a=a||n,o=o||i,s=s||r,n===_&&a===E||(e.blendEquationSeparate(G[n],G[a]),_=n,E=a),i===v&&r===S&&o===w&&s===x||(e.blendFuncSeparate(W[i],W[r],W[o],W[s]),v=i,S=r,w=o,x=s),g=t,y=!1;else if(t!==g||l!==y){if(_===m&&E===m||(e.blendEquation(e.FUNC_ADD),_=m,E=m),l)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}v=null,S=null,w=null,x=null,g=t,y=l}}else!0===f&&(z(e.BLEND),f=!1)}function q(t){T!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),T=t)}function j(t){0!==t?(V(e.CULL_FACE),t!==b&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):z(e.CULL_FACE),b=t}function Y(t,n,i){t?(V(e.POLYGON_OFFSET_FILL),A===n&&C===i||(e.polygonOffset(n,i),A=n,C=i)):z(e.POLYGON_OFFSET_FILL)}return{buffers:{color:r,depth:a,stencil:o},enable:V,disable:z,bindFramebuffer:function(t,n){return d[t]!==n&&(e.bindFramebuffer(t,n),d[t]=n,i&&(t===e.DRAW_FRAMEBUFFER&&(d[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(d[e.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(i,r){let a=u,o=!1;if(i)if(a=h.get(r),void 0===a&&(a=[],h.set(r,a)),i.isWebGLMultipleRenderTargets){const t=i.texture;if(a.length!==t.length||a[0]!==e.COLOR_ATTACHMENT0){for(let n=0,i=t.length;n<i;n++)a[n]=e.COLOR_ATTACHMENT0+n;a.length=t.length,o=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,o=!0);else a[0]!==e.BACK&&(a[0]=e.BACK,o=!0);o&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return p!==t&&(e.useProgram(t),p=t,!0)},setBlending:X,setMaterial:function(t,n){2===t.side?z(e.CULL_FACE):V(e.CULL_FACE);let i=1===t.side;n&&(i=!i),q(i),1===t.blending&&!1===t.transparent?X(0):X(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),r.setMask(t.colorWrite);const s=t.stencilWrite;o.setTest(s),s&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Y(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?V(e.SAMPLE_ALPHA_TO_COVERAGE):z(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:q,setCullFace:j,setLineWidth:function(t){t!==M&&(R&&e.lineWidth(t),M=t)},setPolygonOffset:Y,setScissorTest:function(t){t?V(e.SCISSOR_TEST):z(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+P-1),L!==t&&(e.activeTexture(t),L=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===L?e.TEXTURE0+P-1:L);let r=I[i];void 0===r&&(r={type:void 0,texture:void 0},I[i]=r),r.type===t&&r.texture===n||(L!==i&&(e.activeTexture(i),L=i),e.bindTexture(t,n||k[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=I[L];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let i=l.get(n);void 0===i&&(i=new WeakMap,l.set(n,i));let r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){const i=l.get(n).get(t);s.get(n)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),s.set(n,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===F.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),F.copy(t))},viewport:function(t){!1===H.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),H.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===i&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},L=null,I={},d={},h=new WeakMap,u=[],p=null,f=!1,g=null,_=null,v=null,S=null,E=null,w=null,x=null,y=!1,T=null,b=null,M=null,A=null,C=null,F.set(0,0,e.canvas.width,e.canvas.height),H.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),o.reset()}}}function Fa(e,t,n,i,r,a,o){const s=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,d=r.maxTextureSize,h=r.maxSamples,u=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let f;const g=new WeakMap;let _=!1;try{_="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function v(e,t){return _?new OffscreenCanvas(e,t):Me("canvas")}function S(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const i=t?ve:Math.floor,a=i(r*e.width),o=i(r*e.height);void 0===f&&(f=v(a,o));const s=n?v(a,o):f;return s.width=a,s.height=o,s.getContext("2d").drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function E(e){return _e(e.width)&&_e(e.height)}function w(e,t){return e.generateMipmaps&&t&&e.minFilter!==R&&e.minFilter!==O}function x(t){e.generateMipmap(t)}function y(n,i,r,a,o=!1){if(!1===s)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=i;return i===e.RED&&(r===e.FLOAT&&(l=e.R32F),r===e.HALF_FLOAT&&(l=e.R16F),r===e.UNSIGNED_BYTE&&(l=e.R8)),i===e.RG&&(r===e.FLOAT&&(l=e.RG32F),r===e.HALF_FLOAT&&(l=e.RG16F),r===e.UNSIGNED_BYTE&&(l=e.RG8)),i===e.RGBA&&(r===e.FLOAT&&(l=e.RGBA32F),r===e.HALF_FLOAT&&(l=e.RGBA16F),r===e.UNSIGNED_BYTE&&(l=a===Q&&!1===o?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(l=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(l=e.RGB5_A1)),l!==e.R16F&&l!==e.R32F&&l!==e.RG16F&&l!==e.RG32F&&l!==e.RGBA16F&&l!==e.RGBA32F||t.get("EXT_color_buffer_float"),l}function T(e,t,n){return!0===w(e,n)||e.isFramebufferTexture&&e.minFilter!==R&&e.minFilter!==O?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function b(t){return t===R||1004===t||t===N?e.NEAREST:e.LINEAR}function M(e){const t=e.target;t.removeEventListener("dispose",M),function(e){const t=i.get(e);if(void 0===t.__webglInit)return;const n=e.source,r=g.get(n);if(r){const i=r[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&W(e),0===Object.keys(r).length&&g.delete(n)}i.remove(e)}(t),t.isVideoTexture&&m.delete(t)}function G(t){const n=t.target;n.removeEventListener("dispose",G),function(t){const n=t.texture,r=i.get(t),a=i.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let t=0;t<r.__webglColorRenderbuffer.length;t++)r.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[t]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);r.__webglTexture&&(e.deleteTexture(r.__webglTexture),o.memory.textures--),i.remove(n[t])}i.remove(n),i.remove(t)}(n)}function W(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const r=t.source;delete g.get(r)[n.__cacheKey],o.memory.textures--}let X=0;function q(t,r){const a=i.get(t);if(t.isVideoTexture&&function(e){const t=o.render.frame;m.get(e)!==t&&(m.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void J(a,t,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+r)}const j={[A]:e.REPEAT,[C]:e.CLAMP_TO_EDGE,[P]:e.MIRRORED_REPEAT},Y={[R]:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,[N]:e.NEAREST_MIPMAP_LINEAR,[O]:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,[L]:e.LINEAR_MIPMAP_LINEAR},$={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function K(n,a,o){if(o?(e.texParameteri(n,e.TEXTURE_WRAP_S,j[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,j[a.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,j[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,Y[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,Y[a.minFilter])):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),a.wrapS===C&&a.wrapT===C||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,e.TEXTURE_MAG_FILTER,b(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,b(a.minFilter)),a.minFilter!==R&&a.minFilter!==O&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),a.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,$[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){const o=t.get("EXT_texture_filter_anisotropic");if(a.magFilter===R)return;if(a.minFilter!==N&&a.minFilter!==L)return;if(a.type===F&&!1===t.has("OES_texture_float_linear"))return;if(!1===s&&a.type===H&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function Z(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",M));const r=n.source;let a=g.get(r);void 0===a&&(a={},g.set(r,a));const s=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(s!==t.__cacheKey){void 0===a[s]&&(a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,i=!0),a[s].usedTimes++;const r=a[t.__cacheKey];void 0!==r&&(a[t.__cacheKey].usedTimes--,0===r.usedTimes&&W(n)),t.__cacheKey=s,t.__webglTexture=a[s].texture}return i}function J(t,r,o){let l=e.TEXTURE_2D;(r.isDataArrayTexture||r.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),r.isData3DTexture&&(l=e.TEXTURE_3D);const c=Z(t,r),h=r.source;n.bindTexture(l,t.__webglTexture,e.TEXTURE0+o);const u=i.get(h);if(h.version!==u.__version||!0===c){n.activeTexture(e.TEXTURE0+o),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const t=function(e){return!s&&(e.wrapS!==C||e.wrapT!==C||e.minFilter!==R&&e.minFilter!==O)}(r)&&!1===E(r.image);let i=S(r.image,t,!1,d);i=se(r,i);const p=E(i)||s,m=a.convert(r.format,r.colorSpace);let f,g=a.convert(r.type),_=y(r.internalFormat,m,g,r.colorSpace);K(l,r,p);const v=r.mipmaps,b=s&&!0!==r.isVideoTexture,M=void 0===u.__version||!0===c,A=T(r,i,p);if(r.isDepthTexture)_=e.DEPTH_COMPONENT,s?_=r.type===F?e.DEPTH_COMPONENT32F:r.type===D?e.DEPTH_COMPONENT24:r.type===B?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:r.type===F&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===V&&_===e.DEPTH_COMPONENT&&r.type!==U&&r.type!==D&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=D,g=a.convert(r.type)),r.format===z&&_===e.DEPTH_COMPONENT&&(_=e.DEPTH_STENCIL,r.type!==B&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=B,g=a.convert(r.type))),M&&(b?n.texStorage2D(e.TEXTURE_2D,1,_,i.width,i.height):n.texImage2D(e.TEXTURE_2D,0,_,i.width,i.height,0,m,g,null));else if(r.isDataTexture)if(v.length>0&&p){b&&M&&n.texStorage2D(e.TEXTURE_2D,A,_,v[0].width,v[0].height);for(let t=0,i=v.length;t<i;t++)f=v[t],b?n.texSubImage2D(e.TEXTURE_2D,t,0,0,f.width,f.height,m,g,f.data):n.texImage2D(e.TEXTURE_2D,t,_,f.width,f.height,0,m,g,f.data);r.generateMipmaps=!1}else b?(M&&n.texStorage2D(e.TEXTURE_2D,A,_,i.width,i.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,i.width,i.height,m,g,i.data)):n.texImage2D(e.TEXTURE_2D,0,_,i.width,i.height,0,m,g,i.data);else if(r.isCompressedTexture)if(r.isCompressedArrayTexture){b&&M&&n.texStorage3D(e.TEXTURE_2D_ARRAY,A,_,v[0].width,v[0].height,i.depth);for(let t=0,a=v.length;t<a;t++)f=v[t],r.format!==k?null!==m?b?n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,f.width,f.height,i.depth,m,f.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,_,f.width,f.height,i.depth,0,f.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,f.width,f.height,i.depth,m,g,f.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,_,f.width,f.height,i.depth,0,m,g,f.data)}else{b&&M&&n.texStorage2D(e.TEXTURE_2D,A,_,v[0].width,v[0].height);for(let t=0,i=v.length;t<i;t++)f=v[t],r.format!==k?null!==m?b?n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,f.width,f.height,m,f.data):n.compressedTexImage2D(e.TEXTURE_2D,t,_,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?n.texSubImage2D(e.TEXTURE_2D,t,0,0,f.width,f.height,m,g,f.data):n.texImage2D(e.TEXTURE_2D,t,_,f.width,f.height,0,m,g,f.data)}else if(r.isDataArrayTexture)b?(M&&n.texStorage3D(e.TEXTURE_2D_ARRAY,A,_,i.width,i.height,i.depth),n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,i.width,i.height,i.depth,m,g,i.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,_,i.width,i.height,i.depth,0,m,g,i.data);else if(r.isData3DTexture)b?(M&&n.texStorage3D(e.TEXTURE_3D,A,_,i.width,i.height,i.depth),n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,i.width,i.height,i.depth,m,g,i.data)):n.texImage3D(e.TEXTURE_3D,0,_,i.width,i.height,i.depth,0,m,g,i.data);else if(r.isFramebufferTexture){if(M)if(b)n.texStorage2D(e.TEXTURE_2D,A,_,i.width,i.height);else{let t=i.width,r=i.height;for(let i=0;i<A;i++)n.texImage2D(e.TEXTURE_2D,i,_,t,r,0,m,g,null),t>>=1,r>>=1}}else if(v.length>0&&p){b&&M&&n.texStorage2D(e.TEXTURE_2D,A,_,v[0].width,v[0].height);for(let t=0,i=v.length;t<i;t++)f=v[t],b?n.texSubImage2D(e.TEXTURE_2D,t,0,0,m,g,f):n.texImage2D(e.TEXTURE_2D,t,_,m,g,f);r.generateMipmaps=!1}else b?(M&&n.texStorage2D(e.TEXTURE_2D,A,_,i.width,i.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,m,g,i)):n.texImage2D(e.TEXTURE_2D,0,_,m,g,i);w(r,p)&&x(l),u.__version=h.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function te(t,r,o,s,l){const c=a.convert(o.format,o.colorSpace),d=a.convert(o.type),h=y(o.internalFormat,c,d,o.colorSpace);i.get(r).__hasExternalTextures||(l===e.TEXTURE_3D||l===e.TEXTURE_2D_ARRAY?n.texImage3D(l,0,h,r.width,r.height,r.depth,0,c,d,null):n.texImage2D(l,0,h,r.width,r.height,0,c,d,null)),n.bindFramebuffer(e.FRAMEBUFFER,t),oe(r)?u.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,s,l,i.get(o).__webglTexture,0,re(r)):(l===e.TEXTURE_2D||l>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&l<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,s,l,i.get(o).__webglTexture,0),n.bindFramebuffer(e.FRAMEBUFFER,null)}function ne(t,n,i){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let r=e.DEPTH_COMPONENT16;if(i||oe(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===F?r=e.DEPTH_COMPONENT32F:t.type===D&&(r=e.DEPTH_COMPONENT24));const i=re(n);oe(n)?u.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,r,n.width,n.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,i,r,n.width,n.height)}else e.renderbufferStorage(e.RENDERBUFFER,r,n.width,n.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){const r=re(n);i&&!1===oe(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,r,e.DEPTH24_STENCIL8,n.width,n.height):oe(n)?u.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,e.DEPTH24_STENCIL8,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let r=0;r<t.length;r++){const o=t[r],s=a.convert(o.format,o.colorSpace),l=a.convert(o.type),c=y(o.internalFormat,s,l,o.colorSpace),d=re(n);i&&!1===oe(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,d,c,n.width,n.height):oe(n)?u.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,d,c,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,c,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function ie(t){const r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),q(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture,o=re(r);if(r.depthTexture.format===V)oe(r)?u.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==z)throw new Error("Unknown depthTexture format");oe(r)?u.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=e.createRenderbuffer(),ne(r.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),ne(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function re(e){return Math.min(h,e.samples)}function oe(e){const n=i.get(e);return s&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function se(e,n){const i=e.colorSpace,r=e.format,a=e.type;return!0===e.isCompressedTexture||e.format===ae||i!==ee&&""!==i&&(i===Q?!1===s?!0===t.has("EXT_sRGB")&&r===k?(e.format=ae,e.minFilter=O,e.generateMipmaps=!1):n=Fe.sRGBToLinear(n):r===k&&a===I||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",i)),n}this.allocateTextureUnit=function(){const e=X;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),X+=1,e},this.resetTextureUnits=function(){X=0},this.setTexture2D=q,this.setTexture2DArray=function(t,r){const a=i.get(t);t.version>0&&a.__version!==t.version?J(a,t,r):n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){const a=i.get(t);t.version>0&&a.__version!==t.version?J(a,t,r):n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,r){const o=i.get(t);t.version>0&&o.__version!==t.version?function(t,r,o){if(6!==r.image.length)return;const l=Z(t,r),d=r.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);const h=i.get(d);if(d.version!==h.__version||!0===l){n.activeTexture(e.TEXTURE0+o),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const t=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)u[e]=t||i?i?r.image[e].image:r.image[e]:S(r.image[e],!1,!0,c),u[e]=se(r,u[e]);const p=u[0],m=E(p)||s,f=a.convert(r.format,r.colorSpace),g=a.convert(r.type),_=y(r.internalFormat,f,g,r.colorSpace),v=s&&!0!==r.isVideoTexture,b=void 0===h.__version||!0===l;let M,A=T(r,p,m);if(K(e.TEXTURE_CUBE_MAP,r,m),t){v&&b&&n.texStorage2D(e.TEXTURE_CUBE_MAP,A,_,p.width,p.height);for(let t=0;t<6;t++){M=u[t].mipmaps;for(let i=0;i<M.length;i++){const a=M[i];r.format!==k?null!==f?v?n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,a.width,a.height,f,a.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,_,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,a.width,a.height,f,g,a.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,_,a.width,a.height,0,f,g,a.data)}}}else{M=r.mipmaps,v&&b&&(M.length>0&&A++,n.texStorage2D(e.TEXTURE_CUBE_MAP,A,_,u[0].width,u[0].height));for(let t=0;t<6;t++)if(i){v?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,u[t].width,u[t].height,f,g,u[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,_,u[t].width,u[t].height,0,f,g,u[t].data);for(let i=0;i<M.length;i++){const r=M[i].image[t].image;v?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,r.width,r.height,f,g,r.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,_,r.width,r.height,0,f,g,r.data)}}else{v?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,f,g,u[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,_,f,g,u[t]);for(let i=0;i<M.length;i++){const r=M[i];v?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,f,g,r.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,_,f,g,r.image[t])}}}w(r,m)&&x(e.TEXTURE_CUBE_MAP),h.__version=d.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}(o,t,r):n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+r)},this.rebindTextures=function(t,n,r){const a=i.get(t);void 0!==n&&te(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),void 0!==r&&ie(t)},this.setupRenderTarget=function(t){const l=t.texture,c=i.get(t),d=i.get(l);t.addEventListener("dispose",G),!0!==t.isWebGLMultipleRenderTargets&&(void 0===d.__webglTexture&&(d.__webglTexture=e.createTexture()),d.__version=l.version,o.memory.textures++);const h=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultipleRenderTargets,p=E(t)||s;if(h){c.__webglFramebuffer=[];for(let t=0;t<6;t++)c.__webglFramebuffer[t]=e.createFramebuffer()}else{if(c.__webglFramebuffer=e.createFramebuffer(),u)if(r.drawBuffers){const n=t.texture;for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);void 0===r.__webglTexture&&(r.__webglTexture=e.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(s&&t.samples>0&&!1===oe(t)){const i=u?l:[l];c.__webglMultisampledFramebuffer=e.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];c.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const o=a.convert(r.format,r.colorSpace),s=a.convert(r.type),l=y(r.internalFormat,o,s,r.colorSpace,!0===t.isXRRenderTarget),d=re(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,d,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,c.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(c.__webglDepthRenderbuffer=e.createRenderbuffer(),ne(c.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(h){n.bindTexture(e.TEXTURE_CUBE_MAP,d.__webglTexture),K(e.TEXTURE_CUBE_MAP,l,p);for(let n=0;n<6;n++)te(c.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n);w(l,p)&&x(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(u){const r=t.texture;for(let a=0,o=r.length;a<o;a++){const o=r[a],s=i.get(o);n.bindTexture(e.TEXTURE_2D,s.__webglTexture),K(e.TEXTURE_2D,o,p),te(c.__webglFramebuffer,t,o,e.COLOR_ATTACHMENT0+a,e.TEXTURE_2D),w(o,p)&&x(e.TEXTURE_2D)}n.unbindTexture()}else{let i=e.TEXTURE_2D;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(s?i=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(i,d.__webglTexture),K(i,l,p),te(c.__webglFramebuffer,t,l,e.COLOR_ATTACHMENT0,i),w(l,p)&&x(i),n.unbindTexture()}t.depthBuffer&&ie(t)},this.updateRenderTargetMipmap=function(t){const r=E(t)||s,a=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let o=0,s=a.length;o<s;o++){const s=a[o];if(w(s,r)){const r=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=i.get(s).__webglTexture;n.bindTexture(r,a),x(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(s&&t.samples>0&&!1===oe(t)){const r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,o=t.height;let s=e.COLOR_BUFFER_BIT;const l=[],c=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,d=i.get(t),h=!0===t.isWebGLMultipleRenderTargets;if(h)for(let t=0;t<r.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,d.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,d.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,d.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,d.__webglFramebuffer);for(let n=0;n<r.length;n++){l.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&l.push(c);const u=void 0!==d.__ignoreDepthValues&&d.__ignoreDepthValues;if(!1===u&&(t.depthBuffer&&(s|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(s|=e.STENCIL_BUFFER_BIT)),h&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,d.__webglColorRenderbuffer[n]),!0===u&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[c]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[c])),h){const t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,s,e.NEAREST),p&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),h)for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,d.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,d.__webglColorRenderbuffer[t]);const a=i.get(r[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,d.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,d.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=te,this.useMultisampledRTT=oe}function Ha(e,t,n){const i=n.isWebGL2;return{convert:function(n,r=""){let a;if(n===I)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(n===U)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(n===D)return e.UNSIGNED_INT;if(n===F)return e.FLOAT;if(n===H)return i?e.HALF_FLOAT:(a=t.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===n)return e.ALPHA;if(n===k)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(n===V)return e.DEPTH_COMPONENT;if(n===z)return e.DEPTH_STENCIL;if(n===ae)return a=t.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(n===G||n===W||n===X||n===q)if(r===Q){if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===G)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===W)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===X)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===q)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=t.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===G)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===W)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===X)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===q)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(a=t.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return a=t.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(a=t.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===n)return r===Q?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(a=t.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return r===Q?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===j){if(a=t.get("EXT_texture_compression_bptc"),null===a)return null;if(n===j)return r===Q?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(36283===n||36284===n||36285===n||36286===n){if(a=t.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===j)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===B?i?e.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class Ba extends ri{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ka extends $t{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Va={type:"move"};class za{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ka,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ka,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ye,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ye),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ka,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ye,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ye),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){a=!0;for(const i of e.hand.values()){const e=t.getJointPose(i,n),r=this._getHandJoint(l,i);null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=e.radius),r.visible=null!==e}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],o=i.position.distanceTo(r.position),s=.02,c=.005;l.inputState.pinching&&o>s+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&o<=s-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1));null!==o&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Va)))}return null!==o&&(o.visible=null!==i),null!==s&&(s.visible=null!==r),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new ka;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Ga extends ze{constructor(e,t,n,i,r,a,o,s,l,c){if((c=void 0!==c?c:V)!==V&&c!==z)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===V&&(n=D),void 0===n&&c===z&&(n=B),super(null,i,r,a,o,s,c,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:R,this.minFilter=void 0!==s?s:R,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class Wa extends le{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",s=1,l=null,c=null,d=null,h=null,u=null,p=null;const m=t.getContextAttributes();let f=null,g=null;const _=[],v=[],S=new ri;S.layers.enable(1),S.viewport=new Ge;const E=new ri;E.layers.enable(2),E.viewport=new Ge;const w=[S,E],x=new Ba;x.layers.enable(1),x.layers.enable(2);let y=null,T=null;function b(e){const t=v.indexOf(e.inputSource);if(-1===t)return;const n=_[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function M(){i.removeEventListener("select",b),i.removeEventListener("selectstart",b),i.removeEventListener("selectend",b),i.removeEventListener("squeeze",b),i.removeEventListener("squeezestart",b),i.removeEventListener("squeezeend",b),i.removeEventListener("end",M),i.removeEventListener("inputsourceschange",A);for(let e=0;e<_.length;e++){const t=v[e];null!==t&&(v[e]=null,_[e].disconnect(t))}y=null,T=null,e.setRenderTarget(f),u=null,h=null,d=null,i=null,g=null,O.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function A(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=v.indexOf(n);i>=0&&(v[i]=null,_[i].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=v.indexOf(n);if(-1===i){for(let e=0;e<_.length;e++){if(e>=v.length){v.push(n),i=e;break}if(null===v[e]){v[e]=n,i=e;break}}if(-1===i)break}const r=_[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=_[e];return void 0===t&&(t=new za,_[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=_[e];return void 0===t&&(t=new za,_[e]=t),t.getGripSpace()},this.getHand=function(e){let t=_[e];return void 0===t&&(t=new za,_[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==h?h:u},this.getBinding=function(){return d},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){if(f=e.getRenderTarget(),i.addEventListener("select",b),i.addEventListener("selectstart",b),i.addEventListener("selectend",b),i.addEventListener("squeeze",b),i.addEventListener("squeezestart",b),i.addEventListener("squeezeend",b),i.addEventListener("end",M),i.addEventListener("inputsourceschange",A),!0!==m.xrCompatible&&await t.makeXRCompatible(),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==i.renderState.layers||m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};u=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:u}),g=new We(u.framebufferWidth,u.framebufferHeight,{format:k,type:I,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let n=null,a=null,o=null;m.depth&&(o=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=m.stencil?z:V,a=m.stencil?B:D);const s={colorFormat:t.RGBA8,depthFormat:o,scaleFactor:r};d=new XRWebGLBinding(i,t),h=d.createProjectionLayer(s),i.updateRenderState({layers:[h]}),g=new We(h.textureWidth,h.textureHeight,{format:k,type:I,depthTexture:new Ga(h.textureWidth,h.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0}),e.properties.get(g).__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(s),l=null,a=await i.requestReferenceSpace(o),O.setContext(i),O.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode};const C=new Ye,P=new Ye;function R(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;x.near=E.near=S.near=e.near,x.far=E.far=S.far=e.far,y===x.near&&T===x.far||(i.updateRenderState({depthNear:x.near,depthFar:x.far}),y=x.near,T=x.far);const t=e.parent,n=x.cameras;R(x,t);for(let e=0;e<n.length;e++)R(n[e],t);2===n.length?function(e,t,n){C.setFromMatrixPosition(t.matrixWorld),P.setFromMatrixPosition(n.matrixWorld);const i=C.distanceTo(P),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=r[14]/(r[10]-1),s=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],d=(r[8]-1)/r[0],h=(a[8]+1)/a[0],u=o*d,p=o*h,m=i/(-d+h),f=m*-d;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=o+m,_=s+m,v=u-f,S=p+(i-f),E=l*s/_*g,w=c*s/_*g;e.projectionMatrix.makePerspective(v,S,E,w,g,_),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(x,S,E):x.projectionMatrix.copy(S.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*ue*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,x,t)},this.getCamera=function(){return x},this.getFoveation=function(){if(null!==h||null!==u)return s},this.setFoveation=function(e){s=e,null!==h&&(h.fixedFoveation=e),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=e)};let N=null;const O=new gi;O.setAnimationLoop((function(t,i){if(c=i.getViewerPose(l||a),p=i,null!==c){const t=c.views;null!==u&&(e.setRenderTargetFramebuffer(g,u.framebuffer),e.setRenderTarget(g));let n=!1;t.length!==x.cameras.length&&(x.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i];let a=null;if(null!==u)a=u.getViewport(r);else{const t=d.getViewSubImage(h,r);a=t.viewport,0===i&&(e.setRenderTargetTextures(g,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(g))}let o=w[i];void 0===o&&(o=new ri,o.layers.enable(i),o.viewport=new Ge,w[i]=o),o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.quaternion,o.scale),o.projectionMatrix.fromArray(r.projectionMatrix),o.projectionMatrixInverse.copy(o.projectionMatrix).invert(),o.viewport.set(a.x,a.y,a.width,a.height),0===i&&(x.matrix.copy(o.matrix),x.matrix.decompose(x.position,x.quaternion,x.scale)),!0===n&&x.cameras.push(o)}}for(let e=0;e<_.length;e++){const t=v[e],n=_[e];null!==t&&void 0!==n&&n.update(t,i,l||a)}N&&N(t,i),i.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:i}),p=null})),this.setAnimationLoop=function(e){N=e},this.dispose=function(){}}}function Xa(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function i(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map,n(r.map,i.mapTransform)),r.alphaMap&&(i.alphaMap.value=r.alphaMap,n(r.alphaMap,i.alphaMapTransform)),r.bumpMap&&(i.bumpMap.value=r.bumpMap,n(r.bumpMap,i.bumpMapTransform),i.bumpScale.value=r.bumpScale,1===r.side&&(i.bumpScale.value*=-1)),r.normalMap&&(i.normalMap.value=r.normalMap,n(r.normalMap,i.normalMapTransform),i.normalScale.value.copy(r.normalScale),1===r.side&&i.normalScale.value.negate()),r.displacementMap&&(i.displacementMap.value=r.displacementMap,n(r.displacementMap,i.displacementMapTransform),i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap,n(r.emissiveMap,i.emissiveMapTransform)),r.specularMap&&(i.specularMap.value=r.specularMap,n(r.specularMap,i.specularMapTransform)),r.alphaTest>0&&(i.alphaTest.value=r.alphaTest);const a=t.get(r).envMap;if(a&&(i.envMap.value=a,i.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap){i.lightMap.value=r.lightMap;const t=!0===e.useLegacyLights?Math.PI:1;i.lightMapIntensity.value=r.lightMapIntensity*t,n(r.lightMap,i.lightMapTransform)}r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity,n(r.aoMap,i.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,ei(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,a,o,s){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(e,r):r.isMeshToonMaterial?(i(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(i(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(i(e,r),function(e,i){e.metalness.value=i.metalness,i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap,n(i.metalnessMap,e.metalnessMapTransform)),e.roughness.value=i.roughness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap,n(i.roughnessMap,e.roughnessMapTransform));t.get(i).envMap&&(e.envMapIntensity.value=i.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,i){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform))),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=i.texture,e.transmissionSamplerSize.value.set(i.width,i.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,n(t.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform)),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,r,s)):r.isMeshMatcapMaterial?(i(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?i(e,r):r.isMeshDistanceMaterial?(i(e,r),function(e,n){const i=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(i.matrixWorld),e.nearDistance.value=i.shadow.camera.near,e.farDistance.value=i.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?i(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,i,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*r,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r,a,o):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function qa(e,t,n,i){let r={},a={},o=[];const s=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e,t,n){const i=e.value;if(void 0===n[t]){if("number"==typeof i)n[t]=i;else{const e=Array.isArray(i)?i:[i],r=[];for(let t=0;t<e.length;t++)r.push(e[t].clone());n[t]=r}return!0}if("number"==typeof i){if(n[t]!==i)return n[t]=i,!0}else{const e=Array.isArray(n[t])?n[t]:[n[t]],r=Array.isArray(i)?i:[i];for(let t=0;t<e.length;t++){const n=e[t];if(!1===n.equals(r[t]))return n.copy(r[t]),!0}}return!1}function c(e){const t={boundary:0,storage:0};return"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function d(t){const n=t.target;n.removeEventListener("dispose",d);const i=o.indexOf(n.__bindingPointIndex);o.splice(i,1),e.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(e,t){const n=t.program;i.uniformBlockBinding(e,n)},update:function(n,h){let u=r[n.id];void 0===u&&(function(e){const t=e.uniforms;let n=0;let i=0;for(let e=0,r=t.length;e<r;e++){const r=t[e],a={boundary:0,storage:0},o=Array.isArray(r.value)?r.value:[r.value];for(let e=0,t=o.length;e<t;e++){const t=c(o[e]);a.boundary+=t.boundary,a.storage+=t.storage}r.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=n,e>0&&(i=n%16,0!==i&&16-i-a.boundary<0&&(n+=16-i,r.__offset=n)),n+=a.storage}i=n%16,i>0&&(n+=16-i),e.__size=n,e.__cache={}}(n),u=function(t){const n=function(){for(let e=0;e<s;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const i=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,r,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=u,n.addEventListener("dispose",d));const p=h.program;i.updateUBOMapping(n,p);const m=t.render.frame;a[n.id]!==m&&(function(t){const n=r[t.id],i=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=i.length;t<n;t++){const n=i[t];if(!0===l(n,t,a)){const t=n.__offset,i=Array.isArray(n.value)?n.value:[n.value];let r=0;for(let a=0;a<i.length;a++){const o=i[a],s=c(o);"number"==typeof o?(n.__data[0]=o,e.bufferSubData(e.UNIFORM_BUFFER,t+r,n.__data)):o.isMatrix3?(n.__data[0]=o.elements[0],n.__data[1]=o.elements[1],n.__data[2]=o.elements[2],n.__data[3]=o.elements[0],n.__data[4]=o.elements[3],n.__data[5]=o.elements[4],n.__data[6]=o.elements[5],n.__data[7]=o.elements[0],n.__data[8]=o.elements[6],n.__data[9]=o.elements[7],n.__data[10]=o.elements[8],n.__data[11]=o.elements[0]):(o.toArray(n.__data,r),r+=s.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,n.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=m)},dispose:function(){for(const t in r)e.deleteBuffer(r[t]);o=[],r={},a={}}}}function ja(){const e=Me("canvas");return e.style.display="block",e}class Ya{constructor(e={}){const{canvas:t=ja(),context:n=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:s=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=e;let u;this.isWebGLRenderer=!0,u=null!==n?n.getContextAttributes().alpha:a;const p=new Uint32Array(4),m=new Int32Array(4);let f=null,g=null;const _=[],S=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=Q,this.useLegacyLights=!0,this.toneMapping=v,this.toneMappingExposure=1;const E=this;let w=!1,x=0,y=0,T=null,b=-1,M=null;const A=new Ge,C=new Ge;let P=null;const R=new fn(0);let N=0,O=t.width,V=t.height,z=1,G=null,W=null;const X=new Ge(0,0,O,V),q=new Ge(0,0,O,V);let j=!1;const Y=new fi;let $=!1,K=!1,Z=null;const J=new Tt,te=new xe,ne=new Ye,ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function re(){return null===T?z:1}let ae,oe,se,le,ce,de,he,ue,pe,me,fe,ge,_e,Se,Ee,we,ye,Te,be,Me,Ae,Ce,Pe,Re,Ne=n;function Oe(e,n){for(let i=0;i<e.length;i++){const r=e[i],a=t.getContext(r,n);if(null!==a)return a}return null}try{const e={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${d}`),t.addEventListener("webglcontextlost",Ue,!1),t.addEventListener("webglcontextrestored",De,!1),t.addEventListener("webglcontextcreationerror",Fe,!1),null===Ne){const t=["webgl2","webgl","experimental-webgl"];if(!0===E.isWebGL1Renderer&&t.shift(),Ne=Oe(t,e),null===Ne)throw Oe(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}"undefined"!=typeof WebGLRenderingContext&&Ne instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===Ne.getShaderPrecisionFormat&&(Ne.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Le(){ae=new Gi(Ne),oe=new Mi(Ne,ae,e),ae.init(oe),Ce=new Ha(Ne,ae,oe),se=new Da(Ne,ae,oe),le=new qi(Ne),ce=new xa,de=new Fa(Ne,ae,se,ce,oe,Ce,le),he=new Ci(E),ue=new zi(E),pe=new _i(Ne,oe),Pe=new Ti(Ne,ae,pe,oe),me=new Wi(Ne,pe,le,Pe),fe=new Ki(Ne,me,pe,le),be=new $i(Ne,oe,de),we=new Ai(ce),ge=new wa(E,he,ue,ae,oe,Pe,we),_e=new Xa(E,ce),Se=new Ma,Ee=new Oa(ae,oe),Te=new yi(E,he,ue,se,fe,u,s),ye=new Ua(E,fe,oe),Re=new qa(Ne,le,oe,se),Me=new bi(Ne,ae,le,oe),Ae=new Xi(Ne,ae,le,oe),le.programs=ge.programs,E.capabilities=oe,E.extensions=ae,E.properties=ce,E.renderLists=Se,E.shadowMap=ye,E.state=se,E.info=le}Le();const Ie=new Wa(E,Ne);function Ue(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function De(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const e=le.autoReset,t=ye.enabled,n=ye.autoUpdate,i=ye.needsUpdate,r=ye.type;Le(),le.autoReset=e,ye.enabled=t,ye.autoUpdate=n,ye.needsUpdate=i,ye.type=r}function Fe(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function He(e){const t=e.target;t.removeEventListener("dispose",He),function(e){(function(e){const t=ce.get(e).programs;void 0!==t&&(t.forEach((function(e){ge.releaseProgram(e)})),e.isShaderMaterial&&ge.releaseShaderCache(e))})(e),ce.remove(e)}(t)}this.xr=Ie,this.getContext=function(){return Ne},this.getContextAttributes=function(){return Ne.getContextAttributes()},this.forceContextLoss=function(){const e=ae.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=ae.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(e){void 0!==e&&(z=e,this.setSize(O,V,!1))},this.getSize=function(e){return e.set(O,V)},this.setSize=function(e,n,i=!0){Ie.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(O=e,V=n,t.width=Math.floor(e*z),t.height=Math.floor(n*z),!0===i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(O*z,V*z).floor()},this.setDrawingBufferSize=function(e,n,i){O=e,V=n,z=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(A)},this.getViewport=function(e){return e.copy(X)},this.setViewport=function(e,t,n,i){e.isVector4?X.set(e.x,e.y,e.z,e.w):X.set(e,t,n,i),se.viewport(A.copy(X).multiplyScalar(z).floor())},this.getScissor=function(e){return e.copy(q)},this.setScissor=function(e,t,n,i){e.isVector4?q.set(e.x,e.y,e.z,e.w):q.set(e,t,n,i),se.scissor(C.copy(q).multiplyScalar(z).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(e){se.setScissorTest(j=e)},this.setOpaqueSort=function(e){G=e},this.setTransparentSort=function(e){W=e},this.getClearColor=function(e){return e.copy(Te.getClearColor())},this.setClearColor=function(){Te.setClearColor.apply(Te,arguments)},this.getClearAlpha=function(){return Te.getClearAlpha()},this.setClearAlpha=function(){Te.setClearAlpha.apply(Te,arguments)},this.clear=function(e=!0,t=!0,n=!0){let i=0;if(e){let e=!1;if(null!==T){const t=T.texture.format;e=1033===t||1031===t||1029===t}if(e){const e=T.texture.type,t=e===I||e===D||e===U||e===B||1017===e||1018===e,n=Te.getClearColor(),i=Te.getClearAlpha(),r=n.r,a=n.g,o=n.b;t?(p[0]=r,p[1]=a,p[2]=o,p[3]=i,Ne.clearBufferuiv(Ne.COLOR,0,p)):(m[0]=r,m[1]=a,m[2]=o,m[3]=i,Ne.clearBufferiv(Ne.COLOR,0,m))}else i|=Ne.COLOR_BUFFER_BIT}t&&(i|=Ne.DEPTH_BUFFER_BIT),n&&(i|=Ne.STENCIL_BUFFER_BIT),Ne.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ue,!1),t.removeEventListener("webglcontextrestored",De,!1),t.removeEventListener("webglcontextcreationerror",Fe,!1),Se.dispose(),Ee.dispose(),ce.dispose(),he.dispose(),ue.dispose(),fe.dispose(),Pe.dispose(),Re.dispose(),ge.dispose(),Ie.dispose(),Ie.removeEventListener("sessionstart",ke),Ie.removeEventListener("sessionend",Ve),Z&&(Z.dispose(),Z=null),ze.stop()},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=ie);const o=r.isMesh&&r.matrixWorld.determinant()<0,s=function(e,t,n,i,r){!0!==t.isScene&&(t=ie),de.resetTextureUnits();const a=t.fog,o=i.isMeshStandardMaterial?t.environment:null,s=null===T?E.outputColorSpace:!0===T.isXRRenderTarget?T.texture.colorSpace:ee,l=(i.isMeshStandardMaterial?ue:he).get(i.envMap||o),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,d=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),h=!!n.morphAttributes.position,u=!!n.morphAttributes.normal,p=!!n.morphAttributes.color,m=i.toneMapped?E.toneMapping:v,f=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,_=void 0!==f?f.length:0,S=ce.get(i),w=g.state.lights;if(!0===$&&(!0===K||e!==M)){const t=e===M&&i.id===b;we.setState(i,e,t)}let x=!1;i.version===S.__version?S.needsLights&&S.lightsStateVersion!==w.state.version||S.outputColorSpace!==s||r.isInstancedMesh&&!1===S.instancing?x=!0:r.isInstancedMesh||!0!==S.instancing?r.isSkinnedMesh&&!1===S.skinning?x=!0:r.isSkinnedMesh||!0!==S.skinning?S.envMap!==l||!0===i.fog&&S.fog!==a?x=!0:void 0===S.numClippingPlanes||S.numClippingPlanes===we.numPlanes&&S.numIntersection===we.numIntersection?(S.vertexAlphas!==c||S.vertexTangents!==d||S.morphTargets!==h||S.morphNormals!==u||S.morphColors!==p||S.toneMapping!==m||!0===oe.isWebGL2&&S.morphTargetsCount!==_)&&(x=!0):x=!0:x=!0:x=!0:(x=!0,S.__version=i.version);let y=S.currentProgram;!0===x&&(y=Ke(i,t,r));let A=!1,C=!1,P=!1;const R=y.getUniforms(),N=S.uniforms;if(se.useProgram(y.program)&&(A=!0,C=!0,P=!0),i.id!==b&&(b=i.id,C=!0),A||M!==e){if(R.setValue(Ne,"projectionMatrix",e.projectionMatrix),oe.logarithmicDepthBuffer&&R.setValue(Ne,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),M!==e&&(M=e,C=!0,P=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=R.map.cameraPosition;void 0!==t&&t.setValue(Ne,ne.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(Ne,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&R.setValue(Ne,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){R.setOptional(Ne,r,"bindMatrix"),R.setOptional(Ne,r,"bindMatrixInverse");const e=r.skeleton;e&&(oe.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),R.setValue(Ne,"boneTexture",e.boneTexture,de),R.setValue(Ne,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const O=n.morphAttributes;var L,I;if((void 0!==O.position||void 0!==O.normal||void 0!==O.color&&!0===oe.isWebGL2)&&be.update(r,n,y),(C||S.receiveShadow!==r.receiveShadow)&&(S.receiveShadow=r.receiveShadow,R.setValue(Ne,"receiveShadow",r.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(N.envMap.value=l,N.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),C&&(R.setValue(Ne,"toneMappingExposure",E.toneMappingExposure),S.needsLights&&(I=P,(L=N).ambientLightColor.needsUpdate=I,L.lightProbe.needsUpdate=I,L.directionalLights.needsUpdate=I,L.directionalLightShadows.needsUpdate=I,L.pointLights.needsUpdate=I,L.pointLightShadows.needsUpdate=I,L.spotLights.needsUpdate=I,L.spotLightShadows.needsUpdate=I,L.rectAreaLights.needsUpdate=I,L.hemisphereLights.needsUpdate=I),a&&!0===i.fog&&_e.refreshFogUniforms(N,a),_e.refreshMaterialUniforms(N,i,z,V,Z),ea.upload(Ne,S.uniformsList,N,de)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(ea.upload(Ne,S.uniformsList,N,de),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&R.setValue(Ne,"center",r.center),R.setValue(Ne,"modelViewMatrix",r.modelViewMatrix),R.setValue(Ne,"normalMatrix",r.normalMatrix),R.setValue(Ne,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(oe.isWebGL2){const n=e[t];Re.update(n,y),Re.bind(n,y)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return y}(e,t,n,i,r);se.setMaterial(i,o);let l=n.index,c=1;!0===i.wireframe&&(l=me.getWireframeAttribute(n),c=2);const d=n.drawRange,h=n.attributes.position;let u=d.start*c,p=(d.start+d.count)*c;null!==a&&(u=Math.max(u,a.start*c),p=Math.min(p,(a.start+a.count)*c)),null!==l?(u=Math.max(u,0),p=Math.min(p,l.count)):null!=h&&(u=Math.max(u,0),p=Math.min(p,h.count));const m=p-u;if(m<0||m===1/0)return;let f;Pe.setup(r,i,s,n,l);let _=Me;if(null!==l&&(f=pe.get(l),_=Ae,_.setIndex(f)),r.isMesh)!0===i.wireframe?(se.setLineWidth(i.wireframeLinewidth*re()),_.setMode(Ne.LINES)):_.setMode(Ne.TRIANGLES);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),se.setLineWidth(e*re()),r.isLineSegments?_.setMode(Ne.LINES):r.isLineLoop?_.setMode(Ne.LINE_LOOP):_.setMode(Ne.LINE_STRIP)}else r.isPoints?_.setMode(Ne.POINTS):r.isSprite&&_.setMode(Ne.TRIANGLES);if(r.isInstancedMesh)_.renderInstances(u,m,r.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);_.renderInstances(u,m,t)}else _.render(u,m)},this.compile=function(e,t){function n(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Ke(e,t,n),e.side=0,e.needsUpdate=!0,Ke(e,t,n),e.side=2):Ke(e,t,n)}g=Ee.get(e),g.init(),S.push(g),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(g.pushLight(e),e.castShadow&&g.pushShadow(e))})),g.setupLights(E.useLegacyLights),e.traverse((function(t){const i=t.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++)n(i[r],e,t);else n(i,e,t)})),S.pop(),g=null};let Be=null;function ke(){ze.stop()}function Ve(){ze.start()}const ze=new gi;function Xe(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)g.pushLight(e),e.castShadow&&g.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||Y.intersectsSprite(e)){i&&ne.setFromMatrixPosition(e.matrixWorld).applyMatrix4(J);const t=fe.update(e),r=e.material;r.visible&&f.push(e,t,r,n,ne.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Y.intersectsObject(e))){const t=fe.update(e),r=e.material;if(i&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),ne.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),ne.copy(t.boundingSphere.center)),ne.applyMatrix4(e.matrixWorld).applyMatrix4(J)),Array.isArray(r)){const i=t.groups;for(let a=0,o=i.length;a<o;a++){const o=i[a],s=r[o.materialIndex];s&&s.visible&&f.push(e,t,s,n,ne.z,o)}}else r.visible&&f.push(e,t,r,n,ne.z,null)}const r=e.children;for(let e=0,a=r.length;e<a;e++)Xe(r[e],t,n,i)}function qe(e,t,n,i){const r=e.opaque,a=e.transmissive,o=e.transparent;g.setupLightsView(n),!0===$&&we.setGlobalState(E.clippingPlanes,n),a.length>0&&function(e,t,n,i){const r=oe.isWebGL2;null===Z&&(Z=new We(1,1,{generateMipmaps:!0,type:ae.has("EXT_color_buffer_half_float")?H:I,minFilter:L,samples:r?4:0})),E.getDrawingBufferSize(te),r?Z.setSize(te.x,te.y):Z.setSize(ve(te.x),ve(te.y));const a=E.getRenderTarget();E.setRenderTarget(Z),E.getClearColor(R),N=E.getClearAlpha(),N<1&&E.setClearColor(16777215,.5),E.clear();const o=E.toneMapping;E.toneMapping=v,je(e,n,i),de.updateMultisampleRenderTarget(Z),de.updateRenderTargetMipmap(Z);let s=!1;for(let e=0,r=t.length;e<r;e++){const r=t[e],a=r.object,o=r.geometry,l=r.material,c=r.group;if(2===l.side&&a.layers.test(i.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,$e(a,n,i,o,l,c),l.side=e,l.needsUpdate=!0,s=!0}}!0===s&&(de.updateMultisampleRenderTarget(Z),de.updateRenderTargetMipmap(Z)),E.setRenderTarget(a),E.setClearColor(R,N),E.toneMapping=o}(r,a,t,n),i&&se.viewport(A.copy(i)),r.length>0&&je(r,t,n),a.length>0&&je(a,t,n),o.length>0&&je(o,t,n),se.buffers.depth.setTest(!0),se.buffers.depth.setMask(!0),se.buffers.color.setMask(!0),se.setPolygonOffset(!1)}function je(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){const a=e[r],o=a.object,s=a.geometry,l=null===i?a.material:i,c=a.group;o.layers.test(n.layers)&&$e(o,t,n,s,l,c)}}function $e(e,t,n,i,r,a){e.onBeforeRender(E,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(E,t,n,i,e,a),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,E.renderBufferDirect(n,t,i,r,e,a),r.side=0,r.needsUpdate=!0,E.renderBufferDirect(n,t,i,r,e,a),r.side=2):E.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(E,t,n,i,r,a)}function Ke(e,t,n){!0!==t.isScene&&(t=ie);const i=ce.get(e),r=g.state.lights,a=g.state.shadowsArray,o=r.state.version,s=ge.getParameters(e,r.state,a,t,n),l=ge.getProgramCacheKey(s);let c=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?ue:he).get(e.envMap||i.environment),void 0===c&&(e.addEventListener("dispose",He),c=new Map,i.programs=c);let d=c.get(l);if(void 0!==d){if(i.currentProgram===d&&i.lightsStateVersion===o)return Ze(e,s),d}else s.uniforms=ge.getUniforms(e),e.onBuild(n,s,E),e.onBeforeCompile(s,E),d=ge.acquireProgram(s,l),c.set(l,d),i.uniforms=s.uniforms;const h=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=we.uniform),Ze(e,s),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=o,i.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotLightMatrix.value=r.state.spotLightMatrix,h.spotLightMap.value=r.state.spotLightMap,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix);const u=d.getUniforms(),p=ea.seqWithValue(u.seq,h);return i.currentProgram=d,i.uniformsList=p,d}function Ze(e,t){const n=ce.get(e);n.outputColorSpace=t.outputColorSpace,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}ze.setAnimationLoop((function(e){Be&&Be(e)})),"undefined"!=typeof self&&ze.setContext(self),this.setAnimationLoop=function(e){Be=e,Ie.setAnimationLoop(e),null===e?ze.stop():ze.start()},Ie.addEventListener("sessionstart",ke),Ie.addEventListener("sessionend",Ve),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===w)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Ie.enabled&&!0===Ie.isPresenting&&(!0===Ie.cameraAutoUpdate&&Ie.updateCamera(t),t=Ie.getCamera()),!0===e.isScene&&e.onBeforeRender(E,e,t,T),g=Ee.get(e,S.length),g.init(),S.push(g),J.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Y.setFromProjectionMatrix(J),K=this.localClippingEnabled,$=we.init(this.clippingPlanes,K),f=Se.get(e,_.length),f.init(),_.push(f),Xe(e,t,0,E.sortObjects),f.finish(),!0===E.sortObjects&&f.sort(G,W),this.info.render.frame++,!0===$&&we.beginShadows();const n=g.state.shadowsArray;if(ye.render(n,e,t),!0===$&&we.endShadows(),!0===this.info.autoReset&&this.info.reset(),Te.render(f,e),g.setupLights(E.useLegacyLights),t.isArrayCamera){const n=t.cameras;for(let t=0,i=n.length;t<i;t++){const i=n[t];qe(f,e,i,i.viewport)}}else qe(f,e,t);null!==T&&(de.updateMultisampleRenderTarget(T),de.updateRenderTargetMipmap(T)),!0===e.isScene&&e.onAfterRender(E,e,t),Pe.resetDefaultState(),b=-1,M=null,S.pop(),g=S.length>0?S[S.length-1]:null,_.pop(),f=_.length>0?_[_.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(e,t,n){ce.get(e.texture).__webglTexture=t,ce.get(e.depthTexture).__webglTexture=n;const i=ce.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===ae.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=ce.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){T=e,x=t,y=n;let i=!0,r=null,a=!1,o=!1;if(e){const n=ce.get(e);void 0!==n.__useDefaultFramebuffer?(se.bindFramebuffer(Ne.FRAMEBUFFER,null),i=!1):void 0===n.__webglFramebuffer?de.setupRenderTarget(e):n.__hasExternalTextures&&de.rebindTextures(e,ce.get(e.texture).__webglTexture,ce.get(e.depthTexture).__webglTexture);const s=e.texture;(s.isData3DTexture||s.isDataArrayTexture||s.isCompressedArrayTexture)&&(o=!0);const l=ce.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=l[t],a=!0):r=oe.isWebGL2&&e.samples>0&&!1===de.useMultisampledRTT(e)?ce.get(e).__webglMultisampledFramebuffer:l,A.copy(e.viewport),C.copy(e.scissor),P=e.scissorTest}else A.copy(X).multiplyScalar(z).floor(),C.copy(q).multiplyScalar(z).floor(),P=j;if(se.bindFramebuffer(Ne.FRAMEBUFFER,r)&&oe.drawBuffers&&i&&se.drawBuffers(e,r),se.viewport(A),se.scissor(C),se.setScissorTest(P),a){const i=ce.get(e.texture);Ne.framebufferTexture2D(Ne.FRAMEBUFFER,Ne.COLOR_ATTACHMENT0,Ne.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)}else if(o){const i=ce.get(e.texture),r=t||0;Ne.framebufferTextureLayer(Ne.FRAMEBUFFER,Ne.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}b=-1},this.readRenderTargetPixels=function(e,t,n,i,r,a,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=ce.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){se.bindFramebuffer(Ne.FRAMEBUFFER,s);try{const o=e.texture,s=o.format,l=o.type;if(s!==k&&Ce.convert(s)!==Ne.getParameter(Ne.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===H&&(ae.has("EXT_color_buffer_half_float")||oe.isWebGL2&&ae.has("EXT_color_buffer_float"));if(!(l===I||Ce.convert(l)===Ne.getParameter(Ne.IMPLEMENTATION_COLOR_READ_TYPE)||l===F&&(oe.isWebGL2||ae.has("OES_texture_float")||ae.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&Ne.readPixels(t,n,i,r,Ce.convert(s),Ce.convert(l),a)}finally{const e=null!==T?ce.get(T).__webglFramebuffer:null;se.bindFramebuffer(Ne.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i);de.setTexture2D(t,0),Ne.copyTexSubImage2D(Ne.TEXTURE_2D,n,0,0,e.x,e.y,r,a),se.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width,a=t.image.height,o=Ce.convert(n.format),s=Ce.convert(n.type);de.setTexture2D(n,0),Ne.pixelStorei(Ne.UNPACK_FLIP_Y_WEBGL,n.flipY),Ne.pixelStorei(Ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),Ne.pixelStorei(Ne.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?Ne.texSubImage2D(Ne.TEXTURE_2D,i,e.x,e.y,r,a,o,s,t.image.data):t.isCompressedTexture?Ne.compressedTexSubImage2D(Ne.TEXTURE_2D,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):Ne.texSubImage2D(Ne.TEXTURE_2D,i,e.x,e.y,o,s,t.image),0===i&&n.generateMipmaps&&Ne.generateMipmap(Ne.TEXTURE_2D),se.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(E.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,o=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,l=Ce.convert(i.format),c=Ce.convert(i.type);let d;if(i.isData3DTexture)de.setTexture3D(i,0),d=Ne.TEXTURE_3D;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");de.setTexture2DArray(i,0),d=Ne.TEXTURE_2D_ARRAY}Ne.pixelStorei(Ne.UNPACK_FLIP_Y_WEBGL,i.flipY),Ne.pixelStorei(Ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),Ne.pixelStorei(Ne.UNPACK_ALIGNMENT,i.unpackAlignment);const h=Ne.getParameter(Ne.UNPACK_ROW_LENGTH),u=Ne.getParameter(Ne.UNPACK_IMAGE_HEIGHT),p=Ne.getParameter(Ne.UNPACK_SKIP_PIXELS),m=Ne.getParameter(Ne.UNPACK_SKIP_ROWS),f=Ne.getParameter(Ne.UNPACK_SKIP_IMAGES),g=n.isCompressedTexture?n.mipmaps[0]:n.image;Ne.pixelStorei(Ne.UNPACK_ROW_LENGTH,g.width),Ne.pixelStorei(Ne.UNPACK_IMAGE_HEIGHT,g.height),Ne.pixelStorei(Ne.UNPACK_SKIP_PIXELS,e.min.x),Ne.pixelStorei(Ne.UNPACK_SKIP_ROWS,e.min.y),Ne.pixelStorei(Ne.UNPACK_SKIP_IMAGES,e.min.z),n.isDataTexture||n.isData3DTexture?Ne.texSubImage3D(d,r,t.x,t.y,t.z,a,o,s,l,c,g.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Ne.compressedTexSubImage3D(d,r,t.x,t.y,t.z,a,o,s,l,g.data)):Ne.texSubImage3D(d,r,t.x,t.y,t.z,a,o,s,l,c,g),Ne.pixelStorei(Ne.UNPACK_ROW_LENGTH,h),Ne.pixelStorei(Ne.UNPACK_IMAGE_HEIGHT,u),Ne.pixelStorei(Ne.UNPACK_SKIP_PIXELS,p),Ne.pixelStorei(Ne.UNPACK_SKIP_ROWS,m),Ne.pixelStorei(Ne.UNPACK_SKIP_IMAGES,f),0===r&&i.generateMipmaps&&Ne.generateMipmap(d),se.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?de.setTextureCube(e,0):e.isData3DTexture?de.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?de.setTexture2DArray(e,0):de.setTexture2D(e,0),se.unbindTexture()},this.resetState=function(){x=0,y=0,T=null,se.reset(),Pe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return oe}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Q?J:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===J?Q:ee}}(class extends Ya{}).prototype.isWebGL1Renderer=!0;class $a{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=ie,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=pe()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=pe()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=pe()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ka=new Ye;class Za{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ka.fromBufferAttribute(this,t),Ka.applyMatrix4(e),this.setXYZ(t,Ka.x,Ka.y,Ka.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ka.fromBufferAttribute(this,t),Ka.applyNormalMatrix(e),this.setXYZ(t,Ka.x,Ka.y,Ka.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ka.fromBufferAttribute(this,t),Ka.transformDirection(e),this.setXYZ(t,Ka.x,Ka.y,Ka.z);return this}setX(e,t){return this.normalized&&(t=Ee(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Ee(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Ee(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Ee(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Se(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Se(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Se(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Se(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ee(t,this.array),n=Ee(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ee(t,this.array),n=Ee(n,this.array),i=Ee(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ee(t,this.array),n=Ee(n,this.array),i=Ee(i,this.array),r=Ee(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new En(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Za(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ja extends dn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new fn(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Qa;const eo=new Ye,to=new Ye,no=new Ye,ro=new xe,ao=new xe,oo=new Tt,so=new Ye,lo=new Ye,co=new Ye,ho=new xe,uo=new xe,po=new xe;class mo extends $t{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",void 0===Qa){Qa=new Nn;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new $a(e,5);Qa.setIndex([0,1,2,0,2,3]),Qa.setAttribute("position",new Za(t,3,0,!1)),Qa.setAttribute("uv",new Za(t,2,3,!1))}this.geometry=Qa,this.material=void 0!==e?e:new Ja,this.center=new xe(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),to.setFromMatrixScale(this.matrixWorld),oo.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),no.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&to.multiplyScalar(-no.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;fo(so.set(-.5,-.5,0),no,a,to,i,r),fo(lo.set(.5,-.5,0),no,a,to,i,r),fo(co.set(.5,.5,0),no,a,to,i,r),ho.set(0,0),uo.set(1,0),po.set(1,1);let o=e.ray.intersectTriangle(so,lo,co,!1,eo);if(null===o&&(fo(lo.set(-.5,.5,0),no,a,to,i,r),uo.set(0,1),o=e.ray.intersectTriangle(so,co,lo,!1,eo),null===o))return;const s=e.ray.origin.distanceTo(eo);s<e.near||s>e.far||t.push({distance:s,point:eo.clone(),uv:ln.getInterpolation(eo,so,lo,co,ho,uo,po,new xe),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function fo(e,t,n,i,r,a){ro.subVectors(e,n).addScalar(.5).multiply(i),void 0!==r?(ao.x=a*ro.x-r*ro.y,ao.y=r*ro.x+a*ro.y):ao.copy(ro),e.copy(t),e.x+=ao.x,e.y+=ao.y,e.applyMatrix4(oo)}class go extends dn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new fn(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const _o=new Ye,vo=new Ye,So=new Tt,Eo=new yt,wo=new ft;class xo extends $t{constructor(e=new Nn,t=new go){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)_o.fromBufferAttribute(t,e-1),vo.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=_o.distanceTo(vo);e.setAttribute("lineDistance",new yn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),wo.copy(n.boundingSphere),wo.applyMatrix4(i),wo.radius+=r,!1===e.ray.intersectsSphere(wo))return;So.copy(i).invert(),Eo.copy(e.ray).applyMatrix4(So);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=new Ye,c=new Ye,d=new Ye,h=new Ye,u=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(null!==p)for(let n=Math.max(0,a.start),i=Math.min(p.count,a.start+a.count)-1;n<i;n+=u){const i=p.getX(n),r=p.getX(n+1);if(l.fromBufferAttribute(m,i),c.fromBufferAttribute(m,r),Eo.distanceSqToSegment(l,c,h,d)>s)continue;h.applyMatrix4(this.matrixWorld);const a=e.ray.origin.distanceTo(h);a<e.near||a>e.far||t.push({distance:a,point:d.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),i=Math.min(m.count,a.start+a.count)-1;n<i;n+=u){if(l.fromBufferAttribute(m,n),c.fromBufferAttribute(m,n+1),Eo.distanceSqToSegment(l,c,h,d)>s)continue;h.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(h);i<e.near||i>e.far||t.push({distance:i,point:d.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}class yo extends ze{constructor(e,t,n,i,r,a,o,s,l){super(e,t,n,i,r,a,o,s,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class To extends Nn{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,s=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s};const l=this;i=Math.floor(i),r=Math.floor(r);const c=[],d=[],h=[],u=[];let p=0;const m=[],f=n/2;let g=0;function _(n){const r=p,a=new xe,m=new Ye;let _=0;const v=!0===n?e:t,S=!0===n?1:-1;for(let e=1;e<=i;e++)d.push(0,f*S,0),h.push(0,S,0),u.push(.5,.5),p++;const E=p;for(let e=0;e<=i;e++){const t=e/i*s+o,n=Math.cos(t),r=Math.sin(t);m.x=v*r,m.y=f*S,m.z=v*n,d.push(m.x,m.y,m.z),h.push(0,S,0),a.x=.5*n+.5,a.y=.5*r*S+.5,u.push(a.x,a.y),p++}for(let e=0;e<i;e++){const t=r+e,i=E+e;!0===n?c.push(i,i+1,t):c.push(i+1,i,t),_+=3}l.addGroup(g,_,!0===n?1:2),g+=_}!function(){const a=new Ye,_=new Ye;let v=0;const S=(t-e)/n;for(let l=0;l<=r;l++){const c=[],g=l/r,v=g*(t-e)+e;for(let e=0;e<=i;e++){const t=e/i,r=t*s+o,l=Math.sin(r),m=Math.cos(r);_.x=v*l,_.y=-g*n+f,_.z=v*m,d.push(_.x,_.y,_.z),a.set(l,S,m).normalize(),h.push(a.x,a.y,a.z),u.push(t,1-g),c.push(p++)}m.push(c)}for(let e=0;e<i;e++)for(let t=0;t<r;t++){const n=m[t][e],i=m[t+1][e],r=m[t+1][e+1],a=m[t][e+1];c.push(n,i,a),c.push(i,r,a),v+=6}l.addGroup(g,v,0),g+=v}(),!1===a&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(c),this.setAttribute("position",new yn(d,3)),this.setAttribute("normal",new yn(h,3)),this.setAttribute("uv",new yn(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new To(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class bo extends Nn{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const t=[],n=new Set,i=new Ye,r=new Ye;if(null!==e.index){const a=e.attributes.position,o=e.index;let s=e.groups;0===s.length&&(s=[{start:0,count:o.count,materialIndex:0}]);for(let e=0,l=s.length;e<l;++e){const l=s[e],c=l.start;for(let e=c,s=c+l.count;e<s;e+=3)for(let s=0;s<3;s++){const l=o.getX(e+s),c=o.getX(e+(s+1)%3);i.fromBufferAttribute(a,l),r.fromBufferAttribute(a,c),!0===Mo(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let e=0,o=a.count/3;e<o;e++)for(let o=0;o<3;o++){const s=3*e+o,l=3*e+(o+1)%3;i.fromBufferAttribute(a,s),r.fromBufferAttribute(a,l),!0===Mo(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new yn(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Mo(e,t,n){const i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i),n.add(r),!0)}class Ao extends dn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new fn(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Co extends dn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new fn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=f,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}function Po(e,t,n){return No(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)}function Ro(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function No(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}class Oo{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(e>=r)break e;{const o=t[1];e<o&&(n=2,r=o);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0}}for(;n<a;){const i=n+a>>>1;e<t[i]?a=i:n=i+1}if(i=t[n],r=t[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let e=0;e!==i;++e)t[e]=n[r+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Lo extends Oo{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],s=i[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:r=e,o=2*t-n;break;case 2402:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=e,s=2*n-t;break;case 2402:a=1,s=n+i[1]-i[0];break;default:a=e-1,s=t}const l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=r*c,this._offsetNext=a*c}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=this._offsetPrev,d=this._offsetNext,h=this._weightPrev,u=this._weightNext,p=(n-t)/(i-t),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,_=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,v=(-1-u)*f+(1.5+u)*m+.5*p,S=u*f-u*m;for(let e=0;e!==o;++e)r[e]=g*a[c+e]+_*a[l+e]+v*a[s+e]+S*a[d+e];return r}}class Io extends Oo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,c=(n-t)/(i-t),d=1-c;for(let e=0;e!==o;++e)r[e]=a[l+e]*d+a[s+e]*c;return r}}class Uo extends Oo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Do{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ro(t,this.TimeBufferType),this.values=Ro(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ro(e.times,Array),values:Ro(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Uo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Io(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Lo(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Y:t=this.InterpolantFactoryMethodDiscrete;break;case K:t=this.InterpolantFactoryMethodLinear;break;case Z:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Y;case this.InterpolantFactoryMethodLinear:return K;case this.InterpolantFactoryMethodSmooth:return Z}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const e=this.getValueSize();this.times=Po(n,r,a),this.values=Po(this.values,r*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==r;t++){const i=n[t];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,i),e=!1;break}if(null!==a&&a>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,i,a),e=!1;break}a=i}if(void 0!==i&&No(i))for(let t=0,n=i.length;t!==n;++t){const n=i[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}optimize(){const e=Po(this.times),t=Po(this.values),n=this.getValueSize(),i=this.getInterpolation()===Z,r=e.length-1;let a=1;for(let o=1;o<r;++o){let r=!1;const s=e[o];if(s!==e[o+1]&&(1!==o||s!==e[0]))if(i)r=!0;else{const e=o*n,i=e-n,a=e+n;for(let o=0;o!==n;++o){const n=t[e+o];if(n!==t[i+o]||n!==t[a+o]){r=!0;break}}}if(r){if(o!==a){e[a]=e[o];const i=o*n,r=a*n;for(let e=0;e!==n;++e)t[r+e]=t[i+e]}++a}}if(r>0){e[a]=e[r];for(let e=r*n,i=a*n,o=0;o!==n;++o)t[i+o]=t[e+o];++a}return a!==e.length?(this.times=Po(e,0,a),this.values=Po(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=Po(this.times,0),t=Po(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Do.prototype.TimeBufferType=Float32Array,Do.prototype.ValueBufferType=Float32Array,Do.prototype.DefaultInterpolation=K;class Fo extends Do{}Fo.prototype.ValueTypeName="bool",Fo.prototype.ValueBufferType=Array,Fo.prototype.DefaultInterpolation=Y,Fo.prototype.InterpolantFactoryMethodLinear=void 0,Fo.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends Do{}).prototype.ValueTypeName="color";(class extends Do{}).prototype.ValueTypeName="number";class Ho extends Oo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(n-t)/(i-t);let l=e*o;for(let e=l+o;l!==e;l+=4)je.slerpFlat(r,0,a,l-o,a,l,s);return r}}class Bo extends Do{InterpolantFactoryMethodLinear(e){return new Ho(this.times,this.values,this.getValueSize(),e)}}Bo.prototype.ValueTypeName="quaternion",Bo.prototype.DefaultInterpolation=K,Bo.prototype.InterpolantFactoryMethodSmooth=void 0;class ko extends Do{}ko.prototype.ValueTypeName="string",ko.prototype.ValueBufferType=Array,ko.prototype.DefaultInterpolation=Y,ko.prototype.InterpolantFactoryMethodLinear=void 0,ko.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends Do{}).prototype.ValueTypeName="vector";const Vo={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class zo{constructor(e,t,n){const i=this;let r,a=!1,o=0,s=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===a&&void 0!==i.onStart&&i.onStart(e,o,s),a=!0},this.itemEnd=function(e){o++,void 0!==i.onProgress&&i.onProgress(e,o,s),o===s&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t],i=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null}}}const Go=new zo;class Wo{constructor(e){this.manager=void 0!==e?e:Go,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(i,r){n.load(e,i,t,r)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Wo.DEFAULT_MATERIAL_NAME="__DEFAULT";const Xo={};class qo extends Error{constructor(e,t){super(e),this.response=t}}class jo extends Wo{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Vo.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;const o=Me("img");function s(){c(),Vo.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){c(),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}function c(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class Yo extends Wo{constructor(e){super(e)}load(e,t,n,i){const r=new ze,a=new jo(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)}),n,i),r}}class $o extends Nn{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}const Ko="\\[\\]\\.:\\/",Zo=new RegExp("["+Ko+"]","g"),Jo="[^"+Ko+"]",Qo="[^"+Ko.replace("\\.","")+"]",es=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Jo)+/(WCOD+)?/.source.replace("WCOD",Qo)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Jo)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Jo)+"$"),ts=["material","materials","bones","map"];class ns{constructor(e,t,n){this.path=t,this.parsedPath=n||ns.parseTrackName(t),this.node=ns.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new ns.Composite(e,t,n):new ns(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Zo,"")}static parseTrackName(e){const t=es.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const e=n.nodeName.substring(i+1);-1!==ts.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const r=e[i];if(r.name===t||r.uuid===t)return r;const a=n(r.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=ns.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}const a=e[i];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ns.Composite=class{constructor(e,t,n){const i=n||ns.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},ns.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ns.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ns.prototype.GetterByBindingType=[ns.prototype._getValue_direct,ns.prototype._getValue_array,ns.prototype._getValue_arrayElement,ns.prototype._getValue_toArray],ns.prototype.SetterByBindingTypeAndVersioning=[[ns.prototype._setValue_direct,ns.prototype._setValue_direct_setNeedsUpdate,ns.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ns.prototype._setValue_array,ns.prototype._setValue_array_setNeedsUpdate,ns.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ns.prototype._setValue_arrayElement,ns.prototype._setValue_arrayElement_setNeedsUpdate,ns.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ns.prototype._setValue_fromArray,ns.prototype._setValue_fromArray_setNeedsUpdate,ns.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class is extends $a{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const rs=new Ye,as=new Ye;"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:d}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=d);const os=new Ze,ss=new Ye;class ls extends $o{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new yn([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new yn([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new is(t,6,1);return this.setAttribute("instanceStart",new Za(n,3,0)),this.setAttribute("instanceEnd",new Za(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new is(t,6,1);return this.setAttribute("instanceColorStart",new Za(n,3,0)),this.setAttribute("instanceColorEnd",new Za(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new bo(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ze);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),os.setFromBufferAttribute(t),this.boundingBox.union(os))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ft),null===this.boundingBox&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)ss.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(ss)),ss.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(ss));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}Ei.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new xe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},wi.line={uniforms:ti.merge([Ei.common,Ei.fog,Ei.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};class cs extends ni{constructor(e){super({type:"LineMaterial",uniforms:ti.clone(wi.line.uniforms),vertexShader:wi.line.vertexShader,fragmentShader:wi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(e){!0===e?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set(e){Boolean(e)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),!0===e?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)},set:function(e){Boolean(e)!==Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),!0===e?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(e)}}const ds=new Ye,hs=new Ye,us=new Ge,ps=new Ge,ms=new Ge,fs=new Ye,gs=new Tt,_s=new class{constructor(e=new Ye,t=new Ye){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){rs.subVectors(e,this.start),as.subVectors(this.end,this.start);const n=as.dot(as);let i=as.dot(rs)/n;return t&&(i=me(i,0,1)),i}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}},vs=new Ye,Ss=new Ze,Es=new ft,ws=new Ge;let xs,ys;function Ts(e,t,n){return ws.set(0,0,-t,1).applyMatrix4(e.projectionMatrix),ws.multiplyScalar(1/ws.w),ws.x=ys/n.width,ws.y=ys/n.height,ws.applyMatrix4(e.projectionMatrixInverse),ws.multiplyScalar(1/ws.w),Math.abs(Math.max(ws.x,ws.y))}class bs extends $n{constructor(e=new ls,t=new cs({color:16777215*Math.random()})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,i=new Float32Array(2*t.count);for(let e=0,r=0,a=t.count;e<a;e++,r+=2)ds.fromBufferAttribute(t,e),hs.fromBufferAttribute(n,e),i[r]=0===r?0:i[r-1],i[r+1]=i[r]+ds.distanceTo(hs);const r=new is(i,2,1);return e.setAttribute("instanceDistanceStart",new Za(r,1,0)),e.setAttribute("instanceDistanceEnd",new Za(r,1,1)),this}raycast(e,t){const n=this.material.worldUnits,i=e.camera;null!==i||n||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=void 0!==e.params.Line2&&e.params.Line2.threshold||0;xs=e.ray;const a=this.matrixWorld,o=this.geometry,s=this.material;let l,c;ys=s.linewidth+r,null===o.boundingSphere&&o.computeBoundingSphere(),Es.copy(o.boundingSphere).applyMatrix4(a),l=n?.5*ys:Ts(i,Math.max(i.near,Es.distanceToPoint(xs.origin)),s.resolution),Es.radius+=l,!1!==xs.intersectsSphere(Es)&&(null===o.boundingBox&&o.computeBoundingBox(),Ss.copy(o.boundingBox).applyMatrix4(a),c=n?.5*ys:Ts(i,Math.max(i.near,Ss.distanceToPoint(xs.origin)),s.resolution),Ss.expandByScalar(c),!1!==xs.intersectsBox(Ss)&&(n?function(e,t){const n=e.matrixWorld,i=e.geometry,r=i.attributes.instanceStart,a=i.attributes.instanceEnd;for(let o=0,s=Math.min(i.instanceCount,r.count);o<s;o++){_s.start.fromBufferAttribute(r,o),_s.end.fromBufferAttribute(a,o),_s.applyMatrix4(n);const i=new Ye,s=new Ye;xs.distanceSqToSegment(_s.start,_s.end,s,i),s.distanceTo(i)<.5*ys&&t.push({point:s,pointOnLine:i,distance:xs.origin.distanceTo(s),object:e,face:null,faceIndex:o,uv:null,uv1:null})}}(this,t):function(e,t,n){const i=t.projectionMatrix,r=e.material.resolution,a=e.matrixWorld,o=e.geometry,s=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,s.count),d=-t.near;xs.at(1,ms),ms.w=1,ms.applyMatrix4(t.matrixWorldInverse),ms.applyMatrix4(i),ms.multiplyScalar(1/ms.w),ms.x*=r.x/2,ms.y*=r.y/2,ms.z=0,fs.copy(ms),gs.multiplyMatrices(t.matrixWorldInverse,a);for(let t=0,o=c;t<o;t++){if(us.fromBufferAttribute(s,t),ps.fromBufferAttribute(l,t),us.w=1,ps.w=1,us.applyMatrix4(gs),ps.applyMatrix4(gs),us.z>d&&ps.z>d)continue;if(us.z>d){const e=us.z-ps.z,t=(us.z-d)/e;us.lerp(ps,t)}else if(ps.z>d){const e=ps.z-us.z,t=(ps.z-d)/e;ps.lerp(us,t)}us.applyMatrix4(i),ps.applyMatrix4(i),us.multiplyScalar(1/us.w),ps.multiplyScalar(1/ps.w),us.x*=r.x/2,us.y*=r.y/2,ps.x*=r.x/2,ps.y*=r.y/2,_s.start.copy(us),_s.start.z=0,_s.end.copy(ps),_s.end.z=0;const o=_s.closestPointToPointParameter(fs,!0);_s.at(o,vs);const c=we.lerp(us.z,ps.z,o),h=c>=-1&&c<=1,u=fs.distanceTo(vs)<.5*ys;if(h&&u){_s.start.fromBufferAttribute(s,t),_s.end.fromBufferAttribute(l,t),_s.start.applyMatrix4(a),_s.end.applyMatrix4(a);const i=new Ye,r=new Ye;xs.distanceSqToSegment(_s.start,_s.end,r,i),n.push({point:r,pointOnLine:i,distance:xs.origin.distanceTo(r),object:e,face:null,faceIndex:t,uv:null,uv1:null})}}}(this,i,t)))}}class Ms extends ls{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setPositions(n),this}setColors(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setColors(n),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class As extends bs{constructor(e=new Ms,t=new cs({color:16777215*Math.random()})){super(e,t),this.isLine2=!0,this.type="Line2"}}let Cs={MODE_ADD:0,MODE_DEL:1,FLOAT_PREC:5,annotationsIndex:0,annotationPoints:[[]],init:()=>{Cs.currID=void 0,Cs.currData=void 0,Cs.currAddables=void 0,Cs._bEdit=!1,Cs._bLoading=!1,Cs._title=void 0,Cs._descr=void 0,Cs.initBaseParsers(),Cs.editNodes=!1,Cs.nowEditingNodes=[]},setEditMode:e=>{Cs._bEdit=e,console.log("Edit mode:"+e)},load:(e,t,n)=>(Cs._bLoading=!0,$.getJSON(e,(e=>{Cs.currData=e,Cs.currID=t,Cs._bLoading=!1,Cs.parseScene(e),n&&n(),tc.fireEvent("SceneJSONLoaded",t)}))),loadAddables:(e,t,n)=>(Cs._bLoading=!0,$.getJSON(e,(e=>{Cs.currAddables=e,Cs.currID=t,Cs._bLoading=!1,Cs.parseAddables(e),n&&n()}))),clearScene:()=>{if(!(tc._rootVisible.children.length<=0)){tc._rootVisible.removeChildren();for(let e in tc.snodes)e!==tc.ROOT_NID&&delete tc.snodes[e];tc.MRes.clear(),tc.XPFNetwork.clear()}},clearSemantics:()=>{if(!(tc._rootSem.children.length<=0)){tc._rootSem.removeChildren();for(let e in tc.semnodes)e!==tc.ROOT_NID&&delete tc.semnodes[e];tc.SUI.gSemIcons&&tc.SUI.gSemIcons.removeChildren(),tc.SemFactory.stopCurrentConvex(),tc.SemFactory.init()}},clear:()=>{Cs.clearScene(),Cs.clearSemantics(),tc.Nav.clear()},parseScene:e=>{if(void 0!==(e=void 0===e?Cs.currData:e))for(let t in e)Cs._jsonParsers[t]&&Cs._jsonParsers[t](e[t])},parseAddables:e=>{},getJSONchildren:(e,t)=>{let n;void 0===t&&(t=tc.NTYPES.SCENE);let i=[];if(t===tc.NTYPES.SEM&&(n=tc.getSemanticNode(e)),t===tc.NTYPES.SCENE&&(n=tc.getSceneNode(e)),void 0!==n){for(let e in n.children){let t=n.children[e];void 0!==t.nid&&i.push(t.nid)}return i}},getJSONgraphEdges:e=>{void 0===e&&(e=tc.NTYPES.SCENE);let t=tc.snodes;e===tc.NTYPES.SEM&&(t=tc.semnodes),e===tc.NTYPES.UI&&(t=tc.uinodes);let n={};for(let e in t){let i=t[e];i&&i.parent&&i.parent.nid&&(void 0===n[i.parent.nid]&&(n[i.parent.nid]=[]),n[i.parent.nid].push(i.nid))}return n},getJSONsemanticSpheresList:e=>{let t=tc.getSemanticNode(e);if(void 0===t)return;let n=[];for(let e in t.children){let i=t.children[e];i.type&&n.push([parseFloat(i.position.x.toPrecision(Cs.FLOAT_PREC)),parseFloat(i.position.y.toPrecision(Cs.FLOAT_PREC)),parseFloat(i.position.z.toPrecision(Cs.FLOAT_PREC)),parseFloat(i.scale.x.toPrecision(Cs.FLOAT_PREC))])}return n},getJSONsemanticConvexShapes:e=>{let t=tc.getSemanticNode(e);if(void 0===t)return;let n=[];for(let e in t.children){let i=t.children[e];i.userData._convexPoints&&n.push(i.userData._convexPoints)}return n},_applyJSONTransformToNode:(e,t)=>{if(void 0!==e&&void 0!==t){if(e.bUseGeoCoords)return t.bUseGeoCoords=!0,void(e.scale&&t.setScale(e.scale[0],e.scale[1],e.scale[2]));e.autocenter?t.autocenter=!0:e.position&&t.setPosition(e.position[0],e.position[1],e.position[2]),e.rotation&&t.setRotation(e.rotation[0],e.rotation[1],e.rotation[2]),e.scale&&t.setScale(e.scale[0],e.scale[1],e.scale[2]),e.list&&Array.isArray(e.list)}},initBaseParsers:()=>{Cs._jsonParsers={},Cs._jsonParsers.title=e=>{void 0!==e&&Cs.setTitle(e)},Cs._jsonParsers.description=e=>{void 0!==e&&Cs.setDescription(e)},Cs._jsonParsers.fx=e=>{e.ao&&(tc.FX.togglePass(tc.FX.PASS_AO,!0),e.ao.i&&tc.FX.setAOintensity(parseFloat(e.ao.i))),e.bloom&&(tc.FX.togglePass(tc.FX.PASS_BLOOM,!0),e.bloom.i&&tc.FX.setBloomStrength(parseFloat(e.bloom.i)),e.bloom.t&&tc.FX.setBloomThreshold(parseFloat(e.bloom.t))),e.dof&&(tc.FX.togglePass(tc.FX.PASS_DOF,!0),e.dof.f&&tc.FX.setDOFfocus(parseFloat(e.dof.f)))},Cs._jsonParsers.environment=e=>{let t=e.mainpano;if(e.mainpano&&(t.url&&tc.setMainPanorama(t.url),t.rotation&&tc.setMainPanoramaRotation(t.rotation)),e.bgcolor){let t=new THREE.Color(e.bgcolor[0],e.bgcolor[1],e.bgcolor[2]);tc.setBackgroundColor(t)}let n=e.mainlight;n?(n.direction&&tc.setMainLightDirection(new THREE.Vector3(n.direction[0],n.direction[1],n.direction[2])),tc._dMainL?(n.color&&(tc._dMainL.color=new THREE.Color(n.color[0],n.color[1],n.color[2])),n.intensity&&(tc._dMainL.intensity=n.intensity),void 0!==n.shadows?tc.toggleShadows(n.shadows):tc.toggleShadows(!1)):tc.toggleMainLight(!1)):tc.toggleMainLight(!1);let i=e.lightprobes;if(i&&(void 0!==i.auto&&tc.setAutoLP(i.auto),i.list))for(let e in i.list){let t=i.list[e],n=new tc.LightProbe(t.res);t.pos&&n.setPosition(parseFloat(t.pos[0]),parseFloat(t.pos[1]),parseFloat(t.pos[2])),t.near&&n.setNear(parseFloat(t.near)),t.far&&n.setFar(parseFloat(t.far)),tc.addLightProbe(n),console.log(n)}e.exposure&&tc.setExposure(e.exposure)},Cs._jsonParsers.soundscape=e=>{void 0!==e&&e.global&&tc.setGlobalAudio(e.global.url,e.global.loop)},Cs._jsonParsers.navmode=e=>{void 0!==e&&tc.Nav.setNavMode(e)},Cs._jsonParsers.locomotionGraph=e=>{if(void 0!==e){for(let t in e){let n=e[t];n.pos&&tc.Nav.addLocomotionNode(parseFloat(n.pos[0]),parseFloat(n.pos[1]),parseFloat(n.pos[2]),!0)}tc.Nav.setFirstPersonControl(),tc.Nav.toggleLocomotionValidator(!1)}},Cs._jsonParsers.measurements=e=>{if(void 0!==e)for(let t in e){let n=e[t];if(n.points&&6===n.points.length){let e=new THREE.Vector3(parseFloat(n.points[0]),parseFloat(n.points[1]),parseFloat(n.points[2])),t=new THREE.Vector3(parseFloat(n.points[3]),parseFloat(n.points[4]),parseFloat(n.points[5]));tc.SUI.addMeasurementPoint(e),tc.SUI.addMeasurementPoint(t)}}},Cs._jsonParsers.viewpoints=e=>{if(void 0!==e)for(let t in e){let n=e[t];"home"===t?tc.Nav.setHomePOV((new tc.POV).setPosition(n.position[0],n.position[1],n.position[2]).setTarget(n.target[0],n.target[1],n.target[2]).setFOV(n.fov)):new tc.POV(t).setPosition(n.position[0],n.position[1],n.position[2]).setTarget(n.target[0],n.target[1],n.target[2]).setFOV(n.fov)}},Cs._jsonParsers.scenegraph=e=>{if(void 0===e)return;let t=e.nodes,n=e.edges;for(let e in t){let n=t[e],i=tc.getOrCreateSceneNode(e).removeChildren();n.transform&&Cs._applyJSONTransformToNode(n.transform,i);let r=n.urls;if(r&&""!==r&&(n.assetId&&""!==n.assetId?Array.isArray(n.assetId)?n.assetId.forEach((e=>{i.loadSketchfabAsset(e),i.assetId=e,i.sketchfabUrl="https://sketchfab.com/models/"+e})):(i.loadSketchfabAsset(n.assetId),i.assetId=n.assetId,i.sketchfabUrl=n.urls):Array.isArray(r)?r.forEach((e=>{i.load(e),i.sketchfabUrl=e})):(i.load(r),i.sketchfabUrl=r)),n["cesium.ion"]){let e=n["cesium.ion"];tc.MRes.loadCesiumIONAsset(e,i)}if(n.stream){let t,r=n.stream;if(r.src.startsWith("#")){let e=parseInt(r.src.substring(1));t=tc.MediaFlow.getOrCreateVideoStream(e,void 0,!0)}else{let n=tc.Utils.resolveCollectionURL(r.src);t=tc.MediaFlow.getOrCreateVideoStream(e,n)}if(r.chromakey){let e=r.chromakey.color;e&&t.matStream.uniforms.keycolor.value.set(parseFloat(e[0]),parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])),r.chromakey.smoothness&&(t.matStream.uniforms.smoothness.value=parseFloat(r.chromakey.smoothness)),r.chromakey.spill&&(t.matStream.uniforms.spill.value=parseFloat(r.chromakey.spill)),r.chromakey.similarity&&(t.matStream.uniforms.similarity.value=parseFloat(r.chromakey.similarity))}if(!n.urls){let e=new THREE.PlaneGeometry(1,1),n=new THREE.Mesh(e);n.scale.x=1,n.scale.y=-1,tc._assetReqNew(),t.el.addEventListener("loadedmetadata",(e=>{n.scale.x=.01*t.el.videoWidth,n.scale.y=-.01*t.el.videoHeight,tc._assetReqComplete()})),tc.Utils.modelVisitor(i,n),i.add(n),tc._bqScene=!0,i.setPickable(!0),i.dirtyBound()}i.setMaterial(t.matStream)}n.shadowcast&&i.setShadowCast(n.shadowcast),n.shadowreceive&&i.setShadowCast(n.shadowreceive),n.toYup&&i.setYup(),n.editable&&(i.editable=n.editable,i.setEditable()),void 0!==n.isImported?i.isImported=n.isImported:i.isImported=!1,void 0!==n.isImporter?i.isImporter=n.isImporter:i.isImporter=!1,void 0!==n.isPivotWrapper?i.isPivotWrapper=n.isPivotWrapper:i.isPivotWrapper=!1,i.loadedFromJSON=!0,n.keywords&&(i.kwords=n.keywords)}for(let e in n){let t=n[e],i=tc.getSceneNode(e);if(void 0!==i)for(let e in t){let n=t[e],r=tc.getSceneNode(n);void 0!==r&&r.attachTo(i)}}for(let e in t){let n=t[e],i=tc.getSceneNode(e);if(void 0!==i&&(void 0!==n.show&&(n.show?(i.show(),console.log("show "+e)):(i.hide(),console.log("hide "+e))),n.material)){let e;"string"==typeof n.material?e=tc.MatHub.materials[n.material]:n.material.fragmentShader||n.material.vertexShader?(n.material.vertexShader||(n.material.vertexShader=tc.MatHub.getDefVertexShader()),e=new THREE.ShaderMaterial(n.material)):e=new THREE.MeshStandardMaterial(n.material),e&&i.setMaterial(e)}}},Cs._jsonParsers.semanticgraph=e=>{if(void 0===e)return;let t=e.nodes,n=e.edges;for(let e in t){let n=t[e],i=tc.getOrCreateSemanticNode(e),r=n.urls;r&&(Array.isArray(r)?r.forEach((e=>{i.load(e)})):i.load(r)),n.toYup&&i.setYup(),n.description&&i.setDescription(n.description),n.audio&&i.setAudio(n.audio),n.keywords&&(i.kwords=n.keywords);let a=n.spheres;if(Array.isArray(a))for(let t in a){let n=a[t],i=new THREE.Vector3(parseFloat(n[0]),parseFloat(n[1]),parseFloat(n[2]));tc.SemFactory.createSphere(e,i,parseFloat(n[3]))}let o=n.convexshapes;if(Array.isArray(o))for(let t in o){let n=o[t],i=[],r=[];for(let e=0;e<n.length;e+=3){let t=new THREE.Vector3(n[e],n[e+1],n[e+2]);i.push(t),r.push(n[e]),r.push(n[e+1]),r.push(n[e+2])}tc.SemFactory.createConvexShape(e,i,r)}let s=n.manualshapes,l=n.colors,c=n.widths;if(Array.isArray(s)){tc.SemFactory._firstAnnotationAfterLoad=!0;for(let e in s){Cs.annotationPoints[Cs.annotationsIndex]||(Cs.annotationPoints[Cs.annotationsIndex]=[]),tc.SemFactory.aPoints[Cs.annotationsIndex]=tc.createSemanticNode("manual_ann"+Cs.annotationsIndex);let t=s[e],n=[];for(let e=0;e<t.length;e+=3){let i=new THREE.Vector3(t[e],t[e+1],t[e+2]);n.push(i),Cs.annotationPoints[Cs.annotationsIndex].push(i)}for(let t=0;t<n.length;t+=1){let i=[n[t],t+1>=n.length?n[t]:n[t+1]];const r=new THREE.CatmullRomCurve3(i),a=Math.round(12*i.length),o=new THREE.Vector3,s=[];for(let e=0,t=a;e<t;e++){const n=e/t;r.getPoint(n,o),s.push(o.x,o.y,o.z)}const d=new Ms;d.setPositions(s);const h=parseInt(l[e],16);let u=new cs({color:h,linewidth:c[e],resolution:new THREE.Vector2(window.innerWidth,window.innerHeight)}),p=new As(d,u);tc.SemFactory.aPoints[Cs.annotationsIndex].add(p)}tc._rootSem.add(tc.SemFactory.aPoints[Cs.annotationsIndex]),Cs.annotationsIndex+=1}console.log("ANN POINTS: ",Cs.annotationPoints),console.log("ANN INDEX: ",Cs.annotationsIndex)}}for(let e in n){let t=n[e],i=tc.getSemanticNode(e);if(void 0!==i)for(let e in t){let n=t[e],r=tc.getSemanticNode(n);void 0!==r&&r.attachTo(i)}}for(let e in t){let n=t[e],i=tc.getSemanticNode(e);if(void 0!==i&&(void 0!==n.show&&(n.show?(i.show(),console.log("show "+e)):(i.hide(),console.log("hide "+e))),n.nopicking&&i.disablePicking(),n.material)){let e=new THREE.MeshStandardMaterial(n.material);i.setMaterial(e)}}console.log("NODI: ",tc.snodes)},Cs._jsonParsers.addableobjects=e=>{Cs.currAddables=e},Cs._jsonParsers.xpfnet=e=>{if(tc.Nav.setFirstPersonControl(),e.list){let t=e.list,n=t.length;for(let e=0;e<n;e++){let n=t[e],i=new tc.XPF;i.realizeSUI(),n.location&&i.setLocation(n.location[0],n.location[1],n.location[2]),n.rotation&&i.setRotation(n.rotation[0],n.rotation[1],n.rotation[2]),n.baselayer&&i.setBaseLayer(n.baselayer),tc.XPFNetwork.add(i)}}e.photoscanOPKfile&&XPFNetwork.loadFromPhotoscanFile(e.photoscanOPKfile,(()=>{tc.XPFNetwork.setHomeXPF(0),tc.XPFNetwork.requestTransitionByIndex(0,0)}))}},addSceneParser:(e,t)=>{Cs._jsonParsers[e]=t},sendEdit:(e,t,n)=>{if(console.log("SceneHub._bLoading: ",Cs._bLoading),console.log("SceneHub._bEdit: ",Cs._bEdit),console.log("patch: ",e),console.log("mode: ",t),Cs._bLoading||!Cs._bEdit)return;if(void 0===e)return;void 0===t&&(t=Cs.MODE_ADD);let i=Cs.currID,r={};r.sid=i,r.data=e,r.mode=t===Cs.MODE_DEL?"DEL":"ADD";let a=JSON.stringify(r);e=null,r=null,$.ajax({url:tc.PATH_RESTAPI+"edit/scene",type:"POST",data:a,contentType:"application/json; charset=utf-8",dataType:"json",success:e=>{console.log("ERREEEEEEEEEEE: ",e),e&&(console.log("r: ",e),Cs.currData=e),n&&n()},error:(e,t,n)=>{console.error("AJAX Error: "+t,n)}})},currSceneHasHomeConfig:()=>void 0!==Cs.currData&&void 0!==Cs.currData.viewpoints&&void 0!==Cs.currData.viewpoints.home,setTitle:e=>{Cs._title=e},getTitle:()=>Cs._title,setDescription:e=>{Cs._descr=e},getDescription:()=>Cs._descr,getAnnotationsIndex:()=>Cs.annotationsIndex,getAnnotationsPoints:()=>Cs.annotationPoints};const Ps=Cs;let Rs={init:()=>{Rs._listener=new THREE.AudioListener,Rs._loader=new THREE.AudioLoader,Rs._bGenAuPlaying=!1},playOnceGlobally:(e,t)=>{if(t&&Rs._bGenAuPlaying)return;e=ATON.Utils.resolveCollectionURL(e);let n=new THREE.Audio(ATON.AudioHub._listener);return Rs._loader.load(e,(e=>{n.setBuffer(e),n.play(),t&&(Rs._bGenAuPlaying=!0)})),t&&(n.onEnded=()=>{Rs._bGenAuPlaying=!1}),n}};const Ns=Rs;class Os extends THREE.EventDispatcher{constructor(e){super(),!1===window.isSecureContext&&console.error("DeviceOrientationEvent is only available in secure contexts (https)"),this._zee=new THREE.Vector3(0,0,1),this._euler=new THREE.Euler,this._q0=new THREE.Quaternion,this._q1=new THREE.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5)),this._changeEvent={type:"change"};const t=this,n=new THREE.Quaternion;this.object=e,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.deviceOrientation={},this.screenOrientation=0,this.alphaOffset=0;const i=function(e){t.deviceOrientation=e},r=function(){t.screenOrientation=window.orientation||0};this.connect=function(){r(),void 0!==window.DeviceOrientationEvent&&"function"==typeof window.DeviceOrientationEvent.requestPermission?window.DeviceOrientationEvent.requestPermission().then((function(e){"granted"==e&&(window.addEventListener("orientationchange",r),window.addEventListener("deviceorientation",i))})).catch((function(e){console.error("Unable to use DeviceOrientation API:",e)})):(window.addEventListener("orientationchange",r),window.addEventListener("deviceorientation",i)),t.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",r),window.removeEventListener("deviceorientation",i),t.enabled=!1},this.update=function(){if(!1===t.enabled)return;const e=t.deviceOrientation;if(e){const i=e.alpha?THREE.MathUtils.degToRad(e.alpha)+t.alphaOffset:0,r=e.beta?THREE.MathUtils.degToRad(e.beta):0,a=e.gamma?THREE.MathUtils.degToRad(e.gamma):0,o=t.screenOrientation?THREE.MathUtils.degToRad(t.screenOrientation):0;!function(e,n,i,r,a){t._euler.set(i,n,-r,"YXZ"),e.setFromEuler(t._euler),e.multiply(t._q1),e.multiply(t._q0.setFromAxisAngle(t._zee,-a))}(t.object.quaternion,i,r,a,o),8*(1-n.dot(t.object.quaternion))>1e-6&&(n.copy(t.object.quaternion),t.dispatchEvent(t._changeEvent))}},this.dispose=function(){t.disconnect()},this.connect()}}const Ls=Os;let Is={STD_FOV:50,STD_NEAR:.01,STD_FAR:800,FP_EPS:.01,STD_POV_TRANS_DURATION:2,STD_LOCNODE_SIZE:.5,MIN_LOC_VALID_DIST:1.5,MODE_ORBIT:0,MODE_FP:1,MODE_DEVORI:2,MODE_FPW:3,LocomotionNode:class{constructor(e){this.pos=new THREE.Vector3(0,0,0),this.id=e,this._iXPF=void 0,this._sui=void 0}setLocation(e,t,n){return e instanceof THREE.Vector3?this.pos.copy(e):this.pos.set(e,t,n),this._sui&&this._sui.position.copy(this.pos),this}getLocation(){return this.pos}realizeSUI(e){return void 0===ATON.SUI.gLocNodes||(this._sui=new THREE.Sprite(ATON.SUI.getOrCreateSpriteWalk()),this._sui.position.copy(this.pos),this._sui.scale.set(ATON.Nav.STD_LOCNODE_SIZE,ATON.Nav.STD_LOCNODE_SIZE,ATON.Nav.STD_LOCNODE_SIZE),ATON.SUI.gLocNodes.add(this._sui)),this}toggleSUI(e){return void 0===this._sui||(this._sui.visible=e),this}},init:()=>{Is._mode=void 0,Is.POVtransitionDuration=Is.STD_POV_TRANS_DURATION,Is._rotSpeedOrbit=.4,Is._rotSpeedFP=-.2,Is._inertia=.08,Is._bControl=!0,Is._bLocValidator=!0,Is._bInteracting=!1,Is._prevMode=void 0,Is.setOrbitControl(),Is._currPOV=(new tc.POV).setPosition(0,0,0).setTarget(1,0,0).setFOV(tc.Nav.STD_FOV),Is._fromPOV=new tc.POV,Is._reqPOV=new tc.POV,Is.homePOV=void 0,Is._tPOVcall=-1,Is._tPOVprogress=0,Is.povlist={},Is._vDir=new THREE.Vector3(1,0,0),Is._qOri=new THREE.Quaternion,Is._lastPos=new THREE.Vector3(0,0,0),Is._lastOri=new THREE.Quaternion,Is._dOri=0,Is._dPos=0,Is._motionAmt=0,Is._motionDir=new THREE.Vector3(0,1,0),Is._bValidLocomotion=!1,Is._locNodes=[],Is._prevLN=void 0},getCurrentEyeLocation:()=>Is._currPOV.pos,getCurrentDirection:()=>Is._vDir,getCurrentTarget:()=>Is._currPOV.target,getMotionDirection:()=>Is._motionDir,getXRrigPosition:()=>tc.XR._currPos,copyCurrentPOV:()=>{let e=new tc.POV;return e.pos.copy(Is._currPOV.pos),e.target.copy(Is._currPOV.target),e.fov=Is._currPOV.fov,e},addPOV:(e,t)=>{if(void 0!==e)return e.as(t),e},clearPOVs:()=>{for(let e in tc.Nav.povlist)delete Is.povlist[e]},isTransitioning:()=>Is._tPOVcall>=0,currentQueryValidForLocomotion:()=>Is._bValidLocomotion,locomotionValidator:()=>{if(void 0===tc._queryDataScene)return void(Is._bValidLocomotion=!1);let e=tc._queryDataScene,t=(e.p,e.n);e.d<=Is.MIN_LOC_VALID_DIST?Is._bValidLocomotion=!1:t?t.y<=.7?Is._bValidLocomotion=!1:Is._bValidLocomotion=!0:Is._bValidLocomotion=!1},toggleLocomotionValidator:e=>{e?Is._bLocValidator=!0:(Is._bLocValidator=!1,Is._bValidLocomotion=!1)},addLocomotionNode:(e,t,n,i)=>{let r=(new Is.LocomotionNode).setLocation(e,t,n);return i&&r.realizeSUI(),Is._locNodes.push(r),tc.fireEvent("LocomotionNodeAdded",r),r},getLocomotionNodeByIndex:e=>Is._locNodes[e],clearLocomotionNodes:()=>{Is._locNodes=[],Is._prevLN=void 0,tc.SUI.gLocNodes&&tc.SUI.gLocNodes.removeChildren()},getLocomotionNodeInSight:()=>{let e=Is._locNodes.length;if(e<=0)return;if(Is.isTransitioning())return;let t,n,i=Is._currPOV.pos,r=Is._vDir;void 0===Is._dirLNode&&(Is._dirLNode=new THREE.Vector3);for(let a=0;a<e;a++)if(Is._posLNode=Is._locNodes[a].pos,Is._dirLNode.x=Is._posLNode.x-i.x,Is._dirLNode.y=Is._posLNode.y-i.y,Is._dirLNode.z=Is._posLNode.z-i.z,Is._dirLNode=Is._dirLNode.normalize(),Is._dirLNode.dot(r)>.8){let e=i.distanceToSquared(Is._posLNode);e>.3&&(void 0===n||e<n)&&(n=e,t=a)}return t},requestTransitionToLocomotionNode:(e,t)=>{if(void 0===e)return;if(Is._mode===Is.MODE_ORBIT)return;let n=tc.Nav._vDir,i=(new tc.POV).setPosition(e.pos).setTarget(e.pos.x+n.x,e.pos.y+n.y,e.pos.z+n.z).setFOV(Is._currPOV.fov);e.toggleSUI(!1),void 0!==Is._prevLN&&Is._prevLN.toggleSUI(!0),Is.requestPOV(i,t),Is._prevLN=e,tc.fireEvent("LocomotionNodeRequested",e)},requestTransitionToLocomotionNodeInSightIfAny:e=>{let t=tc.XPFNetwork.getNextXPFindex();if(void 0!==t)return Is.requestTransitionToLocomotionNode(tc.XPFNetwork._list[t]._lnode,e),!0;let n=tc.Nav.getLocomotionNodeInSight();if(void 0===n)return!1;let i=Is._locNodes[n];return Is.requestTransitionToLocomotionNode(i,e),!0},requestDeltaRotation:(e,t,n)=>{if(tc.XR._bPresenting)return;let i=new THREE.Vector3,r=new THREE.Vector3;i.crossVectors(Is._vDir,THREE.Object3D.DEFAULT_UP),r.x=Is._currPOV.target.x+i.x*e,r.y=Is._currPOV.target.y+t,r.z=Is._currPOV.target.z+i.z*e;let a=new tc.POV;a.setTarget(r),a.setPosition(tc.Nav._currPOV.pos),tc.Nav.requestPOV(a,n)},setUserControl:e=>{void 0!==e&&e!==Is._bControl&&(Is._bControl=e,void 0!==Is._controls&&(Is._controls.enabled=e),Is._cOrbit&&(Is._cOrbit.enabled=e),Is._cFirstPerson&&(Is._cFirstPerson.enabled=e),console.log("Nav controls: "+Is._bControl))},toggleUserControl:()=>{Is.setUserControl(!Is._bControl)},isUserControlEnabled:()=>Is._bControl,isOrbit:()=>!tc.XR._bPresenting&&Is._mode===Is.MODE_ORBIT,isFirstPerson:()=>!tc.XR._bPresenting&&Is._mode===Is.MODE_FP,isDevOri:()=>!tc.XR._bPresenting&&Is._mode===Is.MODE_DEVORI,setNavMode:e=>{void 0!==e&&(e===Is.MODE_ORBIT&&Is.setOrbitControl(),e===Is.MODE_FP&&Is.setFirstPersonControl(),e===Is.MODE_FPW&&Is.setFirstPersonControlWalking(),e===Is.MODE_DEVORI&&Is.setDeviceOrientationControl())},restorePreviousNavMode:()=>{void 0===Is._prevMode&&Is.setOrbitControl(),Is.setNavMode(Is._prevMode)},_updCamera:e=>{if(void 0===e&&(e=Is._camera),tc.FX.composer){let t=tc.FX.composer.passes;if(t)for(let n=0;n<t.length;n++)t[n].camera&&(t[n].camera=e)}Is._currPOV&&(e.fov=Is._currPOV.fov,e.updateProjectionMatrix()),tc._setupGizmo(),tc.MRes.updateTSetsCamera(e)},setZoomWithWheel:e=>{Is._cOrbit.enableZoom=e},setOrbitControl:()=>{if(!tc.XR.isPresenting()){if(Is._prevMode=Is._mode,Is._mode=Is.MODE_ORBIT,Is._bInteracting=!1,tc.fireEvent("NavInteraction",!1),void 0===Is._cOrbit){Is._camOrbit=new THREE.PerspectiveCamera(Is.STD_FOV,window.innerWidth/window.innerHeight,Is.STD_NEAR,Is.STD_FAR),Is._camOrbit.layers.enableAll(),Is._cOrbit=new THREE.OrbitControls(Is._camOrbit,tc._renderer.domElement);let e=Is._cOrbit;e.rotateSpeed=Is._rotSpeedOrbit,e.enablePan=!0,Is._inertia>0&&(e.enableDamping=!0,e.dampingFactor=Is._inertia),e.screenSpacePanning=!0,e.enableZoom=!0,e.minDistance=.03,e.maxDistance=300,Is._bControl||(e.enabled=!1),e.addEventListener("start",(()=>{Is._bInteracting=!0,tc.fireEvent("NavInteraction",!0)})),e.addEventListener("end",(()=>{Is._bInteracting=!1,tc.fireEvent("NavInteraction",!1)}))}Is._controls=Is._cOrbit,Is._camera=Is._camOrbit,tc.AudioHub._listener&&Is._camera.children.length<1&&Is._camera.add(tc.AudioHub._listener),Is._updCamera(),Is._controls.update(),Is._currPOV&&Is.syncCurrCamera(),tc._onResize(),tc.toggleCenteredQuery(!1),tc.fireEvent("NavMode",Is._mode)}},setFirstPersonControl:()=>{if(!tc.XR.isPresenting()){if(Is._prevMode=Is._mode,tc.SUI.getSelectorRadius()>.1&&tc.SUI.setSelectorRadius(.1),Is._mode=Is.MODE_FP,Is._bInteracting=!1,tc.fireEvent("NavInteraction",!1),void 0===Is._cFirstPerson){Is._camFP=new THREE.PerspectiveCamera(Is.STD_FOV,window.innerWidth/window.innerHeight,Is.STD_NEAR,Is.STD_FAR),Is._camFP.layers.enableAll(),Is._cFirstPerson=new THREE.OrbitControls(Is._camFP,tc._renderer.domElement);let e=Is._cFirstPerson;e.enableZoom=!1,e.enablePan=!0,e.rotateSpeed=Is._rotSpeedFP,Is._inertia>0&&(e.enableDamping=!0,e.dampingFactor=Is._inertia),e.screenSpacePanning=!0,e.target.copy(Is._camera.position),e.minDistance=.01,e.maxDistance=.01,Is._bControl||(e.enabled=!1)}Is._controls=Is._cFirstPerson,Is._camera=Is._camFP,tc.AudioHub._listener&&Is._camera.children.length<1&&Is._camera.add(tc.AudioHub._listener),Is._updCamera(),Is._controls.update(),Is._currPOV&&Is.syncCurrCamera(),tc._onResize(),tc.toggleCenteredQuery(!1),tc.fireEvent("NavMode",Is._mode)}},setFirstPersonControlWalking:()=>{if(!tc.XR.isPresenting()){if(Is._prevMode=Is._mode,tc.SUI.getSelectorRadius()>.1&&tc.SUI.setSelectorRadius(.1),Is._mode=Is.MODE_FPW,Is._bInteracting=!1,tc.fireEvent("NavInteraction",!1),void 0===Is._cFirstPerson){Is._camFP=new THREE.PerspectiveCamera(Is.STD_FOV,window.innerWidth/window.innerHeight,Is.STD_NEAR,Is.STD_FAR),Is._camFP.layers.enableAll(),Is._cFirstPerson=new THREE.OrbitControls(Is._camFP,tc._renderer.domElement);let e=Is._cFirstPerson;e.enableZoom=!1,e.enablePan=!0,e.rotateSpeed=Is._rotSpeedFP,Is._inertia>0&&(e.enableDamping=!0,e.dampingFactor=Is._inertia),e.screenSpacePanning=!0,e.target.copy(Is._camera.position),e.minDistance=.01,e.maxDistance=.01,Is._bControl||(e.enabled=!1)}Is._controls=Is._cFirstPerson,Is._camera=Is._camFP,tc.AudioHub._listener&&Is._camera.children.length<1&&Is._camera.add(tc.AudioHub._listener),Is._updCamera(),Is._controls.update(),Is._currPOV&&Is.syncCurrCamera(),tc._onResize(),tc.toggleCenteredQuery(!1),tc.fireEvent("NavMode",Is._mode)}},setDeviceOrientationControl:()=>{tc.Utils.isMobile()&&(Is._prevMode=Is._mode,Is._mode=Is.MODE_DEVORI,Is._bInteracting=!1,tc.fireEvent("NavInteraction",!1),tc._screenPointerCoords.set(0,0),void 0===Is._cDevOri&&(Is._camDevOri=new THREE.PerspectiveCamera(Is.STD_FOV,window.innerWidth/window.innerHeight,Is.STD_NEAR,Is.STD_FAR),Is._camDevOri.layers.enableAll(),Is._cDevOri=new Ls(Is._camDevOri,tc._renderer.domElement),Is._cDevOri.alphaOffset=0),Is._controls=Is._cDevOri,Is._camera=Is._camDevOri,tc.AudioHub._listener&&Is._camera.children.length<1&&Is._camera.add(tc.AudioHub._listener),Is._updCamera(),Is._controls.update(),Is._currPOV&&Is.syncCurrCamera(),tc._onResize(),tc.toggleCenteredQuery(!0),tc.fireEvent("NavMode",Is._mode))},useAbsoluteOrientation:e=>{Is._cDevOri},setMotionAmount:e=>{Is._motionAmt=e},setMotionDirection:e=>{Is._motionDir.copy(e)},stop:()=>{Is._motionAmt=0},setFOV:e=>{if(tc.XR.isPresenting())return;Is._currPOV.fov=e;let t=Is._camera;t.fov=e,t.updateProjectionMatrix()},getFOV:()=>Is._currPOV.fov,_deltaMotions:()=>{Is._dOri=Is._lastOri.angleTo(tc.Nav._qOri),Is._dPos=Is._lastPos.distanceToSquared(Is._currPOV.pos),Is._lastPos.copy(Is._currPOV.pos),Is._lastOri.copy(tc.Nav._qOri)},syncCurrPOV:()=>{if(tc.XR.isPresenting()){const e=tc._renderer.xr.getCamera().cameras[0];return Is._currPOV.pos.copy(e.position),Is._qOri.copy(e.quaternion),e.getWorldDirection(Is._vDir),Is._currPOV.pos.x+=tc.XR.rig.position.x,Is._currPOV.pos.y+=tc.XR.rig.position.y,Is._currPOV.pos.z+=tc.XR.rig.position.z,void Is._deltaMotions()}const e=Is._controls,t=Is._camera;if(t.getWorldDirection(Is._vDir),t.getWorldQuaternion(Is._qOri),Is._deltaMotions(),Is._mode!==Is.MODE_DEVORI){if(Is._mode===Is.MODE_FP||Is._mode===Is.MODE_FPW)return Is._currPOV.pos.copy(e.target),Is._currPOV.target.x=Is._currPOV.pos.x+Is._vDir.x,Is._currPOV.target.y=Is._currPOV.pos.y+Is._vDir.y,void(Is._currPOV.target.z=Is._currPOV.pos.z+Is._vDir.z);Is._currPOV.pos.copy(t.position),Is._currPOV.target.copy(e.target)}else Is._currPOV.pos.copy(t.position)},applyPOVconstraints:e=>{},handlePOV:()=>{tc.XR.isPresenting()?Is.handleXRtransition():Is.handlePOVtransition(),Is.handleMotion(),Is.applyPOVconstraints(Is._currPOV)},handleMotion:()=>{if(Is.isTransitioning())return;if(0==Is._motionAmt)return;tc.XR.controller0&&tc.XR.controller0.visible?(tc.XR.controller0.getWorldDirection(Is._motionDir),Is._motionDir.negate()):Is._motionDir.copy(Is._vDir);let e=Is._motionAmt*tc._dt,t=Is._motionDir.x*e,n=Is._motionDir.y*e,i=Is._motionDir.z*e;Is._currPOV.pos.x+=t,Is._currPOV.pos.y+=n,Is._currPOV.pos.z+=i,Is._currPOV.target.x+=t,Is._currPOV.target.y+=n,Is._currPOV.target.z+=i},handlePOVtransition:()=>{if(!(Is._tPOVcall<0)){if(Is.POVtransitionDuration<=0?Is._tPOVprogress=1:Is._tPOVprogress=(tc._clock.elapsedTime-Is._tPOVcall)/Is.POVtransitionDuration,Is._tPOVprogress>=1)return Is._tPOVcall=-1,Is._currPOV.pos.copy(Is._reqPOV.pos),Is._currPOV.target.copy(Is._reqPOV.target),Is._currPOV.fov=Is._reqPOV.fov,void tc.fireEvent("POVTransitionCompleted",Is._reqPOV.id);var e;Is._tPOVprogress=(e=Is._tPOVprogress,(1-Math.cos(e*Math.PI))/2),Is._currPOV.pos.lerpVectors(Is._fromPOV.pos,Is._reqPOV.pos,Is._tPOVprogress),Is._currPOV.target.lerpVectors(Is._fromPOV.target,Is._reqPOV.target,Is._tPOVprogress),Is._fromPOV.fov&&Is._reqPOV.fov&&(Is._currPOV.fov=THREE.MathUtils.lerp(Is._fromPOV.fov,Is._reqPOV.fov,Is._tPOVprogress),Is._camera.fov=Is._currPOV.fov,Is._camera.updateProjectionMatrix())}},handleXRtransition:()=>{if(!(Is._tPOVcall<0)){if(Is.POVtransitionDuration<=0?Is._tPOVprogress=1:Is._tPOVprogress=(tc._clock.elapsedTime-Is._tPOVcall)/Is.POVtransitionDuration,Is._tPOVprogress>=1)return Is._tPOVcall=-1,tc.XR._currPos.copy(tc.XR._reqPos),void tc.fireEvent("POVTransitionCompleted",Is._reqPOV.id);tc.XR._currPos.lerpVectors(tc.XR._fromPos,tc.XR._reqPos,Is._tPOVprogress)}},syncCurrCamera:()=>{if(tc.XR.isPresenting())return;let e=Is._controls,t=Is._camera,n=Is._currPOV.pos,i=Is._currPOV.target;Is._mode!==Is.MODE_DEVORI?(Is._vDir.subVectors(i,n),Is._vDir.normalize(),Is._mode===Is.MODE_FP||Is._mode===Is.MODE_FPW?(e.target.copy(n),t.position.x=e.target.x-Is._vDir.x*Is.FP_EPS,t.position.y=e.target.y-Is._vDir.y*Is.FP_EPS,t.position.z=e.target.z-Is._vDir.z*Is.FP_EPS):(t.position.copy(n),e.target.copy(i))):t.position.copy(n)},update:()=>{Is.syncCurrPOV(),Is.handlePOV(),Is.syncCurrCamera()},requestPOV:(e,t,n)=>{tc._tPOVcall>=0||void 0!==e&&(tc.XR._bPresenting&&"immersive-ar"===tc.XR._sessionType||(Is.POVtransitionDuration=void 0!==t?t:Is.STD_POV_TRANS_DURATION,tc.XR.isPresenting()?(Is._reqPOV.pos.copy(e.pos?e.pos:Is._currPOV.pos),Is._fromPOV.pos.copy(Is._currPOV.pos),tc.XR._reqPos.copy(e.pos?e.pos:Is._currPOV.pos),tc.XR._fromPos.copy(tc.XR._currPos)):(Is._reqPOV.pos.copy(e.pos?e.pos:Is._currPOV.pos),Is._reqPOV.target.copy(e.target?e.target:Is._currPOV.target),Is._reqPOV.fov=e.fov?e.fov:Is._currPOV.fov,Is._fromPOV.pos.copy(Is._currPOV.pos),Is._fromPOV.target.copy(Is._currPOV.target),Is._fromPOV.fov=Is._currPOV.fov),n&&(e.pos&&(Is._reqPOV.pos.x*=tc._worldScale,Is._reqPOV.pos.y*=tc._worldScale,Is._reqPOV.pos.z*=tc._worldScale,tc.XR.isPresenting()&&(tc.XR._reqPos.x*=tc._worldScale,tc.XR._reqPos.y*=tc._worldScale,tc.XR._reqPos.z*=tc._worldScale)),e.target&&(Is._reqPOV.target.x*=tc._worldScale,Is._reqPOV.target.y*=tc._worldScale,Is._reqPOV.target.z*=tc._worldScale)),Is._tPOVcall=tc._clock.elapsedTime,tc.fireEvent("POVTransitionRequested",e.id)))},requestPOVbyBound:(e,t)=>{if(void 0===e)return;let n=new THREE.Vector3,i=3*e.radius;n.x=e.center.x-i*Is._vDir.x,n.y=e.center.y-i*Is._vDir.y,n.z=e.center.z-i*Is._vDir.z;let r=(new tc.POV).setPosition(n).setTarget(e.center);Is.requestPOV(r,t)},requestPOVbyNode:(e,t)=>{if(void 0===e)return;let n=e.getBound();Is.requestPOVbyBound(n,t)},requestPOVbyID:(e,t)=>{if(void 0===e)return;let n=Is.povlist[e];void 0!==n&&Is.requestPOV(n,t)},requestRetarget:(e,t,n)=>{let i=new THREE.Vector3;if(void 0===t)i.lerpVectors(e,Is._currPOV.pos,.8);else{let n=e.distanceTo(Is._currPOV.pos);n*=.5,i.x=e.x+t.x*n,i.y=e.y+t.y*n,i.z=e.z+t.z*n}let r=e.distanceTo(i);tc.FX.setDOFfocus(r);let a=(new tc.POV).setPosition(i).setTarget(e).setFOV(Is._currPOV.fov);Is.requestPOV(a,n),console.log(a)},computeDefaultHome:(e,t)=>{void 0===e&&(e=new THREE.Vector3(1,.7,1)),void 0===t&&(t=tc.getRootScene().getBound());let n=new THREE.Vector3(t.center.x+t.radius*e.x*1.5,t.center.y+t.radius*e.y*1.5,t.center.z+t.radius*e.z*1.5);Is.homePOV=(new tc.POV).setPosition(n).setTarget(t.center)},setHomePOV:e=>{Is.homePOV=e},computeAndRequestDefaultHome:(e,t,n)=>{Is.computeDefaultHome(t,n),Is.requestPOV(Is.homePOV,e)},requestHomePOV:e=>{Is.requestPOV(Is.homePOV,e)}};Is.requestHome=Is.requestHomePOV,Is.setAndRequestHomePOV=(e,t)=>{Is.setHomePOV(e),Is.requestPOV(e,t)},Is.clear=()=>{Is.clearPOVs(),Is.clearLocomotionNodes()},Is.DeviceOrientationControls=function(e){let t=this;this.object=e,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.deviceOrientation={},this.screenOrientation=0,this.alphaOffset=0,this.absolute=!1,this.alphaOffsetDevice=void 0,this.alphaOffsetScreen=void 0;let n=function(e){t.absolute||(t.deviceOrientation=e)},i=function(e){t.deviceOrientation=e,t.absolute=!0},r=function(){t.screenOrientation=window.orientation||0},a=function(){let e=new THREE.Vector3(0,0,1),t=new THREE.Euler,n=new THREE.Quaternion,i=new THREE.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5));return function(r,a,o,s,l){t.set(o,a,-s,"YXZ"),r.setFromEuler(t),r.multiply(i),r.multiply(n.setFromAxisAngle(e,-l))}}();this.connect=function(){r(),window.addEventListener("orientationchange",r,!1),window.addEventListener("deviceorientation",n,!1),window.addEventListener("deviceorientationabsolute",i,!1),t.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",r,!1),window.removeEventListener("deviceorientation",n,!1),window.removeEventListener("deviceorientationabsolute",i,!1),t.enabled=!1},this.update=function(){if(!1===t.enabled)return;let e;if(e=t.deviceOrientation,e){let n=this.getDirection()?THREE.Math.degToRad(this.getDirection())+t.alphaOffset:0,i=e.beta?THREE.Math.degToRad(e.beta):0,r=e.gamma?THREE.Math.degToRad(e.gamma):0,o=t.screenOrientation?THREE.Math.degToRad(t.screenOrientation):0;a(t.object.quaternion,n,i,r,o)}},this.dispose=()=>{t.disconnect()},this.iOSOrientationPermission=()=>{"function"==typeof DeviceOrientationEvent.requestPermission&&DeviceOrientationEvent.requestPermission().then((e=>{console.log(e)})).catch(console.error)},this.getDirection=()=>void 0!==t.deviceOrientation.webkitCompassHeading?t.deviceOrientation.webkitCompassHeading:t.deviceOrientation.alpha,this.getDirectionMap=()=>void 0!==t.deviceOrientation.webkitCompassHeading?360-t.deviceOrientation.webkitCompassHeading:t.deviceOrientation.alpha,this.connect()};const Us=Is;let Ds={STD_TELEP_DURATION:.03,HAND_R:0,HAND_L:1,MOBILE_DENSITY_F:.5,MAX_QUERY_DISTANCE:40,init:()=>{tc._renderer.xr.enabled=!0,tc._renderer.xr.setReferenceSpaceType("local"),tc.device.isMobile?tc._renderer.xr.setFramebufferScaleFactor(tc._stdpxd*Ds.MOBILE_DENSITY_F):tc._renderer.xr.setFramebufferScaleFactor(tc._stdpxd),Ds._bPresenting=!1,Ds.currSession=null,Ds._sessionType="immersive-vr",Ds._bReqPresenting=!1,Ds.rig=new THREE.Group,Ds.rig.add(tc.Nav._camera),tc._rootUI.add(Ds.rig),Ds._cam=void 0,Ds._currPos=Ds.rig.position,Ds._fromPos=new THREE.Vector3,Ds._reqPos=new THREE.Vector3,Ds.gControllers=void 0,Ds.controller0=void 0,Ds.controller1=void 0,Ds.controller0pos=new THREE.Vector3,Ds.controller1pos=new THREE.Vector3,Ds.controller0dir=new THREE.Vector3,Ds.controller1dir=new THREE.Vector3,Ds._lastPosR=void 0,Ds._lastPosL=void 0,Ds._pointerLineGeom=void 0,Ds._pointerLineMesh=void 0,Ds.gpad0=void 0,Ds.gpad1=void 0,Ds._urlHand=tc.PATH_RES+"models/hand/hand.glb",Ds._urlHTCViveController=tc.PATH_RES+"models/controllers/HTCViveController.glb",tc.on("XRsqueezeStart",(e=>{console.log("SQUEEZE START"),e===Ds.HAND_R&&(tc.Photon.setFocusStreaming(!0),console.log("SQUEEZEEEEE RIGHT START"))})),tc.on("XRsqueezeEnd",(e=>{console.log("SQUEEZE END"),e===Ds.HAND_R&&(console.log("SQUEEZEEEEE RIGHT END"),tc.Photon.setFocusStreaming(!1))})),tc.on("Photon_IDassigned",(e=>{let t=tc.getUINode("Rhand"),n=tc.getUINode("Lhand"),i=tc.MatHub.materials.avatars,r=i[e%i.length];n&&n.setMaterial(r),t&&t.setMaterial(r)}))},setSessionType:e=>{void 0!==e&&("immersive-vr"!==e&&"immersive-ar"!==e||(Ds._sessionType=e,console.log("Session type: "+e)))},isPresenting:()=>Ds._bPresenting,teleportOnQueriedPoint:()=>{if(!tc.Nav.currentQueryValidForLocomotion())return!1;const e=tc._queryDataScene.p;return tc.Nav.requestPOV((new tc.POV).setPosition(e.x,e.y+tc.userHeight,e.z),Ds.STD_TELEP_DURATION),!0},setupQueryRay:e=>{void 0!==e&&(Ds.controller0?e.set(Ds.controller0pos,Ds.controller0dir):e.set(tc.Nav.getCurrentEyeLocation(),tc.Nav.getCurrentDirection()))},setRefSpaceLocation:e=>{Ds.rig.position.copy(e)},_setupControllerR:(e,t)=>{Ds.controller0||(Ds.controller0=e,console.log("R controllers"),e.addEventListener("selectstart",(e=>{const t=Date.now();if(t-tc._lastTimeStamp<=300&&tc.T1Click)tc._mainClick=!1,tc.T1Click=!1,tc.T2Click=!0;else if(t-tc._lastTimeStamp<=300&&tc.T2Click)tc._mainClick=!1,tc.T2Click=!1,tc.T3Click=!0;else if(t-tc._lastTimeStamp<=300&&tc.T3Click)tc._mainClick=!1,tc.T3Click=!1,tc.T4Click=!0;else if(tc._mainClick=!0,tc.T1Click=!0,tc._isXRDragging=!0,tc.T2Click=!1,tc.T3Click=!1,tc.T4Click=!1,tc._startInterval=!0,tc._hoveredUI){const e=tc.getUINode(tc._hoveredUI);tc._dragControls.dispatchEvent({type:"drag",object:e})}tc._lastTimeStamp=t,tc._startInterval&&(tc._startInterval=!1,setTimeout((()=>{if(tc.T1Click)tc.fireEvent("XRselectStart",Ds.HAND_R),tc.T1Click=!1;else if(tc.T2Click){if(HATHOR._actState===HATHOR.SELECTION_EDITNODES){console.log(`HOVERED NODE: ${tc._hoveredSceneNode}`);const e=tc.getSceneNode(tc._hoveredSceneNode);e.editable&&(e.setNowEditing(!0),tc.actualEditingNode=e)}else{const e=new MouseEvent("dblclick",{bubbles:!0,cancelable:!0,view:window});tc._renderer.domElement.dispatchEvent(e),tc.fireEvent("XRdblClick",Ds.HAND_R)}tc.T2Click=!1}else tc.T3Click?(console.log("THREE CLICKS"),tc.fireEvent("XRcancelTask",Ds.HAND_R),tc.T3Click=!1):tc.T4Click?(console.log("FOUR CLICKS"),tc.T4Click=!1):console.log("NO CLICK");tc._firstTriggerClick=!1}),900))})),e.addEventListener("selectend",(()=>{if(tc._mainClick=!1,tc._isXRDragging=!1,tc._hoveredUI){const e=tc.getUINode(tc._hoveredUI);tc._dragControls.dispatchEvent({type:"dragend",object:e})}if(tc.SemFactory.nowAnnotating){tc.SemFactory.newAnnotation(),tc.Photon.fireEvent("StopActualAnnotation");let e={semanticgraph:{}};if(e.semanticgraph.nodes={},e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid]={},e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid].manualshapes=[],e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid].colors=[],e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid].widths=[],SemFactory.nowWritingAnnotation){const t=[];for(let e in SemFactory.annotationPoints[SemFactory.annotationsIndex-1]){const n=SemFactory.annotationPoints[SemFactory.annotationsIndex-1][e];t.push(n.x),t.push(n.y),t.push(n.z)}e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid].manualshapes.push(t),e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid].colors.push(SemFactory.annotationColors[SemFactory.annotationsIndex-1]),e.semanticgraph.nodes[SemFactory.aPoints[SemFactory.annotationsIndex-1].nid].widths.push(SemFactory.annotationWidths[SemFactory.annotationsIndex-1]),e.semanticgraph.edges=tc.SceneHub.getJSONgraphEdges(tc.NTYPES.SEM),e.semanticgraph.edges["."].pop("manual_ann"+SemFactory.annotationsIndex),console.log("E: ",e),tc.SceneHub.sendEdit(e,tc.SceneHub.MODE_ADD);const n={action:"add_manual",point:SemFactory.annotationPoints[SemFactory.annotationsIndex-1],annId:SemFactory.aPoints[SemFactory.annotationsIndex-1].nid,color:SemFactory.annotationColors[SemFactory.annotationsIndex-1],width:SemFactory.annotationWidths[SemFactory.annotationsIndex-1],index:SemFactory.annotationsIndex-1,node:SemFactory.aPoints[SemFactory.annotationsIndex-1]};tc.undoStack.push(n)}else SemFactory.nowErasingAnnotation&&(console.log("E: ",e),tc.SceneHub.sendEdit(e,tc.SceneHub.MODE_DEL));tc.Photon.fireEvent("AFE_AddSceneEdit",e)}tc.fireEvent("XRselectEnd",Ds.HAND_R)})),e.addEventListener("select",(()=>{})),e.addEventListener("squeeze",(()=>{tc.fireEvent("XRsqueeze",Ds.HAND_R)})),e.addEventListener("squeezestart",(()=>{console.log("SQUEEZE START BASSO LIVELLO"),tc.fireEvent("XRsqueezeStart",Ds.HAND_R)})),e.addEventListener("squeezeend",(()=>{console.log("SQUEEZE END BASSO LIVELLO"),tc.fireEvent("XRsqueezeEnd",Ds.HAND_R)})),Ds.setupControllerUI(Ds.HAND_R,t),tc.fireEvent("XRcontrollerConnected",Ds.HAND_R))},_setupControllerL:(e,t)=>{Ds.controller1||(Ds.controller1=e,console.log("L controllers"),e.addEventListener("selectstart",(()=>{tc.fireEvent("XRselectStart",Ds.HAND_L)})),e.addEventListener("selectend",(()=>{tc.fireEvent("XRselectEnd",Ds.HAND_L)})),e.addEventListener("select",(()=>{tc.fireEvent("XRselect",Ds.HAND_L)})),e.addEventListener("squeezestart",(()=>{tc.fireEvent("XRsqueezeStart",Ds.HAND_L)})),e.addEventListener("squeezeend",(()=>{tc.fireEvent("XRsqueezeEnd",Ds.HAND_L)})),Ds.setupControllerUI(Ds.HAND_L,t),tc.fireEvent("XRcontrollerConnected",Ds.HAND_L))},setupSceneForAR:()=>{if("immersive-ar"!==Ds._sessionType)return;tc.recomputeSceneBounds();let e=tc.bounds.center;tc._rootVisible.position.x=-e.x,tc._rootVisible.position.y=-e.y,tc._rootVisible.position.z=-e.z,tc._rootSem.position.x=-e.x,tc._rootSem.position.y=-e.y,tc._rootSem.position.z=-e.z,tc.recomputeSceneBounds()},resetSceneOffsets:()=>{tc._rootVisible.position.set(0,0,0),tc._rootSem.position.set(0,0,0),tc.recomputeSceneBounds()},onSessionStarted:e=>{console.log("DENTRO VR"),Ds.currSession||(Ds._bReqPresenting=!1,e.addEventListener("end",Ds.onSessionEnded),e.isImmersive=!0,console.log(Ds._sessionType+" session started."),tc.MediaFlow.stopAllStreams(),"immersive-ar"===Ds._sessionType&&tc._renderer.xr.setReferenceSpaceType("local"),tc._renderer.xr.setSession(e).then((()=>{if(Ds.currSession=e,console.log(Ds.currSession),"immersive-ar"===Ds._sessionType)tc._mainRoot.background=null,tc._mMainPano&&(tc._mMainPano.visible=!1),tc._renderer.xr.getController(0)&&tc.device.isMobile&&(Ds.controller0=tc._renderer.xr.getController(0),Ds.gControllers.add(Ds.controller0));else{for(let e=0;e<2;e++){const t=tc._renderer.xr.getController(e);console.log("CONTROLLER: ",t),void 0===t||t.userData.bXRconfig||(t.visible=!1,t.userData.bXRconfig=!0,t.addEventListener("connected",(e=>{let n=e.data.handedness;t.gm=e.data.gamepad,console.log(e.data),console.log(e.data.handedness),console.log(n),"left"===n?(console.log("left"),Ds._setupControllerL(t,!0)):"right"===n?(console.log("right"),Ds._setupControllerR(t,!0)):(console.log("other"),tc.fireEvent("XRcontrollerConnected",Ds.HAND_R))})))}Ds.rig.add(tc.Nav._camera),Ds.setRefSpaceLocation(tc.Nav._currPOV.pos),console.log(Ds.currSession)}let t=tc._renderer.xr.getCamera(tc.Nav._camera);tc.Nav._updCamera(t),Ds._bPresenting=!0,tc.Nav._bInteracting=!1,console.log("XR now presenting"),tc.fireEvent("XRmode",!0),tc.toggleShadows(!1),tc.SUI.getSelectorRadius()>tc.FE.STD_SEL_RAD&&tc.SUI.setSelectorRadius(tc.FE.STD_SEL_RAD),tc._qSyncInt=2,tc.XPFNetwork.getNumXPFs()>0?tc.setQueryRange(0,100):tc.setQueryRange(0,Ds.MAX_QUERY_DISTANCE),tc.MRes.estimateTSErrorTarget(),setTimeout((()=>{tc.SUI.getSelectorRadius()>tc.FE.STD_SEL_RAD&&tc.SUI.setSelectorRadius(tc.FE.STD_SEL_RAD)}),2e3)})))},onSessionEnded:()=>{Ds.currSession.removeEventListener("end",Ds.onSessionEnded),Ds.currSession=null,Ds._bReqPresenting=!1,Ds._bPresenting=!1,tc.Nav._bInteracting=!1,"immersive-ar"===Ds._sessionType&&tc._mMainPano&&(tc._mMainPano.visible=!0),Ds.setRefSpaceLocation(new THREE.Vector3(0,0,0)),tc.fireEvent("XRmode",!1),tc._qSyncInt=1,tc.MediaFlow.stopAllStreams(),tc.Nav.requestHome(),tc.Nav._updCamera(),tc.setQueryRange(0,1/0),tc.MRes.estimateTSErrorTarget(),console.log("Quit XR")},toggle:e=>{if(Ds.setSessionType(e),tc.device.xrSupported[Ds._sessionType])if(null===Ds.currSession){let e={optionalFeatures:["local-floor","bounded-floor","hand-tracking","high-refresh-rate"]};"immersive-ar"===Ds._sessionType&&(void 0===e.optionalFeatures&&(e.optionalFeatures=[]),e.optionalFeatures.push("light-estimation")),Ds._bReqPresenting=!0,navigator.xr.requestSession(Ds._sessionType,e).then(Ds.onSessionStarted)}else Ds.currSession.end()},setupControllerUI:(e,t)=>{let n;if(void 0===Ds.gControllers&&(Ds.gControllers=tc.createUINode(),Ds.gControllers.disablePicking(),Ds.rig.add(Ds.gControllers)),e===Ds.HAND_L||(Ds.gControllers.add(Ds.controller0),t&&(Ds._pointerLineGeom=new THREE.CylinderGeometry(.003,.003,1,4),Ds._pointerLineGeom.rotateX(-Math.PI/2),Ds._pointerLineGeom.translate(0,0,-.5),Ds._pointerLineMesh=new THREE.Mesh(Ds._pointerLineGeom,tc.MatHub.materials.controllerRay),Ds._pointerLineMesh.visible=!1,Ds.controller0.add(Ds._pointerLineMesh),n=tc.createUINode("Rhand").load(Ds._urlHTCViveController).setScale(.1,.1,.1).setRotation(void 0,-1.5,void 0).setMaterial(tc.MatHub.materials.controllerRay),console.log("x "+n.rotation.x+" y "+n.rotation.y+" z "+n.rotation.z),Ds.controller0.add(n))),void 0!==tc.Photon.uid&&t){let t=tc.MatHub.materials.avatars,i=t[tc.Photon.uid%t.length];e===Ds.HAND_L?undefined.setMaterial(i):n.setMaterial(i)}},getControllerSpace:e=>{1===e?Ds.getControllerGrip(1):Ds.getControllerGrip(0)},getControllerWorldLocation:e=>1===e?Ds.controller1pos:Ds.controller0pos,getControllerWorldDirection:e=>1===e?Ds.controller1dir:Ds.controller0dir,_deltaMotionController:e=>{if(e===Ds.HAND_L&&void 0===Ds._lastPosL)return;if(e===Ds.HAND_R&&void 0===Ds._lastPosR)return;let t=e===Ds.HAND_L?Ds.controller1pos:Ds.controller0pos,n=e===Ds.HAND_L?Ds._lastPosL:Ds._lastPosR;THREE.Vector3(t.x-n.x,t.y-n.y,t.z-n.z).lengthSq(),e===Ds.HAND_L?Ds._lastPosL=t:Ds._lastPosR=t},update:()=>{Ds.controller0&&Ds.controller0.visible&&(Ds.controller0.getWorldPosition(Ds.controller0pos),Ds.controller0.getWorldDirection(Ds.controller0dir),Ds.controller0dir.negate()),Ds.controller1&&Ds.controller1.visible&&(Ds.controller1.getWorldPosition(Ds.controller1pos),Ds.controller1.getWorldDirection(Ds.controller1dir),Ds.controller1dir.negate())},getAxisValue:e=>{let t=new THREE.Vector2(0,0),n=e===Ds.HAND_L?Ds.controller1:Ds.controller0;if(void 0===n)return t;if(void 0===n.gm||void 0===n.gm.axes)return t;let i=n.gm.axes[0],r=n.gm.axes[2],a=n.gm.axes[1],o=n.gm.axes[3];return t.x=i>0?-i:r,t.y=a>0?a:-o,t}};const Fs=Ds,Hs=class extends t{constructor(e,t=1,n=1,i=1){super(e,ATON.NTYPES.UI),this.uiid=e,this.width=.1*t,this.height=.1*n,this.baseColor=ATON.MatHub.colors.black,this.switchColor=ATON.MatHub.colors.green,this.fsize=i,this.baseOpacity=1,this.hoverOpacity=.5,this._bSwitched=!1,this.container=new ThreeMeshUI.Block({width:this.width,height:this.height,padding:0,margin:0,borderRadius:.02,backgroundColor:this.baseColor,backgroundOpacity:this.baseOpacity,fontFamily:ATON.SUI.PATH_FONT_JSON,fontTexture:ATON.SUI.PATH_FONT_TEX,justifyContent:"center",textAlign:"center"}),this.container.frame.material.side=THREE.DoubleSide,this.add(this.container),this.uiText=new ThreeMeshUI.Text({content:"",fontSize:.02*i,fontColor:ATON.MatHub.colors.white}),this.container.add(this.uiText);let r=this.height-.02,a=this.height-.02;this._trigger=new THREE.Mesh(new THREE.PlaneGeometry(r,a,2),ATON.MatHub.getMaterial("fullyTransparent")),this._trigger.position.set(0,0,.002),this.add(this._trigger),this.setOnHover((()=>{this.setBackgroundOpacity(this.hoverOpacity),ATON.AudioHub.playOnceGlobally(ATON.PATH_RES+"audio/blop.mp3")})),this.setOnLeave((()=>{this.setBackgroundOpacity(this.baseOpacity)})),this.enablePicking(),ThreeMeshUI.update()}getDimensions(){return[this.width,this.height]}getUiid(){return this.uiid}getBSwitched(){return this._bSwitched}getBaseColor(){return this.container.backgroundColor}setBaseColor(e){return this.baseColor=e,this._bSwitched||this.container.set({backgroundColor:this.baseColor}),ThreeMeshUI.update(),this}setHoverOpacity(e){return this.container.set({backgroundOpacity:e}),ThreeMeshUI.update(),this}setSwitchColor(e){return this.switchColor=e,this._bSwitched&&this.container.set({backgroundColor:this.switchColor}),ThreeMeshUI.update(),this}setBackgroundOpacity(e){return this.container.set({backgroundOpacity:e}),ThreeMeshUI.update(),this}setText(e){return this.uiText.set({content:e}),ThreeMeshUI.update(),this}setTextColor(e){return this.uiText.set({fontColor:e}),ThreeMeshUI.update(),this}switch(e){return this._bSwitched=e,e?this.container.set({backgroundColor:this.switchColor}):this.container.set({backgroundColor:this.baseColor}),ThreeMeshUI.update(),this}setIcon(e,t){return ATON.Utils.textureLoader.load(e,(e=>{this._trigger.material=new THREE.MeshStandardMaterial({map:e,transparent:!0,depthWrite:!0}),t&&(this.setBackgroundOpacity(0),this.hoverOpacity=0),this.uiText.position.set(0,-.065,0),this.uiText.set({fontSize:this.fsize})})),ThreeMeshUI.update(),this}},Bs=class extends t{constructor(e,t,n,i=.03){super(e,ATON.NTYPES.UI),this.uiid=e,this.baseColor=ATON.MatHub.colors.black,this.baseOpacity=.5,this.width=t||.2,this.height=n||.05,this.textAlign="center",this.justifyContent="center",this.borderRadius=.03,this.hoverOpacity=.5,this.container=new ThreeMeshUI.Block({width:this.width,height:this.height,padding:.001,borderRadius:this.borderRadius,backgroundColor:this.baseColor,backgroundOpacity:this.baseOpacity,fontFamily:ATON.SUI.PATH_FONT_JSON,fontTexture:ATON.SUI.PATH_FONT_TEX,justifyContent:this.justifyContent,textAlign:this.textAlign}),this.container.frame.material.side=THREE.DoubleSide,this.container.frame.material.uniforms.u_borderRadiusBottomLeft.value=.1,this.container.frame.material.uniforms.u_opacity.value=1,this.add(this.container),this.uiText=new ThreeMeshUI.Text({content:"",fontSize:i,fontColor:ATON.MatHub.colors.white}),this.container.add(this.uiText),ThreeMeshUI.update(),this._trigger=void 0,this.setOnHover((()=>{this.setBackgroundOpacity(this.hoverOpacity)})),this.setOnLeave((()=>{this.setBackgroundOpacity(this.baseOpacity)})),this.enablePicking()}visibilityContainerChildren(e){console.log("PRIMA",this.container.children),this.container.children.forEach((t=>{t.visible=e})),console.log("DOPO",this.container.children)}setBaseOpacity(e){return this.container.set({backgroundOpacity:e}),ThreeMeshUI.update(),this}setHoverOpacity(e){return this.container.set({backgroundOpacity:e}),ThreeMeshUI.update(),this}setBorderRadius(e){return this.borderRadius=e,ThreeMeshUI.update(),this}setTextAlign(e){return this.textAlign=e,ThreeMeshUI.update(),this}setJustifyContent(e){return this.justifyContent=e,ThreeMeshUI.update(),this}getWidth(){return this.width}getHeight(){return this.height}getDimensions(){return[this.width,this.height]}setWidth(e){return this.width=e,ThreeMeshUI.update(),this}setHeight(e){return this.height=e,ThreeMeshUI.update(),this}getUiid(){return this.uiid}getText(){return this.uiText.content}setIcon(e,t){return ATON.Utils.textureLoader.load(e,(e=>{this._trigger=new THREE.Mesh(new THREE.PlaneGeometry(this.width,this.height,2),ATON.MatHub.getMaterial("fullyTransparent")),this._trigger.position.set(0,0,.002),this.add(this._trigger),this._trigger.material=new THREE.MeshStandardMaterial({map:e,transparent:!0,depthWrite:!1}),t&&(this.setBackgroundOpacity(0),this.hoverOpacity=0),this.uiText.position.set(0,-.035,0)})),ThreeMeshUI.update(),this}setBaseColor(e){return this.baseColor=e,this.container.set({backgroundColor:this.baseColor}),ThreeMeshUI.update(),this}setTextColor(e){return this.uiText.set({fontColor:e}),ThreeMeshUI.update(),this}setBackgroundOpacity(e){return this.container.set({backgroundOpacity:e}),ThreeMeshUI.update(),this}setText(e){return this.uiText.set({content:e}),ThreeMeshUI.update(),this}setFontSize(e){return this.uiText.set({fontSize:e}),ThreeMeshUI.update(),this}},ks=[[[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]}],[{width:.2,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Vs=[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],zs=[[[{width:1/12,chars:[{lowerCase:"й",upperCase:"Й"},{lowerCase:"q",upperCase:"Q"}]},{width:1/12,chars:[{lowerCase:"ц",upperCase:"Ц"},{lowerCase:"w",upperCase:"W"}]},{width:1/12,chars:[{lowerCase:"у",upperCase:"У"},{lowerCase:"e",upperCase:"E"}]},{width:1/12,chars:[{lowerCase:"к",upperCase:"К"},{lowerCase:"r",upperCase:"R"}]},{width:1/12,chars:[{lowerCase:"е",upperCase:"Е"},{lowerCase:"t",upperCase:"T"}]},{width:1/12,chars:[{lowerCase:"н",upperCase:"Н"},{lowerCase:"y",upperCase:"Y"}]},{width:1/12,chars:[{lowerCase:"г",upperCase:"Г"},{lowerCase:"u",upperCase:"U"}]},{width:1/12,chars:[{lowerCase:"ш",upperCase:"Ш"},{lowerCase:"i",upperCase:"I"}]},{width:1/12,chars:[{lowerCase:"щ",upperCase:"Щ"},{lowerCase:"o",upperCase:"O"}]},{width:1/12,chars:[{lowerCase:"з",upperCase:"З"},{lowerCase:"p",upperCase:"P"}]},{width:1/12,chars:[{lowerCase:"х",upperCase:"Х"},{lowerCase:"{",upperCase:"["}]},{width:1/12,chars:[{lowerCase:"ъ",upperCase:"Ъ"},{lowerCase:"}",upperCase:"]"}]}],[{width:1/12,chars:[{lowerCase:"ф",upperCase:"Ф"},{lowerCase:"a",upperCase:"A"}]},{width:1/12,chars:[{lowerCase:"ы",upperCase:"Ы"},{lowerCase:"s",upperCase:"S"}]},{width:1/12,chars:[{lowerCase:"в",upperCase:"В"},{lowerCase:"d",upperCase:"D"}]},{width:1/12,chars:[{lowerCase:"а",upperCase:"А"},{lowerCase:"f",upperCase:"F"}]},{width:1/12,chars:[{lowerCase:"п",upperCase:"П"},{lowerCase:"g",upperCase:"G"}]},{width:1/12,chars:[{lowerCase:"р",upperCase:"Р"},{lowerCase:"h",upperCase:"H"}]},{width:1/12,chars:[{lowerCase:"о",upperCase:"О"},{lowerCase:"j",upperCase:"J"}]},{width:1/12,chars:[{lowerCase:"л",upperCase:"Л"},{lowerCase:"k",upperCase:"K"}]},{width:1/12,chars:[{lowerCase:"д",upperCase:"Д"},{lowerCase:"l",upperCase:"L"}]},{width:1/12,chars:[{lowerCase:"ж",upperCase:"Ж"},{lowerCase:":",upperCase:";"}]},{width:1/12,chars:[{lowerCase:"э",upperCase:"Э"},{lowerCase:'"',upperCase:"'"}]},{width:1/12,chars:[{lowerCase:"ё",upperCase:"Ё"},{lowerCase:"|",upperCase:"\\"}]}],[{width:.125,command:"shift",chars:[{icon:"shift"}]},{width:1/12,chars:[{lowerCase:"я",upperCase:"Я"},{lowerCase:"z",upperCase:"Z"}]},{width:1/12,chars:[{lowerCase:"ч",upperCase:"Ч"},{lowerCase:"x",upperCase:"X"}]},{width:1/12,chars:[{lowerCase:"с",upperCase:"С"},{lowerCase:"c",upperCase:"C"}]},{width:1/12,chars:[{lowerCase:"м",upperCase:"М"},{lowerCase:"v",upperCase:"V"}]},{width:1/12,chars:[{lowerCase:"и",upperCase:"И"},{lowerCase:"b",upperCase:"B"}]},{width:1/12,chars:[{lowerCase:"т",upperCase:"Т"},{lowerCase:"n",upperCase:"N"}]},{width:1/12,chars:[{lowerCase:"ь",upperCase:"Ь"},{lowerCase:"m",upperCase:"M"}]},{width:1/12,chars:[{lowerCase:"б",upperCase:"Б"},{lowerCase:",",upperCase:""}]},{width:1/12,chars:[{lowerCase:"ю",upperCase:"Ю"},{lowerCase:".",upperCase:""}]},{width:.125,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.3,command:"switch",chars:[{lowerCase:"АБВ"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Gs=[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"ü",upperCase:"Ü"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"ö",upperCase:"Ö"}]},{width:1/11,chars:[{lowerCase:"ä",upperCase:"Ä"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Ws=[[[{width:.1,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"l",upperCase:"L"}]},{width:.1,chars:[{lowerCase:"ñ",upperCase:"Ñ"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],Xs=[[[{width:.1,chars:[{lowerCase:";",upperCase:":"},{lowerCase:"q",upperCase:"Q"}]},{width:.1,chars:[{lowerCase:"ς",upperCase:"ς"},{lowerCase:"w",upperCase:"W"}]},{width:.1,chars:[{lowerCase:"ε",upperCase:"Ε"},{lowerCase:"e",upperCase:"E"}]},{width:.1,chars:[{lowerCase:"ρ",upperCase:"Ρ"},{lowerCase:"r",upperCase:"R"}]},{width:.1,chars:[{lowerCase:"τ",upperCase:"Τ"},{lowerCase:"t",upperCase:"T"}]},{width:.1,chars:[{lowerCase:"υ",upperCase:"Υ"},{lowerCase:"y",upperCase:"Y"}]},{width:.1,chars:[{lowerCase:"θ",upperCase:"Θ"},{lowerCase:"u",upperCase:"U"}]},{width:.1,chars:[{lowerCase:"ι",upperCase:"Ι"},{lowerCase:"i",upperCase:"I"}]},{width:.1,chars:[{lowerCase:"ο",upperCase:"Ο"},{lowerCase:"o",upperCase:"O"}]},{width:.1,chars:[{lowerCase:"π",upperCase:"Π"},{lowerCase:"p",upperCase:"P"}]}],[{width:.1,chars:[{lowerCase:"α",upperCase:"Α"},{lowerCase:"a",upperCase:"A"}]},{width:.1,chars:[{lowerCase:"σ",upperCase:"Σ"},{lowerCase:"s",upperCase:"S"}]},{width:.1,chars:[{lowerCase:"δ",upperCase:"Δ"},{lowerCase:"d",upperCase:"D"}]},{width:.1,chars:[{lowerCase:"φ",upperCase:"Φ"},{lowerCase:"f",upperCase:"F"}]},{width:.1,chars:[{lowerCase:"γ",upperCase:"Γ"},{lowerCase:"g",upperCase:"G"}]},{width:.1,chars:[{lowerCase:"η",upperCase:"Η"},{lowerCase:"h",upperCase:"H"}]},{width:.1,chars:[{lowerCase:"ξ",upperCase:"Ξ"},{lowerCase:"j",upperCase:"J"}]},{width:.1,chars:[{lowerCase:"κ",upperCase:"Κ"},{lowerCase:"k",upperCase:"K"}]},{width:.1,chars:[{lowerCase:"λ",upperCase:"Λ"},{lowerCase:"l",upperCase:"L"}]}],[{width:.15,command:"shift",chars:[{icon:"shift"}]},{width:.1,chars:[{lowerCase:"ζ",upperCase:"Ζ"},{lowerCase:"z",upperCase:"Z"}]},{width:.1,chars:[{lowerCase:"χ",upperCase:"Χ"},{lowerCase:"x",upperCase:"X"}]},{width:.1,chars:[{lowerCase:"ψ",upperCase:"Ψ"},{lowerCase:"c",upperCase:"C"}]},{width:.1,chars:[{lowerCase:"ω",upperCase:"Ω"},{lowerCase:"v",upperCase:"V"}]},{width:.1,chars:[{lowerCase:"β",upperCase:"Β"},{lowerCase:"b",upperCase:"B"}]},{width:.1,chars:[{lowerCase:"ν",upperCase:"Ν"},{lowerCase:"n",upperCase:"N"}]},{width:.1,chars:[{lowerCase:"μ",upperCase:"Μ"},{lowerCase:"m",upperCase:"M"}]},{width:.15,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"set"}]},{width:.15,command:"switch",chars:[{lowerCase:".?12"}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.15,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]],qs=[[[{width:1/11,chars:[{lowerCase:"q",upperCase:"Q"}]},{width:1/11,chars:[{lowerCase:"w",upperCase:"W"}]},{width:1/11,chars:[{lowerCase:"e",upperCase:"E"}]},{width:1/11,chars:[{lowerCase:"r",upperCase:"R"}]},{width:1/11,chars:[{lowerCase:"t",upperCase:"T"}]},{width:1/11,chars:[{lowerCase:"y",upperCase:"Y"}]},{width:1/11,chars:[{lowerCase:"u",upperCase:"U"}]},{width:1/11,chars:[{lowerCase:"i",upperCase:"I"}]},{width:1/11,chars:[{lowerCase:"o",upperCase:"O"}]},{width:1/11,chars:[{lowerCase:"p",upperCase:"P"}]},{width:1/11,chars:[{lowerCase:"å",upperCase:"Å"}]}],[{width:1/11,chars:[{lowerCase:"a",upperCase:"A"}]},{width:1/11,chars:[{lowerCase:"s",upperCase:"S"}]},{width:1/11,chars:[{lowerCase:"d",upperCase:"D"}]},{width:1/11,chars:[{lowerCase:"f",upperCase:"F"}]},{width:1/11,chars:[{lowerCase:"g",upperCase:"G"}]},{width:1/11,chars:[{lowerCase:"h",upperCase:"H"}]},{width:1/11,chars:[{lowerCase:"j",upperCase:"J"}]},{width:1/11,chars:[{lowerCase:"k",upperCase:"K"}]},{width:1/11,chars:[{lowerCase:"l",upperCase:"L"}]},{width:1/11,chars:[{lowerCase:"æ",upperCase:"Æ"}]},{width:1/11,chars:[{lowerCase:"ø",upperCase:"Ø"}]}],[{width:2/11,command:"shift",chars:[{icon:"shift"}]},{width:1/11,chars:[{lowerCase:"z",upperCase:"Z"}]},{width:1/11,chars:[{lowerCase:"x",upperCase:"X"}]},{width:1/11,chars:[{lowerCase:"c",upperCase:"C"}]},{width:1/11,chars:[{lowerCase:"v",upperCase:"V"}]},{width:1/11,chars:[{lowerCase:"b",upperCase:"B"}]},{width:1/11,chars:[{lowerCase:"n",upperCase:"N"}]},{width:1/11,chars:[{lowerCase:"m",upperCase:"M"}]},{width:2/11,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]],[[{width:.1,chars:[{lowerCase:"1"}]},{width:.1,chars:[{lowerCase:"2"}]},{width:.1,chars:[{lowerCase:"3"}]},{width:.1,chars:[{lowerCase:"4"}]},{width:.1,chars:[{lowerCase:"5"}]},{width:.1,chars:[{lowerCase:"6"}]},{width:.1,chars:[{lowerCase:"7"}]},{width:.1,chars:[{lowerCase:"8"}]},{width:.1,chars:[{lowerCase:"9"}]},{width:.1,chars:[{lowerCase:"0"}]}],[{width:.1,chars:[{lowerCase:"@"}]},{width:.1,chars:[{lowerCase:"#"}]},{width:.1,chars:[{lowerCase:"|"}]},{width:.1,chars:[{lowerCase:"_"}]},{width:.1,chars:[{lowerCase:"&"}]},{width:.1,chars:[{lowerCase:"-"}]},{width:.1,chars:[{lowerCase:"+"}]},{width:.1,chars:[{lowerCase:"("}]},{width:.1,chars:[{lowerCase:")"}]},{width:.1,chars:[{lowerCase:"/"}]}],[{width:.1,chars:[{lowerCase:"="}]},{width:.1,chars:[{lowerCase:"*"}]},{width:.1,chars:[{lowerCase:'"'}]},{width:.1,chars:[{lowerCase:"'"}]},{width:.1,chars:[{lowerCase:":"}]},{width:.1,chars:[{lowerCase:";"}]},{width:.1,chars:[{lowerCase:"!"}]},{width:.1,chars:[{lowerCase:"?"}]},{width:.2,command:"backspace",chars:[{icon:"backspace"}]}],[{width:.2,command:"switch-set",chars:[{lowerCase:"eng"}]},{width:.2,command:"switch",chars:[{lowerCase:".?12"}]},{width:.1,chars:[{lowerCase:","}]},{width:.4,command:"space",chars:[{icon:"space"}]},{width:.1,chars:[{lowerCase:"."}]},{width:.2,command:"enter",chars:[{icon:"enter"}]}]]];let js=null;function Ys(...e){if(!js)throw new Error("Cannot use mixins with Base null");let t=js;js=null;let n,i=e.length;for(;--i>=0;)n=e[i],t=n(t);return t}Ys.withBase=e=>(js=e,Ys);const $s="row",Ks="column",Zs="start",Js="center",Qs=[Zs,Js,"end","stretch","top","right","bottom","left"],el=["top","right","bottom","left"],tl="start",nl="center",il="end",rl="space-around",al="space-between",ol="space-evenly";const sl=[tl,nl,il,rl,al,ol];function ll(e){return class extends e{constructor(e){super(e),this.isBoxComponent=!0,this.childrenPos={}}getInnerWidth(){const e=this.getContentDirection();switch(e){case"row":case"row-reverse":return this.width-(2*this.padding||0)||this.getChildrenSideSum("width");case"column":case"column-reverse":return this.getHighestChildSizeOn("width");default:console.error(`Invalid contentDirection : ${e}`)}}getInnerHeight(){const e=this.getContentDirection();switch(e){case"row":case"row-reverse":return this.getHighestChildSizeOn("height");case"column":case"column-reverse":return this.height-(2*this.padding||0)||this.getChildrenSideSum("height");default:console.error(`Invalid contentDirection : ${e}`)}}getChildrenSideSum(e){return this.childrenBoxes.reduce(((t,n)=>{const i=2*n.margin||0;return t+("width"===e?n.getWidth()+i:n.getHeight()+i)}),0)}setPosFromParentRecords(){this.parentUI&&this.parentUI.childrenPos[this.id]&&(this.position.x=this.parentUI.childrenPos[this.id].x,this.position.y=this.parentUI.childrenPos[this.id].y)}computeChildrenPosition(){if(this.children.length>0){const e=this.getContentDirection();let t;switch(e){case $s:t=-this.getInnerWidth()/2;break;case"row-reverse":t=this.getInnerWidth()/2;break;case Ks:t=this.getInnerHeight()/2;break;case"column-reverse":t=-this.getInnerHeight()/2}const n=-Math.sign(t);!function(e,t,n,i){let r=n,a="getWidth",o="x",s="y";0===t.indexOf(Ks)&&(a="getHeight",o="y",s="x");for(let t=0;t<e.childrenBoxes.length;t++){const n=e.childrenBoxes[t],l=n.id,c=n[a](),d=n.margin||0;r+=d*i,e.childrenPos[l]={[o]:r+c/2*i,[s]:0},r+=i*(c+d)}}(this,e,t,n),function(e,t,n,i){const r=e.getJustifyContent();-1===sl.indexOf(r)&&console.warn(`justifyContent === '${r}' is not supported`);const a=0===t.indexOf("row")?"width":"height",o=e.getChildrenSideSum(a),s=("width"===a?e.getInnerWidth():e.getInnerHeight())-o,l=function(e,t){switch(e){case il:return t;case nl:return t/2}return 0}(r,2*n-o*Math.sign(n)),c=function(e,t,n,i){const r=Array(e.length).fill(0);if(t>0)switch(n){case al:if(e.length>1){const n=t/(e.length-1)*i;r[0]=0;for(let t=1;t<e.length;t++)r[t]=n*t}break;case ol:if(e.length>1){const n=t/(e.length+1)*i;for(let t=0;t<e.length;t++)r[t]=n*(t+1)}break;case rl:if(e.length>1){const n=t/e.length*i,a=n/2;r[0]=a;for(let t=1;t<e.length;t++)r[t]=a+n*t}}return r}(e.childrenBoxes,s,r,i),d=0===t.indexOf("row")?"x":"y";e.childrenBoxes.forEach(((t,n)=>{e.childrenPos[t.id][d]-=l-c[n]}))}(this,e,t,n),function(e,t){const n=e.getAlignItems();-1===Qs.indexOf(n)&&console.warn(`alignItems === '${n}' is not supported`);let i="getWidth",r="x";0===t.indexOf($s)&&(i="getHeight",r="y");const a=e[i]()/2-(e.padding||0);e.childrenBoxes.forEach((o=>{let s;switch(n){case"end":case"right":case"bottom":s=0===t.indexOf($s)?-a+o[i]()/2+(o.margin||0):a-o[i]()/2-(o.margin||0);break;case Zs:case"left":case"top":s=0===t.indexOf($s)?a-o[i]()/2-(o.margin||0):-a+o[i]()/2+(o.margin||0)}e.childrenPos[o.id][r]=s||0}))}(this,e)}}getHighestChildSizeOn(e){return this.childrenBoxes.reduce(((t,n)=>{const i=n.margin||0,r="width"===e?n.getWidth()+2*i:n.getHeight()+2*i;return Math.max(t,r)}),0)}getWidth(){return this.parentUI&&"stretch"===this.parentUI.getAlignItems()&&-1!==this.parentUI.getContentDirection().indexOf("column")?this.parentUI.getWidth()-(2*this.parentUI.padding||0):this.width||this.getInnerWidth()+(2*this.padding||0)}getHeight(){return this.parentUI&&"stretch"===this.parentUI.getAlignItems()&&-1!==this.parentUI.getContentDirection().indexOf("row")?this.parentUI.getHeight()-(2*this.parentUI.padding||0):this.height||this.getInnerHeight()+(2*this.padding||0)}}}const cl=new class extends Wo{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Vo.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout((()=>{t&&t(r),this.manager.itemEnd(e)}),0),r;if(void 0!==Xo[e])return void Xo[e].push({onLoad:t,onProgress:n,onError:i});Xo[e]=[],Xo[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,s=this.responseType;fetch(a).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=Xo[e],i=t.body.getReader(),r=t.headers.get("Content-Length")||t.headers.get("X-File-Size"),a=r?parseInt(r):0,o=0!==a;let s=0;const l=new ReadableStream({start(e){!function t(){i.read().then((({done:i,value:r})=>{if(i)e.close();else{s+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:o,loaded:s,total:a});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(i)}e.enqueue(r),t()}}))}()}});return new Response(l)}throw new qo(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(s){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,o)));case"json":return e.json();default:if(void 0===o)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(o),n=t&&t[1]?t[1].toLowerCase():void 0,i=new TextDecoder(n);return e.arrayBuffer().then((e=>i.decode(e)))}}})).then((t=>{Vo.add(e,t);const n=Xo[e];delete Xo[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onLoad&&i.onLoad(t)}})).catch((t=>{const n=Xo[e];if(void 0===n)throw this.manager.itemError(e),t;delete Xo[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}},dl=[],hl={},ul=new Yo,pl=[],ml={},fl={};function gl(e){if(e._kernings)return;const t={};for(let n=0;n<e.kernings.length;n++){const i=e.kernings[n];0!==i.amount&&(t[String.fromCharCode(i.first,i.second)]=i.amount)}e._kernings=t}const _l={setFontFamily:function(e,t){"string"==typeof t?function(e,t){-1===dl.indexOf(t)&&(dl.push(t),cl.load(t,(e=>{const n=JSON.parse(e);gl(n),hl[t]=n;for(const e of Object.keys(fl))t===fl[e].jsonURL&&fl[e].component._updateFontFamily(n)}))),fl[e.id]||(fl[e.id]={component:e}),fl[e.id].jsonURL=t,hl[t]&&e._updateFontFamily(hl[t])}(e,t):(fl[e.id]||(fl[e.id]={component:e}),gl(t),fl[e.id].json=t,e._updateFontFamily(t))},setFontTexture:function(e,t){-1===pl.indexOf(t)&&(pl.push(t),ul.load(t,(e=>{e.generateMipmaps=!1,e.minFilter=O,e.magFilter=O,ml[t]=e;for(const n of Object.keys(fl))t===fl[n].textureURL&&fl[n].component._updateFontTexture(e)}))),fl[e.id]||(fl[e.id]={component:e}),fl[e.id].textureURL=t,ml[t]&&e._updateFontTexture(ml[t])},getFontOf:function e(t){const n=fl[t.id];return!n&&t.parentUI?e(t.parentUI):n},addFont:function(e,t,n){n.generateMipmaps=!1,n.minFilter=O,n.magFilter=O,dl.push(e),hl[e]=t,gl(t),n&&(pl.push(e),ml[e]=n)}};class vl{static requestUpdate(e,t,n,i){e.traverse((e=>{e.isUI&&(this.requestedUpdates[e.id]?(t&&(this.requestedUpdates[e.id].updateParsing=!0),n&&(this.requestedUpdates[e.id].updateLayout=!0),i&&(this.requestedUpdates[e.id].updateInner=!0)):this.requestedUpdates[e.id]={updateParsing:t,updateLayout:n,updateInner:i,needCallback:t||n||i})}))}static register(e){this.components.includes(e)||this.components.push(e)}static disposeOf(e){const t=this.components.indexOf(e);t>-1&&this.components.splice(t,1)}static update(){if(Object.keys(this.requestedUpdates).length>0){const e=this.components.filter((e=>!e.parentUI));e.forEach((e=>this.traverseParsing(e))),e.forEach((e=>this.traverseUpdates(e)))}}static traverseParsing(e){const t=this.requestedUpdates[e.id];t&&t.updateParsing&&(e.parseParams(),t.updateParsing=!1),e.childrenUIs.forEach((e=>this.traverseParsing(e)))}static traverseUpdates(e){const t=this.requestedUpdates[e.id];delete this.requestedUpdates[e.id],t&&t.updateLayout&&(t.updateLayout=!1,e.updateLayout()),t&&t.updateInner&&(t.updateInner=!1,e.updateInner()),e.childrenUIs.forEach((e=>{this.traverseUpdates(e)})),t&&t.needCallback&&e.onAfterUpdate()}}vl.components=[],vl.requestedUpdates={};const Sl={container:null,fontFamily:null,fontSize:.05,fontKerning:"normal",bestFit:"none",offset:.01,interLine:.01,breakOn:"- ,.:?!\n",whiteSpace:"pre-line",contentDirection:Ks,alignItems:Js,justifyContent:tl,textAlign:"center",textType:"MSDF",fontColor:new fn(16777215),fontOpacity:1,fontPXRange:4,fontSupersampling:!0,borderRadius:.01,borderWidth:0,borderColor:new fn("black"),borderOpacity:1,backgroundSize:"cover",backgroundColor:new fn(2236962),backgroundWhiteColor:new fn(16777215),backgroundOpacity:.8,backgroundOpaqueOpacity:1,getDefaultTexture:function(){if(!El){const e=document.createElement("canvas").getContext("2d");e.canvas.width=1,e.canvas.height=1,e.fillStyle="#ffffff",e.fillRect(0,0,1,1),El=new yo(e.canvas),El.isDefault=!0}return El},hiddenOverflow:!1,letterSpacing:0};let El;function wl(e){return class extends e{constructor(e){super(e),this.states={},this.currentState=void 0,this.isUI=!0,this.autoLayout=!0,this.childrenUIs=[],this.childrenBoxes=[],this.childrenTexts=[],this.childrenInlines=[],this.parentUI=null,this.addEventListener("added",this._rebuildParentUI),this.addEventListener("removed",this._rebuildParentUI)}getClippingPlanes(){const e=[];if(this.parentUI){if(this.isBlock&&this.parentUI.getHiddenOverflow()){const t=this.parentUI.getHeight()/2-(this.parentUI.padding||0),n=this.parentUI.getWidth()/2-(this.parentUI.padding||0),i=[new ui(new Ye(0,1,0),t),new ui(new Ye(0,-1,0),t),new ui(new Ye(1,0,0),n),new ui(new Ye(-1,0,0),n)];i.forEach((e=>{e.applyMatrix4(this.parent.matrixWorld)})),e.push(...i)}this.parentUI.parentUI&&e.push(...this.parentUI.getClippingPlanes())}return e}getHighestParent(){return this.parentUI?this.parent.getHighestParent():this}_getProperty(e){return void 0===this[e]&&this.parentUI?this.parent._getProperty(e):void 0!==this[e]?this[e]:Sl[e]}getFontSize(){return this._getProperty("fontSize")}getFontKerning(){return this._getProperty("fontKerning")}getLetterSpacing(){return this._getProperty("letterSpacing")}getFontTexture(){return void 0===this.fontTexture&&this.parentUI?this.parent._getProperty("fontTexture"):void 0!==this.fontTexture?this.fontTexture:Sl.getDefaultTexture()}getFontFamily(){return this._getProperty("fontFamily")}getBreakOn(){return this._getProperty("breakOn")}getWhiteSpace(){return this._getProperty("whiteSpace")}getTextAlign(){return this._getProperty("textAlign")}getTextType(){return this._getProperty("textType")}getFontColor(){return this._getProperty("fontColor")}getFontSupersampling(){return this._getProperty("fontSupersampling")}getFontOpacity(){return this._getProperty("fontOpacity")}getFontPXRange(){return this._getProperty("fontPXRange")}getBorderRadius(){return this._getProperty("borderRadius")}getBorderWidth(){return this._getProperty("borderWidth")}getBorderColor(){return this._getProperty("borderColor")}getBorderOpacity(){return this._getProperty("borderOpacity")}getContainer(){return!this.threeOBJ&&this.parent?this.parent.getContainer():this.threeOBJ?this:Sl.container}getParentsNumber(e){return e=e||0,this.parentUI?this.parentUI.getParentsNumber(e+1):e}getBackgroundOpacity(){return this.backgroundOpacity||0===this.backgroundOpacity?this.backgroundOpacity:Sl.backgroundOpacity}getBackgroundColor(){return this.backgroundColor||Sl.backgroundColor}getBackgroundTexture(){return this.backgroundTexture||Sl.getDefaultTexture()}getAlignContent(){return this.alignContent||Sl.alignContent}getAlignItems(){return this.alignItems||Sl.alignItems}getContentDirection(){return this.contentDirection||Sl.contentDirection}getJustifyContent(){return this.justifyContent||Sl.justifyContent}getInterLine(){return void 0===this.interLine?Sl.interLine:this.interLine}getOffset(){return void 0===this.offset?Sl.offset:this.offset}getBackgroundSize(){return void 0===this.backgroundSize?Sl.backgroundSize:this.backgroundSize}getHiddenOverflow(){return void 0===this.hiddenOverflow?Sl.hiddenOverflow:this.hiddenOverflow}getBestFit(){return void 0===this.bestFit?Sl.bestFit:this.bestFit}_rebuildChildrenLists(){this.childrenUIs=this.children.filter((e=>e.isUI)),this.childrenBoxes=this.children.filter((e=>e.isBoxComponent)),this.childrenInlines=this.children.filter((e=>e.isInline)),this.childrenTexts=this.children.filter((e=>e.isText))}_rebuildParentUI=()=>{this.parent&&this.parent.isUI?this.parentUI=this.parent:this.parentUI=null};add(){for(const e of Object.keys(arguments))arguments[e].isInline&&this.update(null,!0);const e=super.add(...arguments);return this._rebuildChildrenLists(),e}remove(){for(const e of Object.keys(arguments))arguments[e].isInline&&this.update(null,!0);const e=super.remove(...arguments);return this._rebuildChildrenLists(),e}update(e,t,n){vl.requestUpdate(this,e,t,n)}onAfterUpdate(){}_updateFontFamily(e){this.fontFamily=e,this.traverse((e=>{e.isUI&&e.update(!0,!0,!1)})),this.getHighestParent().update(!1,!0,!1)}_updateFontTexture(e){this.fontTexture=e,this.getHighestParent().update(!1,!0,!1)}set(e){let t,n,i;if(vl.register(this),e&&JSON.stringify(e)!==JSON.stringify({})){var r;e.alignContent&&(e.alignItems=e.alignContent,e.textAlign||(e.textAlign=e.alignContent),console.warn("`alignContent` property has been deprecated, please rely on `alignItems` and `textAlign` instead."),delete e.alignContent),e.alignItems&&(r=e.alignItems,-1!==el.indexOf(r)&&console.warn(`alignItems === '${r}' is deprecated and will be remove in 7.x.x. Fallback are 'start'|'end'`));for(const r of Object.keys(e))if(this[r]!=e[r])switch(r){case"content":case"fontSize":case"fontKerning":case"breakOn":case"whiteSpace":this.isText&&(t=!0),n=!0,this[r]=e[r];break;case"bestFit":this.isBlock&&(t=!0,n=!0),this[r]=e[r];break;case"width":case"height":case"padding":(this.isInlineBlock||this.isBlock&&"none"!=this.getBestFit())&&(t=!0),n=!0,this[r]=e[r];break;case"letterSpacing":case"interLine":this.isBlock&&"none"!=this.getBestFit()&&(t=!0),n=!0,this[r]=e[r];break;case"margin":case"contentDirection":case"justifyContent":case"alignContent":case"alignItems":case"textAlign":case"textType":n=!0,this[r]=e[r];break;case"fontColor":case"fontOpacity":case"fontSupersampling":case"offset":case"backgroundColor":case"backgroundOpacity":case"backgroundTexture":case"backgroundSize":case"borderRadius":case"borderWidth":case"borderColor":case"borderOpacity":i=!0,this[r]=e[r];break;case"hiddenOverflow":this[r]=e[r]}e.fontFamily&&_l.setFontFamily(this,e.fontFamily),e.fontTexture&&_l.setFontTexture(this,e.fontTexture),this.parentUI&&"none"!=this.parentUI.getBestFit()&&this.parentUI.update(!0,!0,!1),this.update(t,n,i),n&&this.getHighestParent().update(!1,!0,!1)}}setupState(e){this.states[e.state]={attributes:e.attributes,onSet:e.onSet}}setState(e){const t=this.states[e];t?e!==this.currentState&&(this.currentState=e,t.onSet&&t.onSet(),t.attributes&&this.set(t.attributes)):console.warn(`state "${e}" does not exist within this component:`,this.name)}clear(){this.traverse((e=>{vl.disposeOf(e),e.material&&e.material.dispose(),e.geometry&&e.geometry.dispose()}))}}}class xl extends(Ys.withBase($t)(ll,wl)){constructor(e){let t;if(e||(e={}),e.width||(e.width=1),e.height||(e.height=.4),e.margin||(e.margin=.003),e.padding||(e.padding=.01),super(e),this.currentPanel=0,this.isLowerCase=!0,this.charsetCount=1,e.language||navigator.language)switch(e.language||navigator.language){case"fr":case"fr-CH":case"fr-CA":t=ks;break;case"ru":this.charsetCount=2,t=zs;break;case"de":case"de-DE":case"de-AT":case"de-LI":case"de-CH":t=Gs;break;case"es":case"es-419":case"es-AR":case"es-CL":case"es-CO":case"es-ES":case"es-CR":case"es-US":case"es-HN":case"es-MX":case"es-PE":case"es-UY":case"es-VE":t=Ws;break;case"el":this.charsetCount=2,t=Xs;break;case"nord":t=qs;break;default:t=Vs}else t=Vs;this.keys=[],this.panels=t.map((t=>{let n=[];return t.map((t=>{let i=[];t.map((t=>{const n=t.chars[0].lowerCase||t.chars[0].icon||"undif";let r;if(r="space"===n?new ATON.SUI.Button(n+Math.random(),5,1,2):"enter"===n||"shift"===n||"backspace"===n?new ATON.SUI.Button(n+Math.random(),1.5,1,2).setMaterialById("black"):new ATON.SUI.Button(n+Math.random(),1,1,2),r.type="Key",r.info=t,r.info.input=n,"enter"===n&&e.enterTexture||"shift"===n&&e.shiftTexture||"backspace"===n&&e.backspaceTexture){const t=(()=>{switch(n){case"backspace":return e.backspaceTexture;case"enter":return e.enterTexture;case"shift":return e.shiftTexture;default:console.warn("There is no icon image for this key")}})();r.setIcon(t,!0)}else r.setText(n);this.keys.push(r),i.unshift(r)}));let r=ATON.SUI.createHorizontalContainer("keyboardContainer"+Math.random(),i).setBaseOpacity(.8).setPosition(void 0,void 0,.02);n.push(r)})),ATON.SUI.verticalPositions(n,"panel_block-"+Math.random(),.009)})),this.set(e)}toggleCase(){this.isLowerCase=!this.isLowerCase,this.keys.forEach((e=>{const t=e.info.chars[0]||e.info.chars[0],n=this.isLowerCase||!t.upperCase?t.lowerCase:t.upperCase;e.info.input=n,e.setText(n)}))}parseParams(){}updateLayout(){}updateInner(){}}let yl={SEMSHAPE_SPHERE:0,SEMSHAPE_CONVEX:1,POPUP_DT:500,STD_SEL_RAD:.05,_oldvY:void 0,realize:()=>{yl.PATH_RES_ICONS=tc.PATH_RES+"icons/",yl._bPopup=!1,yl._tPopup=void 0,yl.popupBlurBG=0,yl._userAuth={},yl._bControlLight=!1,yl._bControlSelScale=!1,yl._cLightDir=new THREE.Vector3,yl._auSemNode=void 0,yl._auSemNodePlaying=!1,yl._bReqHome=!1,yl._bPhotonSetup=!1,yl.urlParams=new URLSearchParams(window.location.search),yl._uiSetupBase(),yl._uiProfiles={},yl._uiCurrProfile=void 0,yl._selRanges=[.01,50],yl._selRefRadius=.5,tc.realize(),tc.on("Fullscreen",(e=>{yl.uiSwitchButton("fullscreen",e)}));let e=tc.FE.urlParams.get("d");e&&e>0&&(tc.setDefaultPixelDensity(e),tc.toggleAdaptiveDensity(!1));let t=tc.FE.urlParams.get("dd");t&&t>0&&tc.toggleAdaptiveDensity(!0),yl._canvas=tc._renderer.domElement,yl._bSem=!1,yl._bShowSemLabel=!0},_handleHomeReq:()=>{yl._bReqHome||tc.getRootScene().getBound().radius<=0||(yl._bReqHome=!0,void 0!==tc.Nav.homePOV?tc.Nav.requestHome(1):tc.Nav.computeAndRequestDefaultHome(.5))},addBasicLoaderEvents:()=>{tc.on("NodeRequestFired",(()=>{$("#idLoader").show()})),tc.on("PDFLoaded",(()=>{console.log("COMPLETE"),$("#idLoader").hide()})),tc.on("SceneJSONLoaded",(()=>{tc.SceneHub.getDescription()&&$("#btn-info").show(),void 0!==tc.Nav.homePOV&&tc.Nav.requestHome(1),tc.XPFNetwork._list.length>0&&void 0===tc.Nav.homePOV&&(tc.XPFNetwork.setHomeXPF(0),tc.XPFNetwork.requestTransitionByIndex(0))})),tc.on("AllNodeRequestsCompleted",(()=>{$("#idLoader").hide(),tc.CC.anyCopyrightFound()&&$("#btn-cc").show(),yl.computeSelectorRanges(),tc.SUI.setSelectorRadius(Math.min(yl.STD_SEL_RAD,yl._selRefRadius)),yl._handleHomeReq()})),tc.on("XR_support",(e=>{"immersive-vr"===e.type&&(e.v?$("#btn-vr").show():$("#btn-vr").hide())})),tc.on("SemanticNodeHover",(e=>{let t=tc.getSemanticNode(e);void 0!==t&&(yl.showSemLabel(e),yl._bSem=!0,t.highlight(),$("canvas").css({cursor:"crosshair"}),tc.SUI.gSemIcons&&tc.SUI.gSemIcons.hide())})),tc.on("SemanticNodeLeave",(e=>{let t=tc.getSemanticNode(e);void 0!==t&&(yl.hideSemLabel(),yl._bSem=!1,t.restoreDefaultMaterial(),$("canvas").css({cursor:"grab"}),tc.SUI.gSemIcons&&tc.SUI.gSemIcons.show())})),tc.on("SemanticMaskHover",(e=>{yl.showSemLabel(e),yl._bSem=!0,$("canvas").css({cursor:"crosshair"})})),tc.on("SemanticMaskLeave",(e=>{yl.hideSemLabel(),yl._bSem=!1,$("canvas").css({cursor:"grab"})})),tc.addUpdateRoutine(yl._update)},showSemLabel:e=>{yl._bShowSemLabel&&($("#idPopupLabel").html(e),$("#idPopupLabel").show(),tc.SUI.setInfoNodeText(e))},hideSemLabel:()=>{$("#idPopupLabel").hide(),$("#idPopupLabel").html("")},controlLight:e=>{yl._bControlLight=e,tc.Nav.setUserControl(!e)},controlSelectorScale:e=>{yl._bControlSelScale=e,tc._bPauseQuery=e,tc.Nav.setUserControl(!e)},attachGizmoToNode:e=>{if(void 0===tc._gizmo)return;let t=tc.getSceneNode(e);void 0!==t&&tc._gizmo.attach(t)},useMouseWheelToScaleSelector:e=>{void 0===e&&(e=.9),tc.on("MouseWheel",(t=>{if(tc._kModCtrl){let e=tc.Nav.getFOV();return t>0?e+=1:e-=1,void tc.Nav.setFOV(e)}if(tc._kModShift){let n=tc.SUI.mainSelector.scale.x;return t>0?n*=e:n/=e,n<yl._selRanges[0]&&(n=yl._selRanges[0]),n>yl._selRanges[1]&&(n=yl._selRanges[1]),void tc.SUI.setSelectorRadius(n)}}))},loadSceneID:(e,t)=>{if(void 0===e)return;let n=tc.PATH_RESTAPI_SCENE+e;tc.SceneHub.load(n,e,t)},loadSceneAddables:(e,t)=>{if(void 0===e)return;let n=e.split("/");const i=n[0]+"/models/"+n[1];let r=tc.PATH_RESTAPI_COLLECTION+i;tc.SceneHub.loadAddables(r,e,t)},_update:()=>{if(yl._bControlLight){const e=tc._screenPointerCoords.x,t=tc._screenPointerCoords.y;yl._cLightDir.x=-Math.cos(e*Math.PI),yl._cLightDir.y=4*-t,yl._cLightDir.z=-Math.sin(e*Math.PI),yl._cLightDir.normalize(),tc.setMainLightDirection(yl._cLightDir)}if(tc.XR._bPresenting){let e=tc.XR.getAxisValue(tc.XR.HAND_R);if(e.y){if(HATHOR._actState!==HATHOR.SELECTION_EDITNODES)if(e.y>0){let e=new THREE.Vector3,t=tc._renderer.xr.getCamera().cameras[0],n=tc.XR.rig.position;t.getWorldDirection(e),n.add(e.multiplyScalar(.1)),tc.Nav.requestPOV((new tc.POV).setPosition(n.x,n.y,n.z),0)}else{let e=new THREE.Vector3,t=tc._renderer.xr.getCamera().cameras[0],n=tc.XR.rig.position;t.getWorldDirection(e),n.add(e.multiplyScalar(-.1)),tc.Nav.requestPOV((new tc.POV).setPosition(n.x,n.y,n.z),0)}else if(void 0!==tc.actualEditingNode)switch(tc._lastSelectedEditMode){case"scale":tc.FE._oldvY&&(tc.FE._oldvY-e.y>0&&(tc.actualEditingNode.isImported?tc.actualEditingNode.parent.decrementScale():tc.actualEditingNode.decrementScale()),tc.FE._oldvY-e.y<0&&(tc.actualEditingNode.isImported?tc.actualEditingNode.parent.incrementScale():tc.actualEditingNode.incrementScale())),tc.FE._oldvY=e.y;break;case"rot":tc.FE._oldvY&&(tc.FE._oldvY-e.y>0&&(tc.actualEditingNode.isImported?tc.actualEditingNode.parent.negativeRot():tc.actualEditingNode.negativeRot()),tc.FE._oldvY-e.y<0&&(tc.actualEditingNode.isImported?tc.actualEditingNode.parent.positiveRot():tc.actualEditingNode.positiveRot())),tc.FE._oldvY=e.y}}else tc.FE._oldvY=void 0}else{if(tc.Nav.isTransitioning()||tc.Nav._bInteracting||tc._bPauseQuery)return void $("#idPopupLabel").hide();if(yl._bSem&&yl._bShowSemLabel){$("#idPopupLabel").show();let e=.5*tc._screenPointerCoords.x*window.innerWidth,t=.5*(1-tc._screenPointerCoords.y)*window.innerHeight;t-=55,$("#idPopupLabel").css("transform","translate("+e+"px, "+t+"px)")}else $("#idPopupLabel").hide()}},_uiSetupBase:()=>{$("#idPopup").click(yl.popupClose),$("#idLoader").html("<img src='"+tc.PATH_RES+"loader.png'>"),$("body").prepend("<div class='atonPopupLabelContainer'><div id='idPopupLabel' class='atonPopupLabel'></div></div>"),yl.hideSemLabel()},uiAddButton:(e,t,n,i)=>{let r,a;t.endsWith(".png")?(r=t,a=t.slice(0,-4)):(r=yl.PATH_RES_ICONS+t+".png",a=t);let o,s="btn-"+a;o="sketchfab-logo"===t?$("<div id='"+s+"' class='atonBTN' data-bs-toggle='offcanvas'\ndata-bs-target='#offcanvasBottom' aria-controls='offcanvasBottom'><img src='"+r+"'></div>"):$("<div id='"+s+"' class='atonBTN' ><img src='"+r+"'></div>"),$("#"+e).append(o),n&&o.click(n),i&&o.attr("title",i)},uiSwitchButton:(e,t)=>{t?$("#btn-"+e).addClass("switchedON"):$("#btn-"+e).removeClass("switchedON")},uiSetButtonHandler:(e,t)=>{$("#"+e).click(t)},uiAddButtonHome:e=>{yl.uiAddButton(e,"home",(()=>{tc.Nav.requestHome(.3)}),"Home viewpoint")},uiAddButtonBack:(e,t)=>{yl.uiAddButton(e,"back",(()=>{t&&t.length>1&&t.startsWith("http:")?tc.Utils.goToURL(t):history.back()}),"Go Back")},uiAddButtonFirstPerson:e=>{yl.uiAddButton(e,"fp",(()=>{tc.Nav.isFirstPerson()?(tc.Nav.setOrbitControl(),yl.uiSwitchButton("fp",!1)):(tc.Nav.setFirstPersonControl(),yl.uiSwitchButton("fp",!0))}),"First-person navigation mode"),tc.Nav.isFirstPerson()?yl.uiSwitchButton("fp",!0):yl.uiSwitchButton("fp",!1)},uiAddButtonFirstPersonWalking:e=>{yl.uiAddButton(e,"fpw",(()=>{tc.Nav.isFirstPerson()?(tc.Nav.setOrbitControl(),yl.uiSwitchButton("fpw",!1)):(tc.Nav.setFirstPersonControlWalking(),yl.uiSwitchButton("fpw",!0))}),"First-person walking navigation mode"),tc.Nav.isFirstPerson()?yl.uiSwitchButton("fpw",!0):yl.uiSwitchButton("fpw",!1)},uiAddButtonVR:e=>{tc.Utils.isConnectionSecure()&&(yl.uiAddButton(e,"vr",(()=>{tc.XR.toggle("immersive-vr")}),"Immersive VR mode"),tc.Utils.isVRsupported()||$("#btn-vr").hide())},setImmersiveVR:()=>{tc.Utils.isConnectionSecure()&&tc.Utils.isVRsupported()&&tc.XR.toggle("immersive-vr")},uiAddButtonAR:e=>{tc.Utils.isConnectionSecure()&&yl.uiAddButton(e,"ar",(()=>{if(tc.Utils.isARsupported())tc.XR.toggle("immersive-ar");else{let e="scene.usdz";tc.Utils.exportNode(tc.getRootScene(),e)}}),"Immersive AR mode")},uiAddButtonDeviceOrientation:e=>{tc.Utils.isConnectionSecure()&&tc.Utils.isMobile()&&(yl.uiAddButton(e,"devori",(()=>{tc.Nav.isDevOri()?(tc.Nav.restorePreviousNavMode(),yl.uiSwitchButton("devori",!1)):(tc.Nav.setDeviceOrientationControl(),yl.uiSwitchButton("devori",!0))}),"Device-orientation mode"),tc.Nav.isDevOri()?yl.uiSwitchButton("devori",!0):yl.uiSwitchButton("devori",!1))},uiAddButtonNav:e=>{yl.uiAddButton(e,"nav",(()=>{yl.popupNav()}),"Navigation")},uiAddButtonTalk:e=>{tc.Utils.isConnectionSecure()&&(yl.uiAddButton(e,"talk",yl.talkButtonPressed,"Talk ON/OFF"),tc.MediaFlow.isAudioRecording()?$("#btn-talk").addClass("atonBTN-rec"):$("#btn-talk").removeClass("atonBTN-rec"))},talkButtonPressed:()=>{tc.MediaFlow.isAudioRecording()?(tc.MediaFlow.stopAudioStreaming(),$("#btn-talk").removeClass("atonBTN-rec")):(tc.MediaFlow.startAudioStreaming(),$("#btn-talk").addClass("atonBTN-rec"))},uiAddButtonStreamFocus:e=>{yl.uiAddButton(e,"focus",(()=>{tc.Photon._bStreamFocus?(tc.Photon.setFocusStreaming(!1),$("#btn-focus").removeClass("atonBTN-rec")):(tc.Photon.setFocusStreaming(!0),$("#btn-focus").addClass("atonBTN-rec"))}),"Focus streaming ON/OFF"),tc.Photon._bStreamFocus?$("#btn-focus").addClass("atonBTN-rec"):$("#btn-focus").removeClass("atonBTN-rec")},uiAddButtonMainVideoPanoPlayPause:e=>{yl.uiAddButton(e,"playpause",(()=>{tc._vpanoPlaying?tc._elPanoVideo&&tc._elPanoVideo.pause():tc._elPanoVideo&&tc._elPanoVideo.play()}),"360 Video play/pause"),tc._elPanoVideo?$("#btn-playpause").show():$("#btn-playpause").hide()},uiAddButtonQR:e=>{yl.uiAddButton(e,"qr",yl.popupQR,"QR-code")},uiAddButtonScreenshot:e=>{yl.uiAddButton(e,"sshot",yl.popupScreenShot,"Screenshot")},uiAddButtonInfo:e=>{yl.uiAddButton(e,"info",tc.FE.popupSceneInfo,"Scene information")},uiAddButtonFullScreen:e=>{yl.uiAddButton(e,"fullscreen",(()=>{tc.toggleFullScreen()}),"Fullscreen"),yl.uiSwitchButton("fullscreen",tc.isFullscreen())},uiAddKeywordsArea:(e,t,n,i)=>{let r="";r+="Add keyword: <input id='idKWordInput' list='lkwords' type='text' maxlength='100' size='20'><div class='atonBTN atonBTN-green' id='idKWadd'><img src='"+tc.FE.PATH_RES_ICONS+"add.png'></div><br>",r+="<div id='idKWords'></div>",$("#"+e).html(r),yl.uiAttachInputFilterID("idKWordInput"),$.getJSON(tc.PATH_RESTAPI+"keywords/",(t=>{let n="<datalist id='lkwords'>";for(let e in t)n+="<option>"+e+"</option>";n+="</datalist>",$("#"+e).append(n)}));let a={},o=e=>{a[e]||(e=e.toLowerCase().trim(),$("#idKWordInput").val(""),a[e]=1,console.log("Added keyword "+e),n&&n(e),$("#idKWords").append("<div class='atonKeyword atonKeywordActivable' id='idkw-"+e+"'>"+e+"</div>"),$("#idkw-"+e).click((()=>{$("#idkw-"+e).remove(),a[e]=void 0,console.log("Removed keyword "+e),i&&i(e)})))};if(t)for(let e in t)o(t[e]);$("#idKWordInput").keypress((function(e){if(13!==(e.keyCode?e.keyCode:e.which))return;let t=$("#idKWordInput").val().toLowerCase().trim();!t||t.length<3||o(t)})),$("#idKWadd").click((()=>{let e=$("#idKWordInput").val().toLowerCase().trim();!e||e.length<3||o(e)}))},uiAttachCollectionItemsToInput:(e,t)=>{let n="";$("#"+e).attr("list",e+"-list"),$("#"+e).attr("name",e+"-list"),$.getJSON(tc.PATH_RESTAPI+"c/"+t+"/",(t=>{n+="<datalist id='"+e+"-list'>";for(let e in t){let i=t[e];n+="<option value='"+i+"'>"+i+"</option>"}n+="</datalist>",$("#"+e).html(n)}))},getPhotonClassFromID:e=>"atonPhotonU"+e%6,_setupPhotonEvents:()=>{yl._bPhotonSetup||(tc.on("Photon_IDassigned",(e=>{console.log("ID ASSIGNED"),$("#btn-photon").addClass(yl.getPhotonClassFromID(e)),tc.SUI.setSelectorColor(tc.Photon.color),tc.plight.color=tc.Photon.color,yl.checkAuth((e=>{void 0!==e.username&&tc.Photon.setUsername(e.username)}))})),tc.on("Photon_SceneState",(e=>{console.log("Photon_SceneState");let t=tc.Photon.getNumUsers();t>1?$("#idPhotonNumUsers").html(t):$("#idPhotonNumUsers").html(""),console.log("Users: "+t)})),tc.on("Photon_Disconnected",(()=>{console.log("Photon_Disconnected"),$("#btn-photon").attr("class","atonBTN"),tc.SUI.setSelectorColor(tc.MatHub.colors.defUI),tc.MediaFlow.stopAllStreams(),$("#idPhotonNumUsers").html("")})),yl._bPhotonSetup=!0)},uiAddButtonPhoton:e=>{yl.uiAddButton(e,"photon",yl.photonButtonPressed,"Photon (collaborative session)"),$("#btn-photon").append("<span id='idPhotonNumUsers' class='atonPhotonCounter'></span>"),yl._setupPhotonEvents(),void 0!==tc.Photon.uid?$("#btn-photon").addClass(yl.getPhotonClassFromID(tc.Photon.uid)):$("#btn-photon").attr("class","atonBTN")},photonButtonPressed:()=>{tc.Photon.isConnected()?yl.popupPhoton():tc.Photon.connect()},uiAddButtonUser:e=>{yl.uiAddButton(e,"user",(()=>{yl.popupUser()}),"User"),yl.checkAuth((e=>{void 0!==e.username?$("#btn-user").addClass("switchedON"):$("#btn-user").removeClass("switchedON")}))},uiAddButtonSketchfab:e=>{yl.uiAddButton(e,"sketchfab-logo",(()=>{console.log("sketchfab-tab")}),"Sketchfab Menu")},uiSetEditMode:(e,t)=>{tc.SceneHub.setEditMode(e),yl.uiSwitchButton("edit",e),tc._renderer.domElement,e?$("#"+t).addClass("atonToolbar-bg-edit"):$("#"+t).removeClass("atonToolbar-bg-edit")},uiAddButtonEditMode:e=>{yl.uiAddButton(e,"edit",(()=>{console.log("ADD EDIT BUTTON",e),yl.checkAuth((t=>{void 0!==t.username?(tc.SceneHub._bEdit?yl.uiSetEditMode(!1,e):yl.uiSetEditMode(!0,e),console.log("Persistent Edit Mode: "+tc.SceneHub._bEdit)):yl.popupUser()}))}),"Persistent Edit Mode"),tc.SceneHub._bEdit?yl.uiSwitchButton("edit",!0):yl.uiSwitchButton("edit",!1)},uiAddProfile:(e,t)=>{"function"==typeof t&&(yl._uiProfiles[e]=t)},uiLoadProfile:e=>{let t=yl._uiProfiles[e];void 0!==t&&(t(),yl._uiCurrProfile=e,console.log("Loaded UI Profile: "+yl._uiCurrProfile))},getCurrentUIP:()=>yl._uiCurrProfile,attachHandlerToButton:(e,t)=>{void 0!==t&&$("#"+e).click((()=>{t()}))},uiAttachInputFilterID:e=>{$("#"+e).on("keyup change input",(()=>{let t=$("#"+e).val(),n=new RegExp("[^A-Za-z0-9-_]","ig");$("#"+e).val(t.replace(n,""))}))},switchNode:(e,t,n)=>{let i;i=n===tc.NTYPES.SEM?tc.getSemanticNode(e):tc.getSceneNode(e),void 0!==i&&(i.toggle(t),tc.fireEvent("FE_NodeSwitch",{nid:e,type:n,value:t}))},uiCreateGraph:e=>{let t=tc.snodes;e===tc.NTYPES.SEM&&(t=tc.semnodes);let n="";for(let i in t){let r=t[i].visible?"checked":"";"."!==i&&(n+="<input type='checkbox' "+r+" onchange=\"ATON.FE.switchNode('"+i+"',this.checked,"+e+');">'+i,n+="<br>")}return n},uiShowObjects:()=>{fetch(".. /varlab/objects_lst/objects.json").then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>{console.log(e)})).catch((e=>{console.error("Error:",e)}))},setupBasicUISounds:()=>{yl.auLib={},yl.auLib.switch=new Audio(tc.PATH_RES+"audio/switch.wav"),yl.auLib.switch.loop=!1},playAudioFromSemanticNode:e=>{if(void 0===e)return;let t=tc.getSemanticNode(e);if(void 0===t)return;let n=t.getAudio();void 0!==n&&("string"!=typeof n||n.startsWith("data:audio")||(n=tc.Utils.resolveCollectionURL(n)),void 0===yl._auSemNode||null===yl._auSemNode?yl._auSemNode=new THREE.Audio(tc.AudioHub._listener):yl._auSemNode.stop(),tc.AudioHub._loader.load(n,(e=>{yl._auSemNode.setBuffer(e),yl._auSemNode.setLoop(!1),yl._auSemNode.play()})))},popupShow:(e,t)=>{if(yl._bPopup)return!1;yl._tPopup=Date.now();let n="atonPopup ";t&&(n+=t);let i="<div id='idPopupContent' class='"+n+"'>";return i+=e+"</div>",yl._bPopup=!0,tc._bListenKeyboardEvents=!1,$("#idPopup").html(i),$("#idPopupContent").click((e=>{e.stopPropagation()})),$("#idPopup").show(),yl.popupBlurBG>0&&(tc._renderer.domElement.style.filter="blur("+yl.popupBlurBG+"px)"),tc._bPauseQuery=!0,$(".hideWhenOpeningPopup").hide(),$("#idPoweredBy").hide(),!0},popupClose:e=>{Date.now()-yl._tPopup<yl.POPUP_DT||(yl._bPopup=!1,tc._bListenKeyboardEvents=!0,yl.popupBlurBG>0&&(tc._renderer.domElement.style.filter="none"),$("#idPopup").hide(),tc._bPauseQuery=!1,$(".hideWhenOpeningPopup").show(),$("#idPoweredBy").show(),tc.focusOn3DView())},subPopup:e=>{tc.FE.popupClose(),e()},popupQR:()=>{let e="<div class='atonPopupTitle'>Share</div>";if(e+="<div class='atonQRcontainer' id='idQRcode'></div><br><br>",!tc.FE.popupShow("<div class='atonPopupTitle'>Share</div><div class='atonQRcontainer' id='idQRcode'></div><br><br>"))return;let t=window.location.href;new QRCode(document.getElementById("idQRcode"),t)},popupScreenShot:()=>{let e=tc.Utils.takeScreenshot(256);yl.checkAuth((t=>{let n="<div class='atonPopupTitle'>Capture</div>";n+="This is a preview of what your screenshot will look like:<br><br>",n+="<img src='"+e.src+"'><br>",n+="Resolution: <input id='isShotSize' type='number' min='100' max='4000' value='256'>px<br>",n+="<div class='atonBTN atonBTN-horizontal' id='btnScreenShot'><img src='"+yl.PATH_RES_ICONS+"sshot.png'>Screenshot</div>",n+="<div class='atonBTN atonBTN-horizontal' id='btnScreenRec'><img src='"+yl.PATH_RES_ICONS+"recscreen.png'>Record video</div>",void 0!==t.username&&(n+="<div class='atonBTN atonBTN-green atonBTN-horizontal' id='btnSetCover'>Set as Cover</div>"),tc.FE.popupShow(n)&&(tc.MediaFlow._bScreenRec?$("#btnScreenRec").addClass("atonBTN-rec"):$("#btnScreenRec").removeClass("atonBTN-rec"),$("#btnScreenShot").click((()=>{let e=parseInt($("#isShotSize").val());e<100||(tc.FE.popupClose(),tc.Utils.takeScreenshot(e,"shot.png"))})),$("#btnScreenRec").click((()=>{tc.MediaFlow._bScreenRec||tc.MediaFlow.startScreenRecording(),tc.FE.popupClose()})),$("#btnSetCover").click((()=>{tc.FE.popupClose(),tc.Utils.postJSON(tc.PATH_RESTAPI+"cover/scene/",{sid:tc.SceneHub.currID,img:e.src},(e=>{console.log(e)}))})))}))},popupPhoton:()=>{let e="",t=tc.Photon.getNumUsers();e+=t>1?"<div class='atonPopupTitle'>Collaborative Session ("+t+" users)</div>":"<div class='atonPopupTitle'>Collaborative Session</div>",e+="<div id='idCollabTools' style='display:inline'></div>",e+="<input id='idPhotonUsername' type='text' size='10' placeholder='username...' style='display:none'>",e+="<div id='idPhotonUsernameBTN' class='atonBTN' style='width:150px; display:none'>"+tc.Photon._username+"</div>",e+="<div class='atonBTN atonBTN-text' id='idPhotonDisconnect'><img src='"+tc.FE.PATH_RES_ICONS+"exit.png'>LEAVE</div>",e+="<div id='idChatBoxPopup' style='display:block'></div>",e+="<input id='idPhotonMsg' style='width:90%;margin:auto' type='text' placeholder='message...'>",tc.FE.popupShow(e,"atonPopupLarge")&&(tc.checkAuth((e=>{tc.MediaFlow._bCamStream||tc.FE.uiAddButton("idCollabTools","screenshare",(()=>{tc.MediaFlow._bScreenStream?$("#btn-screenshare").addClass("atonBTN-rec"):$("#btn-screenshare").removeClass("atonBTN-rec"),tc.MediaFlow.startOrStopScreenStreaming(),tc.FE.popupClose()}),"Share your screen with other participants"),!tc.MediaFlow._bScreenStream&&tc.MediaFlow.hasVideoInput()&&tc.FE.uiAddButton("idCollabTools","camera",(()=>{tc.MediaFlow._bCamStream?$("#btn-camera").addClass("atonBTN-rec"):$("#btn-camera").removeClass("atonBTN-rec"),tc.MediaFlow.startOrStopCameraStreaming(),tc.FE.popupClose()}),"Share your camera with other participants"),tc.MediaFlow._bScreenStream?$("#btn-screenshare").addClass("atonBTN-rec"):$("#btn-screenshare").removeClass("atonBTN-rec"),tc.MediaFlow._bCamStream?$("#btn-camera").addClass("atonBTN-rec"):$("#btn-camera").removeClass("atonBTN-rec")})),void 0===tc.Photon._username?($("#idPhotonUsername").show(),$("#idPhotonUsernameBTN").hide()):($("#idPhotonUsername").val(tc.Photon._username),$("#idPhotonUsername").hide(),$("#idPhotonUsernameBTN").show()),void 0!==tc.Photon.uid&&$("#idPhotonUsernameBTN").addClass("atonPhotonU"+tc.Photon.uid%6),$("#idChatBoxPopup").append(tc.Photon._elChat),$("#idPhotonMsg").keypress((e=>{if(13===(e.keyCode?e.keyCode:e.which)){let e=$("#idPhotonMsg").val();tc.Photon.setMessage(e),$("#idPhotonMsg").val("")}})),$("#idPhotonUsername").keypress((e=>{if(13===(e.keyCode?e.keyCode:e.which)){let e=$("#idPhotonUsername").val();tc.Photon.setUsername(e),$("#idPhotonUsername").hide(),$("#idPhotonUsernameBTN").html(tc.Photon._username),$("#idPhotonUsernameBTN").show()}})),$("#idPhotonUsernameBTN").click((()=>{$("#idPhotonUsername").show(),$("#idPhotonUsernameBTN").hide()})),$("#idPhotonDisconnect").click((()=>{tc.Photon.disconnect(),tc.FE.popupClose()})))},checkAuth:e=>{tc.Utils.checkAuth((t=>{yl._userAuth=t,void 0!==t.username?($("#btn-user").addClass("switchedON"),void 0===tc.Photon._username&&tc.Photon.setUsername(t.username),void 0===tc._userObjects&&(tc._userObjects=t.items)):$("#btn-user").removeClass("switchedON"),e&&e(t)}))},popupUser:()=>{yl.checkAuth((e=>{if(void 0!==e.username){let t="<img src='"+yl.PATH_RES_ICONS+"user.png'><br>";if(t+="<b>'"+e.username+"'</b><br><br>",Object.keys(yl._uiProfiles).length>0){t+="UI Profile:<br><div class='select' style='width:150px;'><select id='idUIProfiles'>";for(let e in yl._uiProfiles)t+="<option value='"+e+"'>"+e+"</option>";t+="</select><div class='selectArrow'></div></div><br><br>"}if(t+="<div class='atonBTN atonBTN-red atonBTN-text atonBTN-horizontal' id='idLogoutBTN'>LOGOUT</div>",!tc.FE.popupShow(t))return;yl._uiCurrProfile&&(console.log(yl._uiCurrProfile),$("#idUIProfiles").val(yl._uiCurrProfile)),$("#idLogoutBTN").click((()=>{$.get(tc.PATH_RESTAPI+"logout",(e=>{console.log(e),tc.SceneHub.setEditMode(!1),yl.uiSwitchButton("edit",!1),tc.fireEvent("Logout"),$("#btn-user").removeClass("switchedON")})),tc.FE.popupClose()})),$("#idSHUscenes").click((()=>{tc.Utils.goToURL("/shu/scenes/")})),$("#idSHUuser").click((()=>{tc.Utils.goToURL("/shu/auth/")})),$("#idUIProfiles").on("change",(()=>{let e=$("#idUIProfiles").val();"editor"===e?tc.SUI.toggleButtonsProfile("editMode","userMode",!0):tc.SUI.toggleButtonsProfile("userMode","editMode",!1),yl.uiLoadProfile(e),tc.FE.popupClose()}))}else{let e="<img src='"+yl.PATH_RES_ICONS+"user.png'><br>";if(e+="username:<input id='idUsername' type='text' maxlength='15' size='15' ><br>",e+="password:<input id='idPassword' type='password' maxlength='15' size='15' ><br>",e+="<div class='atonBTN atonBTN-green atonBTN-text atonBTN-horizontal' id='idLoginBTN'>LOGIN</div>",!tc.FE.popupShow(e))return;$("#idLoginBTN").click((()=>{let e=JSON.stringify({username:$("#idUsername").val(),password:$("#idPassword").val()});$.ajax({url:tc.PATH_RESTAPI+"login",type:"POST",data:e,contentType:"application/json; charset=utf-8",dataType:"json",success:e=>{void 0===tc._userObjects&&(tc._userObjects=e.items),e&&(tc.fireEvent("Login",e),$("#btn-user").addClass("switchedON"),tc.FE.popupClose())}}).fail((e=>{$("#idLoginBTN").html("LOGIN FAILED"),$("#idLoginBTN").attr("class","atonBTN atonBTN-red")}))}))}}))},popupSceneInfo:()=>{let e=tc.SceneHub.getTitle();void 0===e&&(e=tc.SceneHub.currID);let t=tc.SceneHub.getDescription(),n="<div class='atonPopupTitle'>"+e+"</div>";t&&(n+="<div class='atonPopupDescriptionContainer'>"+JSON.parse(t)+"</div>"),n+="<div class='atonBTN atonBTN-green' id='btnOK' style='width:90%'>OK</div>",tc.FE.popupShow(n)&&$("#btnOK").click((()=>{tc._onUserInteraction(),tc.FE.popupClose()}))},computeSelectorRanges:()=>{let e=tc.bounds.radius;e<=0||(yl._selRanges[0]=.001*e,yl._selRefRadius=.01*e,yl._selRanges[1]=.5*e)},popupSelector:()=>{let e="<div class='atonPopupTitle'>3D Selector</div>",t=tc.SUI.getSelectorRadius(),n=tc.Utils.getHumanReadableDistance(t);yl.computeSelectorRanges(),e+="Radius (<span id='idSelRadTxt'>"+n+"</span>):<br>",e+="<input id='idSelRad' type='range' min='"+yl._selRanges[0]+"' max='"+yl._selRanges[1]+"' step='"+yl._selRanges[0]+"' style='width:90%'>",tc.FE.popupShow(e,"atonPopupLarge")&&($("#idSelRad").val(t),$("#idSelRad").on("input change",(()=>{let e=parseFloat($("#idSelRad").val());tc.SUI.setSelectorRadius(e),$("#idSelRadTxt").html(tc.Utils.getHumanReadableDistance(e))})))},popupNav:()=>{let e="<div class='atonPopupTitle'>Navigation</div>";e+="<div style='display:block; width:90%; min-height:50px; vertical-align:top'><div style='display:inline-block; width:60px; float:left' id='idNMfp'></div><div style='text-align:left'>Switch between first-person and orbit navigation mode</div><div style='display:inline-block; width:60px; float:left' id='idNMfpw'></div><div style='text-align:left'>Switch between first-person walking and orbit navigation mode</div></div>",tc.Utils.isConnectionSecure()&&(tc.Utils.isVRsupported()&&(e+="<div style='display:block; width:90%; min-height:50px; vertical-align:top'><div style='display:inline-block; width:60px; float:left' id='idNMvr'></div><div style='text-align:left'>Immersive VR mode</div></div>"),e+="<div style='display:block; width:90%; min-height:50px; vertical-align:top'><div style='display:inline-block; width:60px; float:left' id='idNMar'></div><div style='text-align:left'>Immersive AR mode</div></div>",tc.Utils.isMobile()&&(e+="<div style='display:block; width:90%; min-height:50px; vertical-align:top'><div style='display:inline-block; width:60px; float:left' id='idNMdevori'></div><div style='text-align:left'>Enable or disable device-orientation mode</div></div>")),yl.popupShow(e)&&(yl.uiAddButtonFirstPerson("idNMfp"),yl.uiAddButtonFirstPersonWalking("idNMfpw"),yl.uiAddButtonDeviceOrientation("idNMdevori"),yl.uiAddButtonVR("idNMvr"),yl.uiAddButtonAR("idNMar"))},popupModalToken:(e,t)=>{if(void 0===t)return;tc.FE.popupClose();let n="<div class='atonPopupTitle'>Token Required</div>";e&&(n+=e),n+="<br><input id='idTokStr' style='width:90%' type='text' placeholder='paste your token here'><br>",n+="<br><div class='atonBTN atonBTN-green atonBTN-horizontal atonBTN-text' id='btnTokenOK'>OK</div>",yl.popupShow(n)&&$("#btnTokenOK").click((()=>{let e=$("#idTokStr").val();void 0===e||e.length<2||(tc.FE.popupClose(),t(e))}))},popupNewNode:e=>{void 0===e&&(e=tc.NTYPES.SCENE);let t="";e===tc.NTYPES.SCENE&&(t="<div class='atonPopupTitle'>New Scene Node</div>"),e===tc.NTYPES.SEM&&(t="<div class='atonPopupTitle'>New Semantic Node</div>"),t+="<strong>ID</strong>: <input id='idNID' type='text' size='20' placeholder='node-id'><br>",t+="<div class='atonBTN atonBTN-green atonBTN-horizontal atonBTN-text' id='btnNewNID'><img src='"+tc.FE.PATH_RES_ICONS+"add.png'>Add</div><br>",yl.popupShow(t)&&$("#btnNewNID").click((()=>{let t=$("#idNID").val().trim();void 0===t||t.length<3||new tc.Node(t,e).attachToRoot()}))}};const Tl=yl;n(146);let bl={auType:"audio/wav",auStreamSegmentInterval:200,auStreamNumSegments:2,vidStreamSegmentInterval:300,vidStreamNumSegments:1,auMinVol:1,init:()=>{bl._bAudioRecording=!1,bl._bAudioStreaming=!1,bl._bScreenRec=!1,bl._blobOptAudio={type:"audio/wav"},bl._blobOptVideo={type:"video/mp4"},bl._cAuStream={audio:{channelCount:1,echoCancellation:!0,noiseSuppression:!0}},bl._cAuRec={audio:{channelCount:1}},bl._cScreenRec={video:{width:1280,height:720,framerate:30}},bl._cScreenStream={video:{cursor:"always",width:{max:640},height:{max:360},framerate:15}},bl._cCamStream={video:{width:{max:512},height:{max:512}}},bl._oStream={audioBitsPerSecond:9e3,videoBitsPerSecond:5e5},bl._aurec=void 0,bl._sblob=void 0,bl._schunks=[],bl._bVideoStream=!1,bl._vrec=void 0,bl._scblob=void 0,bl._scchunks=[],bl._bCamStream=!1,bl._bScreenStream=!1,bl._setupFR(),bl.detectDevices(),navigator.mediaDevices&&navigator.mediaDevices.addEventListener("devicechange",(e=>{bl.detectDevices()})),bl._vStreams={}},_setupFR:()=>{bl._frAR=new window.FileReader,bl._frAR.onloadend=()=>{let e=bl._frAR.result;ATON.fireEvent("AudioRecordCompleted",e),bl._bAudioRecording=!1},bl._frAS=new window.FileReader,bl._frAS.onloadend=()=>{if(!bl._bAudioStreaming)return;let e=bl._frAS.result;ATON.Photon.socket.emit("UTALK",{audio:e,uid:ATON.Photon.uid}),e=null},bl._frVS=new window.FileReader,bl._frVS.onloadend=()=>{if(!bl._bVideoStream)return;let e=bl._frVS.result;ATON.Photon.socket.emit("UVIDEO",{video:e,uid:ATON.Photon.uid}),e=null}},detectDevices:()=>{bl.audioInputDevices=[],bl.videoInputDevices=[],navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices().then((e=>{for(let t in e){let n=e[t];"audioinput"===n.kind&&bl.audioInputDevices.push(n),"videoinput"===n.kind&&bl.videoInputDevices.push(n)}}))},hasAudioInput:()=>bl.audioInputDevices.length>0,hasVideoInput:()=>bl.videoInputDevices.length>0,isAudioRecording:()=>bl._bAudioRecording,startRecording:()=>{bl._bAudioRecording?console.log("Already recording."):navigator.mediaDevices.getUserMedia(bl._cAuRec).then((e=>{bl._aurec=new MediaRecorder(e),bl._aurec.onstart=function(e){console.log("Start recording..."),bl._bAudioRecording=!0,bl._schunks=[]},bl._aurec.ondataavailable=function(e){bl._schunks.push(e.data)},bl._aurec.onstop=function(e){console.log("Stop recording..."),bl._sblob=new Blob(bl._schunks,bl._blobOptAudio),bl._frAR.readAsDataURL(bl._sblob)},bl._aurec.start()})).catch((e=>{console.log(e)}))},stopRecording:()=>{bl._aurec&&bl._bAudioRecording&&bl._aurec.stop()},startOrStopRecording:()=>{bl._bAudioRecording?bl.stopRecording():bl.startRecording()},startAudioStreaming:()=>{navigator.mediaDevices.getUserMedia(bl._cAuStream).then((e=>{bl._aurec=new MediaRecorder(e,bl._oStream),bl._aurec.start(bl.auStreamSegmentInterval),console.log("Start audio streaming"),bl._aurec.onstart=e=>{bl._bAudioStreaming=!0,bl._bAudioRecording=!0,bl._schunks=[]},bl._aurec.ondataavailable=e=>{e.data.size<=0||(bl._schunks.push(e.data),bl._schunks.length<bl.auStreamNumSegments||"inactive"!==bl._aurec.state&&bl._aurec.stop())},bl._aurec.onstop=e=>{bl._sblob=new Blob(bl._schunks,bl._blobOptAudio),bl._frAS.readAsDataURL(bl._sblob),bl._bAudioStreaming&&bl._aurec.start(bl.auStreamSegmentInterval)}})).catch((e=>{console.log(e)}))},stopAudioStreaming:()=>{bl._aurec&&bl._bAudioStreaming&&("inactive"!==bl._aurec.state&&bl._aurec.stop(),console.log("Stop audio streaming"),bl._bAudioStreaming=!1,bl._bAudioRecording=!1,ATON.Photon.socket.emit("UAUDIOSTOP",{uid:ATON.Photon.uid}))},startOrStopAudioStreaming:()=>{bl._bAudioRecording?bl.stopAudioStreaming():bl.startAudioStreaming()},startScreenRecording:()=>{bl._bScreenRec||bl._bScreenStream||navigator.mediaDevices.getDisplayMedia(bl._cScreenRec).then((e=>{bl._vrec=new MediaRecorder(e),bl._scchunks=[],bl._vrec.ondataavailable=e=>{e.data.size>0&&bl._scchunks.push(e.data)},bl._vrec.onstop=()=>{bl._scblob=new Blob(bl._scchunks,bl._blobOptVideo),console.log(bl._scblob.size),ATON.Utils.downloadBlob(bl._scblob,"capture.mp4"),bl._scchunks=[],bl._bScreenRec=!1},bl._vrec.start(200),bl._bScreenRec=!0})).catch((e=>{console.log(e)}))},stopScreenRecording:()=>{bl._bScreenRec&&(bl._vrec.stop(),bl._bVideoStream=!1,bl._bScreenStream=!1,console.log("Stop screen recording"))},startScreenStreaming:()=>{console.log("SSStart"),navigator.mediaDevices.getDisplayMedia(bl._cScreenStream).then((e=>{bl.realizeOrUpdateVStream(e,bl.stopScreenStreaming),bl._vrec=new MediaRecorder(e,bl._oStream),bl._vrec.start(bl.vidStreamSegmentInterval),console.log("Start screen streaming"),bl._vrec.onstart=e=>{bl._bVideoStream=!0,bl._bScreenStream=!0,bl._scchunks=[]},bl._vrec.ondataavailable=e=>{e.data.size<1||(bl._scchunks.push(e.data),bl._scchunks.length<bl.vidStreamNumSegments||"inactive"!==bl._vrec.state&&bl._vrec.stop())},bl._vrec.onstop=()=>{bl._scblob=new Blob(bl._scchunks,bl._blobOptVideo),bl._frVS.readAsDataURL(bl._scblob),bl._bVideoStream&&bl._vrec.start(bl.vidStreamSegmentInterval)}})).catch((e=>{console.log(e)}))},stopScreenStreaming:()=>{if(bl._vrec&&bl._bVideoStream&&(bl._vrec.stop(),bl._bVideoStream=!1,bl._bScreenStream=!1,console.log("Stop screen streaming"),void 0!==ATON.Photon.uid)){let e=bl.getVideoStream(ATON.Photon.uid);e.el.style.display="none",e.el.pause(),ATON.Photon.socket.emit("UVIDEOSTOP",{uid:ATON.Photon.uid})}},startOrStopScreenStreaming:()=>{bl._bVideoStream?bl.stopScreenStreaming():bl.startScreenStreaming()},startCameraStreaming:()=>{bl._bVideoStream||navigator.mediaDevices.getUserMedia(bl._cCamStream).then((e=>{bl.realizeOrUpdateVStream(e,bl.stopCameraStreaming),bl._vrec=new MediaRecorder(e,bl._oStream),bl._vrec.start(bl.vidStreamSegmentInterval),console.log("Start camera streaming"),bl._vrec.onstart=e=>{bl._bVideoStream=!0,bl._bCamStream=!0,bl._scchunks=[]},bl._vrec.ondataavailable=e=>{e.data.size<1||(bl._scchunks.push(e.data),bl._scchunks.length<bl.vidStreamNumSegments||"inactive"!==bl._vrec.state&&bl._vrec.stop())},bl._vrec.onstop=()=>{bl._scblob=new Blob(bl._scchunks,bl._blobOptVideo),bl._frVS.readAsDataURL(bl._scblob),bl._bVideoStream&&bl._vrec.start(bl.vidStreamSegmentInterval)}})).catch((e=>{console.log(e)}))},stopCameraStreaming:()=>{if(bl._vrec&&bl._bVideoStream&&(bl._vrec.stop(),bl._bVideoStream=!1,bl._bCamStream=!1,console.log("Stop camera streaming"),void 0!==ATON.Photon.uid)){let e=bl.getVideoStream(ATON.Photon.uid);e.el.style.display="none",e.el.pause(),ATON.Photon.socket.emit("UVIDEOSTOP",{uid:ATON.Photon.uid})}},startOrStopCameraStreaming:()=>{bl._bVideoStream?bl.stopCameraStreaming():bl.startCameraStreaming()},realizeOrUpdateVStream:(e,t)=>{let n=ATON.Photon.uid;if(void 0===n)return;let i=bl.getOrCreateVideoStream(n,void 0,!0);i.el.playsinline=!0,i.el.style.display="inline-block",i.el.classList.add("atonPhotonVidStream"),i.el.classList.add("atonPhotonU"+n%6),t&&(i.el.onclick=t),i.el.srcObject=e},stopAllStreams:()=>{bl.stopAudioStreaming(),bl.stopCameraStreaming(),bl.stopScreenStreaming()},getOrCreateVideoStream:(e,t,n)=>{if(bl._vStreams[e])t&&(bl._vStreams[e].el.src=t);else{bl._vStreams[e]={};let i="vStream-"+e;if(n&&(i="uStream"+e,bl._vStreams[e].uid=e),$("<video id='"+i+"' autoplay crossorigin='anonymous' ></video>").appendTo("body"),bl._vStreams[e].el=document.getElementById(i),t)if(t.endsWith("m3u8"))if(Hls.isSupported()){let n=new Hls;n.loadSource(t),n.attachMedia(bl._vStreams[e].el)}else bl._vStreams[e].el.src=t;else bl._vStreams[e].el.src=t;n||(bl._vStreams[e].el.loop=!0),bl._vStreams[e].texStream=new THREE.VideoTexture(bl._vStreams[e].el),bl._vStreams[e].texStream.colorSpace=ATON._stdEncoding,bl._vStreams[e].texStream.flipY=!1,bl._vStreams[e].matStream=ATON.MatHub.materials.chromakey.clone(),bl._vStreams[e].matStream.uniforms.tBase.value=bl._vStreams[e].texStream}return bl._vStreams[e]},getVideoStream:e=>bl._vStreams[e]};const Ml=bl;let Al={USER_STATE_FREQ:.25,REPLICATED_EVT:"EREP",THRES_STATE_POS:.01,THRES_STATE_ORI:.08};Al.Avatar=class extends t{constructor(e){super(void 0,ATON.NTYPES.UI),this.userid=e,this.username=void 0,this.message="...",this.color=ATON.Photon.ucolors[this.userid%ATON.Photon.ucolors.length],this._auTalk=[],this._auTalk.push(new THREE.PositionalAudio(ATON.AudioHub._listener)),this._auTalk.push(new THREE.PositionalAudio(ATON.AudioHub._listener));for(let e=0;e<2;e++)this._auTalk[e].setRefDistance(30),this._auTalk[e].setLoop(!1),this.add(this._auTalk[e]);this._auTalki=0,this.bMuted=!1,this._bPlayingAudio=!1,this._blob=void 0,this._b64=void 0,this._tStateCall=-1,this._tProgress=0,this._tFocCall=-1,this._currFocusPos=new THREE.Vector3,this._tgtFocusPos=new THREE.Vector3,this._currState={position:new THREE.Vector3,quaternion:new THREE.Quaternion,scale:1},this._tgtState={position:new THREE.Vector3,quaternion:new THREE.Quaternion,scale:1},this.userlabelnode=void 0,this.mStream=void 0,this._elVStream=void 0,this.realize()}getColor(){return this.color}setTalkDistance(e){e>0&&this._auTalk.setRefDistance(e)}setMuted(e){this.bMuted=e}getAvatarMaterialByUID(e){let t=ATON.MatHub.materials.avatars;return t[e%t.length]}_buildLabel(){this.userlabelnode=ATON.createUINode(),this.labelcontainer=new ThreeMeshUI.Block({width:.7,height:.25,padding:.03,borderRadius:.05,backgroundColor:ATON.MatHub.colors.black,fontFamily:ATON.SUI.PATH_FONT_JSON,fontTexture:ATON.SUI.PATH_FONT_TEX,justifyContent:"center",textAlign:"center"}),this.userlabelnode.position.y=.4,this.userlabelnode.add(this.labelcontainer),this.usernametext=new ThreeMeshUI.Text({content:"User #"+this.userid,fontSize:.09,fontColor:this.color}),this.usernametext.position.y=0,this.usermessagetext=new ThreeMeshUI.Text({content:"\n...",fontSize:.03,fontColor:ATON.MatHub.colors.white}),this.usermessagetext.position.y=-.03,this.labelcontainer.add(this.usernametext),this.labelcontainer.add(this.usermessagetext),this.add(this.userlabelnode),ThreeMeshUI.update()}realizeStreamPanel(){let e=ATON.MediaFlow.getOrCreateVideoStream(this.userid,void 0,!0);this._elVStream=e.el;let t=new THREE.PlaneGeometry(1,1);this.mStream=new THREE.Mesh(t,e.matStream),this.mStream.position.y=1;let n=.5625;this.mStream.scale.y=-n,this.mStream.position.y=.8*n,this._elVStream.addEventListener("loadedmetadata",(e=>{n=this._elVStream.videoHeight/this._elVStream.videoWidth,this.mStream.scale.y=-n,this.mStream.position.y=.8*n}))}getStreamPanel(){return this.mStream}toggleStreamPanel(e){void 0!==this.mStream&&(this.mStream.visible=e)}realize(){let e=new THREE.SphereGeometry(.2,16,16);ATON.Photon.customAvatarMaterial?this.usermaterial=ATON.Photon.customAvatarMaterial():this.usermaterial=this.getAvatarMaterialByUID(this.userid);let t=new THREE.Mesh(e,this.usermaterial);this.usermeshnode=ATON.createUINode(),this.usermeshnode.add(t),this.usermeshnode.setMaterial(this.usermaterial),this.usermeshnode.setCloneOnLoadHit(!1),this.add(this.usermeshnode),this.userauinode=new THREE.Sprite(ATON.Photon.uspritemats[this.userid%ATON.Photon.uspritemats.length]),this.userauinode.position.set(0,0,0),this.userauinode.visible=!1,this.add(this.userauinode),this.userfpnode=new THREE.Sprite(ATON.Photon.ufocmats[this.userid%ATON.Photon.ufocmats.length]),this.userfpnode.position.set(0,0,0),this.userfpnode.visible=!1,void 0===ATON.Photon._focNodes[this.userid]&&(ATON.Photon._focNodes[this.userid]=this.userfpnode,ATON.Photon.focGroup.add(this.userfpnode)),this._buildLabel()}loadRepresentation(e){let t=this;return void 0!==t.usermeshnode.children[0]&&t.usermeshnode.remove(t.usermeshnode.children[0]),t.usermeshnode.load(e),this}setUsername(e){return void 0===this.userlabelnode||(this.username=e,this.usernametext.set({content:e}),ThreeMeshUI.update()),this}getUsername(){if(void 0!==this.userid)return void 0===this.username?"User #"+this.userid:this.username}setMessage(e){return void 0===this.userlabelnode||(this.message=e,this.usermessagetext.set({content:"\n"+e}),ThreeMeshUI.update()),this}setTalkVolume(e){if(void 0!==e)if(e>0){this.userauinode.visible=!0;let t=.1+.03*e;this.userauinode.scale.set(t,t,t)}else this.userauinode.visible=!1;else this.userauinode.visible=!1}hideFocalPoint(){this.userfpnode.visible=!1}requestFocus(e){if(void 0===e)return;if(this._tFocCall>=0)return;this._tFocCall=ATON._clock.elapsedTime,this._currFocusPos.copy(this.userfpnode.position);let t=this.scale.x*ATON._worldScale,n=parseFloat(e[0])*t,i=parseFloat(e[1])*t,r=parseFloat(e[2])*t,a=parseFloat(e[3])*t;this._tgtFocusPos.set(n,i,r),this._tgtFocusRad=2*a,this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad),this.userfpnode.visible=!0,ATON.enablePointLight(),ATON.plight.color=this.color,ATON.plight.position.copy(this._tgtFocusPos),ATON.plight.distance=this._tgtFocusRad}handleFocusTransition(){if(this._tFocCall<0)return;let e=ATON.Photon.USER_STATE_FREQ,t=(ATON._clock.elapsedTime-this._tFocCall)/e;if(t>=1)return this._tFocCall=-1,this.userfpnode.position.copy(this._tgtFocusPos),this.userfpnode.scale.set(this._tgtFocusRad,this._tgtFocusRad,this._tgtFocusRad),void(this.userfpnode.visible=!0);this.userfpnode.position.lerpVectors(this._currFocusPos,this._tgtFocusPos,t),ATON.plight.position.copy(this.userfpnode.position),this.userfpnode.visible=!0}requestStateTransition(e){this._tStateCall>=0||void 0!==e&&(this._tStateCall=ATON._clock.elapsedTime,this._currState.position.copy(this.position),this._currState.quaternion.copy(this.quaternion),this._currState.scale=this.scale,this._tgtState.position.copy(e.position),this._tgtState.quaternion.copy(e.quaternion),this._tgtState.scale=1/e.scale)}handleStateTransition(){if(this._tStateCall<0)return;let e=ATON.Photon.USER_STATE_FREQ;this._tProgress=e<=0?1:(ATON._clock.elapsedTime-this._tStateCall)/e;let t=this._currState,n=this._tgtState;if(this._tProgress>=1)return this._tStateCall=-1,this.position.copy(n.position),void this.usermeshnode.quaternion.copy(n.quaternion);this.position.lerpVectors(t.position,n.position,this._tProgress),this.usermeshnode.quaternion.slerp(n.quaternion,this._tProgress)}update(){if(this.handleStateTransition(),this.userfpnode&&this.userfpnode.visible){this.handleFocusTransition();let e=this.userfpnode.scale.x;e>.001?(this.userfpnode.scale.set(.99*e,.99*e,.99*e),ATON.plight.intensity*=.99):(this.userfpnode.visible=!1,ATON.disablePointLight())}let e=ATON.Nav._camera,t=ATON.Nav._currPOV.pos;if(void 0===e||void 0===t)return;this.userlabelnode&&this.userlabelnode.orientToCamera();let n=this.userauinode.scale.x;n*=.99,n>.01?this.userauinode.scale.set(n,n,n):this.userauinode.visible=!1}_handleTalk(){if(this._auTalk.isPlaying)return;if(this._auChunks.length<2)return;let e=this._auChunks[this._iAU];this._auTalk.setBuffer(e),this._auTalk.play(),this.setTalkVolume(5)}_handleTalkOLD(){if(this._bPlayingAudio)return;if(this._auChunks.length<1)return;let e=this._auChunks.shift();this._auTalk.setBuffer(e),this._auTalk.play(),this._bPlayingAudio=!0,this._auTalk.onended=()=>{this._bPlayingAudio=!1,e=null},this.setTalkVolume(5)}},Al.init=()=>{Al.address=window.location.origin,Al.initMaterials(),Al.socket=void 0,Al._connected=!1,Al._reqSSID=void 0,Al._username=void 0,Al.uid=void 0,Al.color=ATON.MatHub.colors.white,Al._bStreamFocus=!1,Al._numUsers=1,Al.avatarList=[],Al.avaGroup=ATON.createUINode("avatars"),Al.avaGroup.attachToRoot(),Al.focGroup=ATON.createUINode("focus"),Al.focGroup.attachTo(Al.avaGroup),Al._focNodes=[],Al.bSendState=!0,window.setInterval(Al.sendState,1e3*Al.USER_STATE_FREQ),Al._lastStateSent=void 0,Al._bShowAvaG=!0,Al._bSpatial=!0,console.log("Photon initialized"),Al.enableChatLog(),Al._elVStream=void 0,Al._decS={quaternion:new THREE.Quaternion,position:new THREE.Vector3},Al.customAvatarMaterial=void 0},Al.setCustomAvatarMaterialRoutine=e=>{Al.customAvatarMaterial=e},Al.enableChatLog=()=>{Al._elChat=$("<div id='idChatBox' class='atonPhotonChatBox'></div>").text("")},Al.getNumUsers=()=>Al._numUsers,Al.initMaterials=()=>{Al.ucolorhex=[],Al.ucolorhex.push("#F00"),Al.ucolorhex.push("#FF0"),Al.ucolorhex.push("#0F0"),Al.ucolorhex.push("#0FF"),Al.ucolorhex.push("#00F"),Al.ucolorhex.push("#F0F"),Al.ucolorhex_light=[],Al.ucolorhex_light.push("#FAA"),Al.ucolorhex_light.push("#FFA"),Al.ucolorhex_light.push("#AFA"),Al.ucolorhex_light.push("#AFF"),Al.ucolorhex_light.push("#AAF"),Al.ucolorhex_light.push("#FAF"),Al.ucolors=[],Al.ucolors.push(new THREE.Color(Al.ucolorhex[0])),Al.ucolors.push(new THREE.Color(Al.ucolorhex[1])),Al.ucolors.push(new THREE.Color(Al.ucolorhex[2])),Al.ucolors.push(new THREE.Color(Al.ucolorhex[3])),Al.ucolors.push(new THREE.Color(Al.ucolorhex[4])),Al.ucolors.push(new THREE.Color(Al.ucolorhex[5])),Al.ucolorsdark=[],Al.ucolorsdark.push(new THREE.Color(.2,0,0)),Al.ucolorsdark.push(new THREE.Color(.2,.2,0)),Al.ucolorsdark.push(new THREE.Color(0,.2,0)),Al.ucolorsdark.push(new THREE.Color(0,.2,.2)),Al.ucolorsdark.push(new THREE.Color(0,0,.2)),Al.ucolorsdark.push(new THREE.Color(.2,0,.2));let e=ATON.MatHub.materials;e.avatars=[];for(let t=0;t<Al.ucolors.length;t++){let n=ATON.MatHub.materials.defUI.clone();n.color=Al.ucolors[t],n.uniforms.tint.value=Al.ucolors[t],n.uniforms.opacity.value=.5,e.avatars.push(n)}Al.uspritemats=[];let t=(new THREE.TextureLoader).load(ATON.PATH_RES+"useraui.png");for(let e=0;e<Al.ucolors.length;e++){let n=new THREE.SpriteMaterial({map:t,depthWrite:!1,color:Al.ucolors[e]});n.sizeAttenuation=!0,Al.uspritemats.push(n)}Al.ufocmats=[];let n=(new THREE.TextureLoader).load(ATON.PATH_RES+"focus.png");for(let e=0;e<Al.ucolors.length;e++){let t=new THREE.SpriteMaterial({map:n,depthWrite:!1,depthTest:!1,color:Al.ucolors[e]});t.sizeAttenuation=!0,Al.ufocmats.push(t)}},Al.fireEvent=(e,t)=>{if(!Al._connected)return;let n=Al.socket;n&&n.emit(Al.REPLICATED_EVT,{e,d:t})},Al.on=(e,t)=>{if(void 0===t)return;let n=ATON.EventHub.evNetwork;void 0===n[e]&&(n[e]=[]),n[e].push(t)},Al.isConnected=()=>void 0!==Al.socket&&Al._connected,Al.hasID=()=>void 0!==Al.uid,Al.log=e=>{if(!Al._connected)return;let t=Al.socket;t&&t.emit("UMSG",e)},Al.joinSession=e=>{Al.socket&&(void 0===e&&(e=ATON.SceneHub.currID),void 0!==e?(console.log("Joining Photon session '"+e+"'..."),Al.socket.emit("SENTER",e)):console.log("Photon ERROR: current session ID is undefined"))},Al.requestSceneState=()=>{Al.socket&&Al.socket.emit("SSTATE")},Al.updateSceneState=(e,t="")=>{if(!Al.socket)return;let n=ATON.getSceneNode(e);n&&Al.socket.emit("UPDATE_SCENE_STATE",{nid:e,pos:n.getPosition(),rot:n.getRotation(),scale:n.getScale(),materialId:t})},Al.updateAnnotationState=(e,t)=>{Al.socket&&Al.socket.emit("UPDATE_ANNOTATION_STATE",{point:e,annotationsIndex:t})},Al.setAvatarsVisibility=e=>{Al._bShowAvaG=e,e?Al.avaGroup.show():Al.avaGroup.hide()},Al.disableSpatiality=()=>{Al._bSpatial=!1},Al.enableSpatiality=()=>{Al._bSpatial=!0},Al.setAddress=e=>{e&&(Al.address=e)},Al.connect=e=>{if(Al._connected)return;Al._reqSSID=e;let t={};"https:"===window.location.protocol?(t.path="/sphoton/socket.io",t.secure=!0,t.rejectUnauthorized=!1):t.path="/photon/socket.io",Al.socket=io.connect(Al.address,t),void 0!==Al.socket&&(Al._connected=Al.socket.connected,Al._registerSocketHandlers())},Al.disconnect=()=>{void 0!==Al.socket&&(Al._numUsers=1,Al.socket.disconnect(),Al.color=ATON.MatHub.colors.white,ATON.plight.color=ATON.MatHub.colors.white,Al._connected=!1)},Al._onConnected=()=>{},Al.setUsername=e=>{(e=e.trim()).length<1||(Al._username=e,void 0!==Al.socket&&void 0!==Al.uid&&(Al.appendToChatBox("<i>Your username is now: "+e+"</i>"),Al.socket.emit("UNAME",e)))},Al.setMessage=e=>{(e=e.trim()).length<1||e.length>3e3||(Al._msg=e,void 0!==Al.socket&&void 0!==Al.uid&&(Al.socket.emit("UMSG",e),Al._elChat&&(e=Al.chatMessageProcessor(Al.uid,e),Al.appendToChatBox("<div class='"+ATON.FE.getPhotonClassFromID(Al.uid)+" atonPhotonChatUsername'>YOU</div>: <span style='color:"+Al.ucolorhex_light[Al.uid%6]+"'>"+e+"</span>"))))},Al.appendToChatBox=e=>{Al._elChat&&(Al._elChat.append("<div class='atonPhotonChatMessage'>"+e+"</div>"),Al._elChat.scrollTop(Al._elChat[0].scrollHeight))},Al._registerSocketHandlers=()=>{Al.socket.on("connect",(()=>{Al._connected=!0,void 0!==Al._reqSSID?Al.joinSession(Al._reqSSID):Al.joinSession(ATON.SceneHub.currID),console.log("Connected to Photon service!"),ATON.fireEvent("Photon_Connected"),Al._onConnected()})),Al.socket.on("disconnect",(()=>{Al._connected=!1,Al.uid=void 0,Al.avaGroup.hide(),Al.appendToChatBox("<i>YOU disconnected from the Photon session</i>"),console.log("Photon disconnected!"),ATON.fireEvent("Photon_Disconnected")})),Al.socket.on(Al.REPLICATED_EVT,(e=>{let t=e.e,n=e.d,i=ATON.EventHub.evNetwork[t];ATON.EventHub.executeHandlers(i,n)})),Al.socket.on("ID",(e=>{console.log("Your ID is "+e),Al.uid=e,Al.color=Al.ucolors[Al.uid%Al.ucolors.length],Al._bShowAvaG&&Al.avaGroup.show(),Al.appendToChatBox("<i>Your ID is #"+e+"</i>"),Al.requestSceneState(),ATON.fireEvent("Photon_IDassigned",e)})),Al.socket.on("SSTATE",(e=>{Al._numUsers=e.numUsers,console.log("Num. users: "+Al._numUsers),ATON.fireEvent("Photon_SceneState",e)})),Al.socket.on("UENTER",(e=>{let t=e;console.log("User #"+t+" entered the session"),Al.appendToChatBox("<i>User #"+t+" entered the session</i>"),Al.requestSceneState(),ATON.fireEvent("Photon_UserEnter",t)})),Al.socket.on("ULEAVE",(e=>{let t=e;if(void 0===t)return;let n=Al.avatarList[t];n&&(n.toggleStreamPanel(!1),n.hide()),console.log("User #"+t+" left the session"),Al.appendToChatBox("<i>User #"+t+" left the session</i>"),Al.requestSceneState(),ATON.fireEvent("Photon_UserLeave",t)})),Al.socket.on("USTATE",(e=>{if(!Al._bShowAvaG)return;if(!Al._bSpatial)return;let t=Al.decodeState(e),n=t.userid,i=Al.touchAvatar(n);i.requestStateTransition(t);let r=1/t.scale;i.scale.set(r,r,r)})),Al.socket.on("UFOCUS",(e=>{if(!Al._bSpatial)return;let t=e.uid,n=e.fp;Al.touchAvatar(t).requestFocus(n)})),Al.socket.on("UNAME",(e=>{let t=e.uid,n=e.name;void 0!==t&&(Al.touchAvatar(t).setUsername(n),console.log("User #"+t+" changed username to: "+n),Al.appendToChatBox("<i>User #"+t+" changed username to: "+n+"</i>"),ATON.fireEvent("Photon_UName",e))})),Al.socket.on("UMSG",(e=>{let t=e.uid,n=e.msg;if(void 0===t)return;let i=Al.touchAvatar(t);n.length<100&&i.setMessage(n),console.log("User #"+t+": "+n);let r=i.getUsername();n=Al.chatMessageProcessor(t,n),Al.ucolorhex[t%6];let a=Al.ucolorhex_light[t%6];Al.appendToChatBox("<div class='"+ATON.FE.getPhotonClassFromID(t)+" atonPhotonChatUsername'>"+r+"</div>: <span style='color:"+a+"'>"+n+"</span>"),ATON.fireEvent("Photon_UMessage",e)})),Al.socket.on("UTALK",(e=>{let t=e.uid;if(void 0===t)return;let n=e.audio;if(n){if(Al._bSpatial){let e=Al.touchAvatar(t);if(e.bMuted)return;ATON.AudioHub._loader.load(n,(t=>{let n=e._auTalk[e._auTalki],i=(e._auTalki+1)%2;n.setBuffer(t),n.isPlaying||n.play(),e.setTalkVolume(5),e._auTalki=i}))}ATON.fireEvent("Photon_UTalk",e),n=null}})),Al.socket.on("UTALKSTOP",(e=>{void 0!==e.uid&&ATON.fireEvent("Photon_UTalkStop",e)})),Al.socket.on("UVIDEO",(e=>{void 0!==e.uid&&ATON.fireEvent("Photon_UVideo",e)})),Al.socket.on("UVIDEOSTOP",(e=>{let t=e.uid;if(void 0===t)return;let n=Al.avatarList[t];n&&n.toggleStreamPanel(!1),ATON.fireEvent("Photon_UVideoStop",e)}))},Al.chatMessageProcessor=(e,t)=>{const n=(t=String(t)).match(/(((ftp|https?):\/\/)[\-\w@:%_\+.~#?,&\/\/=]+)/g);return n&&n.forEach((e=>{t=t.replace(e,"<a target='_blank' href='"+e+"'>"+e+"</a>")})),t},Al.encodeState=e=>{if(!e)return;let t=new Float32Array(5);t[0]=e.position.x,t[1]=e.position.y,t[2]=e.position.z;var n=new Int8Array(t.buffer);return n[12]=128*e.quaternion.x,n[13]=128*e.quaternion.y,n[14]=128*e.quaternion.z,n[15]=128*e.quaternion.w,n[16]=e.userid,n[17]=ATON._ws,n},Al.decodeState=e=>{let t=new Int8Array(e);Al._decS.userid=t[16];let n=ATON._unpackScale(t[17]);return Al._decS.scale=n,Al._decS.quaternion.set(parseFloat(t[12])/128,parseFloat(t[13])/128,parseFloat(t[14])/128,parseFloat(t[15])/128),t=new Float32Array(e),Al._decS.position.set(parseFloat(t[0])/n,parseFloat(t[1])/n,parseFloat(t[2])/n),Al._decS},Al.update=()=>{if(Al._connected)for(let e=0;e<Al.avatarList.length;e++){let t=Al.avatarList[e];t&&t.visible&&t.update()}},Al.setFocusStreaming=e=>{if(void 0!==e)if(e)Al._bStreamFocus||(ATON.fireEvent("Photon_FocusStreamingStarted"),ATON.enablePointLight(),ATON.plight.color=ATON.Photon.color),Al._bStreamFocus=!0;else{Al._bStreamFocus&&(ATON.fireEvent("Photon_FocusStreamingStopped"),ATON.disablePointLight());let e=ATON.SUI._selectorRad;ATON.SUI.mainSelector.scale.set(e,e,e),Al._bStreamFocus=!1}},Al.sendState=()=>{if(!Al.bSendState||!Al._bSpatial)return;if(void 0===Al.uid)return;if(!Al.socket||!Al._connected)return;let e=ATON.Nav._currPOV;if(!e)return;let t=ATON.getSceneFocalPoint();if(Al._bStreamFocus&&void 0!==t){let e=t.x.toPrecision(5),n=t.y.toPrecision(5),i=t.z.toPrecision(5),r=ATON.SUI.getSelectorRadius().toPrecision(5);Al.socket.emit("UFOCUS",[e,n,i,r])}if(!e.pos)return;if(!ATON.Nav._qOri)return;if(void 0!==Al._lastStateSent){let t=Al._lastStateSent.position,n=Al._lastStateSent.quaternion,i=t.distanceToSquared(e.pos),r=n.angleTo(ATON.Nav._qOri);if(i<Al.THRES_STATE_POS&&r<Al.THRES_STATE_ORI)return}void 0===Al._lastStateSent&&(Al._lastStateSent={},Al._lastStateSent.position=new THREE.Vector3,Al._lastStateSent.quaternion=new THREE.Quaternion),Al._lastStateSent.position.copy(e.pos),Al._lastStateSent.quaternion.copy(ATON.Nav._qOri),Al._lastStateSent.userid=Al.uid,Al._lastStateSent.scale=ATON._worldScale;let n=Al.encodeState(Al._lastStateSent);Al.socket.emit("USTATE",n)},Al.getAvatar=e=>Al.avatarList[e],Al.touchAvatar=e=>{if(void 0===Al.avatarList[e]){let t=new Al.Avatar(e);t.attachTo(Al.avaGroup),t.loadRepresentation(ATON.PATH_RES+"models/photon/head.gltf"),Al.avatarList[e]=t}let t=Al.avatarList[e];return t.visible||ATON.fireEvent("Photon_UserEnter",e),Al._bShowAvaG&&t.show(),t},Al.destroyAvatar=e=>{let t=Al.avatarList[e];void 0!==t&&t.destroy()},Al.clearAllAvatars=()=>{for(let e in Al.avatarList)Al.avatarList[e].hide()};const Cl=Al;let Pl={FLOAT_PREC:5,_firstAnnotationAfterLoad:!1,init:()=>{Pl.bConvexBuilding=!1,Pl.convexPoints=[],Pl.convexNode=void 0,Pl.currConvexMesh=void 0,Pl.currSemNode=tc.createSemanticNode(),Pl.currSemNode.disablePicking(),Pl.currSemNode.attachToRoot(),Pl.resetMaterial(),Pl._numShapes=0,Pl.nowAnnotating=!1,Pl.nowWritingAnnotation=!1,Pl.nowErasingAnnotation=!1,Pl.annotationColor=0,Pl.annotationWidth=5,Pl.annotationColors={},Pl.annotationWidths={},Pl.annotationPoints=[[]],Pl.annotationsIndex=0,Pl.aPoints=[tc.createSemanticNode("manual_ann"+Pl.annotationsIndex)],tc._rootSem.add(Pl.aPoints[Pl.annotationsIndex]),tc.on("HitsScene",(e=>Pl.annotation(e.p)))},resetMaterial:()=>{Pl.currMaterial=tc.MatHub.getMaterial("semanticShapeHL")},setMaterial:e=>{void 0!==e&&(Pl.currMaterial=e)},setAnnotationsIndex:e=>{Pl.annotationsIndex=e,console.log("IDX: ",Pl.annotationsIndex)},addConvexPoint:e=>{if(void 0===e)return!1;if(Pl.convexPoints.length>0){let t=Pl.convexPoints[Pl.convexPoints.length-1];if(e.equals(t))return!1}Pl.convexPoints.push(e);let t=Pl.convexPoints.length,n=new THREE.Sprite(tc.SUI.getOrCreateSpritePointEdit()),i=.02*tc.getSceneQueriedDistance();if(void 0===i&&(i=.02),n.position.copy(e),n.scale.set(i,i,i),tc.SUI.gPoints.add(n),t<4)return!1;let r=new THREE.ConvexGeometry(Pl.convexPoints),a=new THREE.Mesh(r,tc.MatHub.getMaterial("semanticShapeEdit"));if(Pl.bConvexBuilding){let t=Pl.currConvexMesh;t.geometry.dispose(),t.geometry=r,tc.Utils.setVectorPrecision(e,4),t.userData._convexPoints.push(e.x),t.userData._convexPoints.push(e.y),t.userData._convexPoints.push(e.z)}else{Pl.currSemNode.add(a),a.userData._convexPoints=[];for(let e=0;e<t;e++)tc.Utils.setVectorPrecision(Pl.convexPoints[e],Pl.FLOAT_PREC),a.userData._convexPoints.push(Pl.convexPoints[e].x),a.userData._convexPoints.push(Pl.convexPoints[e].y),a.userData._convexPoints.push(Pl.convexPoints[e].z);Pl.currConvexMesh=a,Pl.bConvexBuilding=!0}return!0},undoConvexPoint:()=>{if(0!==Pl.convexPoints.length&&(Pl.convexPoints.pop(),Pl.currConvexMesh)){let e=Pl.currConvexMesh.userData;e._convexPoints&&e._convexPoints.pop()}},stopCurrentConvex:()=>{Pl.bConvexBuilding&&(Pl.convexPoints=[],Pl.bConvexBuilding=!1,Pl.currSemNode.removeChildren(),tc.SUI.gPoints.removeChildren())},getCurrentConvexShape:()=>Pl.currSemNode,isBuildingShape:()=>Pl.convexPoints.length>0,completeConvexShape:e=>{if(Pl.bConvexBuilding=!1,void 0===Pl.currSemNode)return;void 0===e&&(e="sem"+Pl._numShapes);let t=tc.getSemanticNode(e)||tc.createSemanticNode(e),n=Pl.currSemNode.children[0];tc.SUI.addSemIcon(e,n),t.add(n),console.log("CONVEX POINTS: ",Pl.convexPoints),t._points=[];for(let e in Pl.convexPoints)t._points.push(e.x),t._points.push(e.y),t._points.push(e.z);return Pl.convexPoints=[],t.setMaterial("semanticShape"),t.enablePicking(),Pl.currSemNode.removeChildren(),Pl._numShapes++,tc.SUI.gPoints.removeChildren(),tc._bqSem=!0,t},createConvexShape:(e,t,n=void 0)=>{let i=new THREE.ConvexGeometry(t),r=new THREE.Mesh(i,tc.MatHub.getMaterial("semanticShape"));r.userData._convexPoints=[];for(let e=0;e<t.length;e++){let i=t[e];n||tc.Utils.setVectorPrecision(i,4),r.userData._convexPoints.push(i.x),r.userData._convexPoints.push(i.y),r.userData._convexPoints.push(i.z)}tc.SUI.addSemIcon(e,r);let a=tc.getOrCreateSemanticNode(e);return a._points=[n],a.isConvexShape=!0,a.add(r),a.enablePicking(),tc._bqSem=!0,a},addSurfaceConvexPoint:e=>{if(void 0===tc._queryDataScene)return!1;void 0===e&&(e=.02);let t=tc._queryDataScene.p,n=tc.Nav.getCurrentEyeLocation();return t.lerpVectors(t,n,e),Pl.addConvexPoint(t)},createSphere:(e,t,n)=>{if(void 0===t)return;if(void 0===n)return;void 0===e&&(e="sem"+Pl._numShapes);let i=tc.getOrCreateSemanticNode(e),r=new THREE.Mesh(tc.Utils.geomUnitSphere,tc.MatHub.getMaterial("semanticShape")),a=new THREE.Object3D;return a.position.copy(t),a.scale.set(n,n,n),a.add(r),tc.SUI.addSemIcon(e,a),i.add(a),i._points=[[a.position.x,a.position.y,a.position.z,n]],i.isSphereShape=!0,i.enablePicking(),Pl._numShapes++,tc._bqSem=!0,i},createSurfaceSphere:(e,t=void 0)=>{if(!tc._queryDataScene)return;let n=tc._queryDataScene.p;t&&(n=t);let i=tc.SUI.getSelectorRadius();return Pl.createSphere(e,n,i)},createSurfaceSphereFromRemote:(e,t)=>{let n=t,i=tc.SUI.getSelectorRadius();return Pl.createSphere(e,n,i)},deleteSemanticNode:e=>{let t=tc.getSemanticNode(e);if(void 0===t)return!1;if(void 0===t.removeChildren()&&t.delete(),void 0===tc.SUI.gSemIcons)return!0;for(let t in tc.SUI.gSemIcons.children){let n=tc.SUI.gSemIcons.children[t];n&&n.name===e&&tc.SUI.gSemIcons.removeChild(n)}return!0},writeAnnotation:(e,t=!0)=>{if(Pl._firstAnnotationAfterLoad&&(Pl.annotationsIndex=tc.SceneHub.getAnnotationsIndex(),Pl.annotationPoints=tc.SceneHub.getAnnotationsPoints(),Pl._firstAnnotationAfterLoad=!1),Pl.annotationPoints[Pl.annotationsIndex]||(Pl.annotationPoints[Pl.annotationsIndex]=[]),Pl.aPoints[Pl.annotationsIndex]||(Pl.aPoints[Pl.annotationsIndex]=tc.createSemanticNode("manual_ann"+Pl.annotationsIndex),tc._rootSem.add(Pl.aPoints[Pl.annotationsIndex])),void 0===e)return!1;e instanceof THREE.Vector3||(e=new THREE.Vector3(e.x,e.y,e.z)),Pl.annotationPoints[Pl.annotationsIndex].push(e);let n=Pl.annotationPoints[Pl.annotationsIndex];t&&(tc.Photon.fireEvent("NewAnnotationPoint",e),Cl.updateAnnotationState(e,Pl.annotationsIndex));let i=n.length;if(i<2)return;const r=[n[i-1],n[i-2]];console.log("POINTS: ",r);const a=new THREE.CatmullRomCurve3(r),o=Math.round(12*r.length),s=new THREE.Vector3,l=[];for(let e=0,t=o;e<t;e++){const n=e/t;a.getPoint(n,s),l.push(s.x,s.y,s.z)}const c=new Ms;c.setPositions(l);let d=new cs({color:Pl.annotationColor,linewidth:Pl.annotationWidth,resolution:new THREE.Vector2(window.innerWidth,window.innerHeight)}),h=new As(c,d);Pl.aPoints[Pl.annotationsIndex].add(h)},newAnnotation:()=>{Pl.nowAnnotating&&Pl.nowWritingAnnotation&&(Pl.annotationColors[Pl.annotationsIndex]="0x"+Pl.annotationColor.toString(16),Pl.annotationWidths[Pl.annotationsIndex]=Pl.annotationWidth,Pl.annotationsIndex+=1,Pl.annotationPoints[Pl.annotationsIndex]=[],Pl.aPoints[Pl.annotationsIndex]=tc.createSemanticNode("manual_ann"+Pl.annotationsIndex),tc._rootSem.add(Pl.aPoints[Pl.annotationsIndex]))},redoQueueAnnotationPoints:[],undoAnnotation:()=>{Pl.nowAnnotating&&Pl.nowErasingAnnotation&&Pl.annotationsIndex>0&&(Pl.annotationsIndex-=1,Pl.redoQueueAnnotationPoints.push(Pl.annotationPoints[Pl.annotationsIndex]),Pl.removeAnnotationByIndex(Pl.annotationsIndex))},redoAnnotation:()=>{let e=Pl.redoQueueAnnotationPoints.pop();e&&(Pl.newAnnotation(),e.forEach((e=>{Pl.writeAnnotation(e)})))},removeAnnotationByPoint:e=>{Pl._firstAnnotationAfterLoad&&(Pl.annotationsIndex=tc.SceneHub.getAnnotationsIndex(),Pl.annotationPoints=tc.SceneHub.getAnnotationsPoints(),Pl._firstAnnotationAfterLoad=!1);for(const t of Pl.annotationPoints)for(const n of t)if(n.distanceTo(e)<.1){const e=Pl.annotationPoints.indexOf(t);Pl.removeAnnotationByIndex(e);break}},removeAnnotationByIndex:(e,t=!0)=>{if(t){const t={action:"del_manual",point:Pl.annotationPoints[e],annId:Pl.aPoints[e].nid,color:Pl.annotationColors[e],width:Pl.annotationWidths[e],index:e,node:Pl.aPoints[e]};tc.undoStack.push(t)}Pl.aPoints[e].removeChildren(),Pl.annotationPoints[e]=[]},startWritingAnnotation:()=>{Pl.nowWritingAnnotation=!0,Pl.nowErasingAnnotation=!1},startErasingAnnotation:()=>{Pl.nowWritingAnnotation=!1,Pl.nowErasingAnnotation=!0},annotation:e=>{Pl.nowAnnotating&&(tc._kModCtrl||tc._isXRDragging)&&(Pl.nowWritingAnnotation?Pl.writeAnnotation(e):Pl.nowErasingAnnotation&&Pl.removeAnnotationByPoint(e))},stopAnnotating:()=>{Pl.nowAnnotating=!1}};const Rl=Pl;let Nl,Ol,Ll={STD_BTN_SIZE:.1,LABEL_WIDTH:.7,STD_SELECTOR_TICKNESS:1.05},Il=[];Ll.Button=Hs,Ll.Label=Bs,Ll.Keyboard=class extends t{constructor(e,t){e||console.error("No UUID provided"),super(e,ATON.NTYPES.UI),this.supportedCharsets=[["English","eng"],["Nordic","nord"],["German","de"],["Spanish","es"],["French","fr"],["Russian","ru"],["Greek","el"]],t||(t="eng"),this.supportedCharsets.some((e=>e[1]===t))?(this.uiid=e,this.field=void 0,this.defaultEnterBehavior="none",this.colors={keyboardBack:8750469,panelBack:2500134,button:3552822,hovered:1842204,selected:1088605},this.enablePicking(),this.language=t,this.setPosition(void 0,-.4,.2),this.setRotation(-.55,void 0,void 0),this.generateKeyboard()):console.error("Language not supported")}addChar(e){this.replaceText(this.field.getText()+e)}replaceText(e){this.field&&this.field.setText(e)}setFieldToWrite(e){if(e)return this.field=ATON.getUINode(e),this}removeFieldToWrite(){return this.field=void 0,this}setOnEnter(e,t=!0){return t?this.onEnter=()=>{switch(this.defaultEnterBehavior){case"none":break;case"newline":this.addChar("\n");break;case"hideKeyboard":this.hide()}e()}:this.setOnEnter((()=>{this.onEnter(),e()}),!0),this}setHideOnEnter(e){return void 0===e&&(e=!0),this.defaultEnterBehavior=!0===e?"hideKeyboard":"none",this}setNextPanel(){this.keyboard.panels.forEach((e=>{this.remove(e)})),this.keyboard.currentPanel=(this.keyboard.currentPanel+1)%this.keyboard.panels.length,this.add(this.keyboard.panels[this.keyboard.currentPanel])}setNextCharset(){let e;for(let t=0;t<this.supportedCharsets.length;t++)if(this.supportedCharsets[t][1]===this.language){const n=(t+1)%this.supportedCharsets.length;e=this.supportedCharsets[n];break}this.language=e[1],this.keyboard.panels.forEach((e=>{this.remove(e)})),this.generateKeyboard()}generateKeyboard(){this.keyboard=new xl({language:this.language,fontFamily:ATON.SUI.PATH_FONT_JSON,fontTexture:ATON.SUI.PATH_FONT_TEX,fontSize:.035,backgroundColor:new fn(this.colors.keyboardBack),backgroundOpacity:1,shiftTexture:ATON.FE.PATH_RES_ICONS+"keyboard/shift.png",enterTexture:ATON.FE.PATH_RES_ICONS+"keyboard/enter.png",backspaceTexture:ATON.FE.PATH_RES_ICONS+"keyboard/backspace.png"}),this.add(this.keyboard.panels[0]),this.keyboard.keys.forEach((e=>{e.setOnLeave((()=>{e.setBaseColor(new fn(this.colors.button))})),e.setOnHover((()=>{e.setBaseColor(new fn(this.colors.hovered))})),e.setOnSelect((()=>{if(e.setBaseColor(new fn(this.colors.selected)),setTimeout((()=>{e.setBaseColor(new fn(this.colors.button))}),100),e.info.command)switch(e.info.command){case"switch":this.setNextPanel();break;case"switch-set":this.setNextCharset();break;case"enter":this.onEnter();break;case"space":this.addChar(" ");break;case"backspace":let e=this.field.getText();if(!e.length)break;this.replaceText(e.substring(0,e.length-1)||"");break;case"shift":console.log("SSHHHHIFT"),this.keyboard.toggleCase()}else e.info.input&&this.addChar(e.info.input)}))}))}},Ll.Field=class extends Bs{constructor(e,t,n,i){super(e,t,n,.06),this.uiid=e,this.keyboard=ATON.getUINode("keyboard"),this.keyboard||(this.keyboard=new ATON.SUI.Keyboard("keyboard","eng")),this.idToAttachKeyboard=i,this.setOnSelect((()=>{this.onSelectDefaultBehavior()}))}onSelectDefaultBehavior(){this.keyboard.setFieldToWrite(this.uiid),this.setTextColor(ATON.MatHub.colors.black),this.setText(""),this.idToAttachKeyboard?this.keyboard.attachTo(this.idToAttachKeyboard):this.keyboard.attachTo(this)}addOnEnterBehaviorToSetOnKeyboardWhenFieldIsSelected(e){return e?(this.setOnSelect((()=>{this.onSelectDefaultBehavior(),this.keyboard.setOnEnter(e)})),this):(console.error("Behavior not provided"),this)}setNextNodeToSelect(e){let t=ATON.getUINode(e);return t?(t.onSelect(),this):(console.error("Button doesn't exist"),this)}setPlaceholder(e){return e?(this.setText(e),this.setTextColor(ATON.MatHub.colors.lightgrey),this):(console.error("No placeholder provided"),this)}},Ll.init=()=>{Ll.initSelector(),Ll.fpTeleport=tc.createUINode();let e=new To(.4,.4,.9,32,1,!0),t=new $n(e,tc.MatHub.getMaterial("teleportLoc"));t.renderOrder=100,Ll.fpTeleport.add(t),Ll.fpTeleport.disablePicking(),Ll.fpTeleport.visible=!1,tc._rootUI.add(Ll.fpTeleport),Ll.PATH_FONT_JSON||(Ll.PATH_FONT_JSON=tc.PATH_RES+"fonts/Roboto-msdf.json"),Ll.PATH_FONT_TEX||(Ll.PATH_FONT_TEX=tc.PATH_RES+"fonts/Roboto-msdf.png"),Ll.gMeasures=tc.createUINode(),Ll._prevMPoint=void 0,Ll._measLabels=[],tc._rootUI.add(Ll.gMeasures);let n=(new Nn).setFromPoints([new Ye,new Ye]);Ll._measLine=new xo(n,tc.MatHub.getMaterial("measurement")),Ll._measLine.visible=!1,tc._rootUI.add(Ll._measLine),Ll.gPoints=tc.createUINode(),tc._rootUI.add(Ll.gPoints),Ll.gLocNodes=tc.createUINode(),tc._rootUI.add(Ll.gLocNodes),Ll.buildInfoNode(),Ll.bShowInfo=!0,Ll._labelScale=tc.Utils.isMobile()?80:90,Ll._labelScaleVR=2,Ll.sprites={},Ll._sync=0},Ll.getOrCreateSpritePointEdit=()=>(Ll.sprites.pointEdit||(Ll.sprites.pointEdit=new Ja({map:(new Yo).load(tc.PATH_RES+"sui-point.png"),color:tc.MatHub.colors.orange,transparent:!0,opacity:1,depthTest:!1})),Ll.sprites.pointEdit),Ll.getOrCreateSpriteSemIcon=()=>(Ll.sprites.semIcon||(Ll.sprites.semIcon=new Ja({map:(new Yo).load(tc.PATH_RES+"sui-sem.png"),transparent:!0,opacity:1,depthWrite:!1,depthTest:!1})),Ll.sprites.semIcon),Ll.getOrCreateSpriteLP=()=>(Ll.sprites.lp||(Ll.sprites.lp=new Ja({map:(new Yo).load(tc.PATH_RES+"sui-lp.png"),transparent:!0,opacity:1,depthWrite:!1}),Ll.sprites.lp.sizeAttenuation=!1),Ll.sprites.lp),Ll.getOrCreateSpriteWalk=()=>(Ll.sprites.walk||(Ll.sprites.walk=new Ja({map:(new Yo).load(tc.PATH_RES+"sui-walk.png"),transparent:!0,opacity:1,depthWrite:!1})),Ll.sprites.walk),Ll.initSelector=()=>{Ll.mainSelector=tc.createUINode(),Ll._mSelectorSphere=new $n(tc.Utils.geomUnitSphere,tc.MatHub.getMaterial("selector")),Ll._mSelectorSphere.renderOrder=100,Ll.mainSelector.add(Ll._mSelectorSphere),Ll.mainSelector.disablePicking(),Ll.setSelectorRadius(.05),Ll.mainSelector.visible=!1,tc._rootUI.add(Ll.mainSelector),Ll._selOffset=new Ye,Ll._bShowSelector=!0},Ll.enableLPIcons=()=>{Ll.gLPIcons=tc.createUINode(),Ll.gLPIcons.disablePicking(),tc._rootUI.add(Ll.gLPIcons)},Ll.enableSemIcons=()=>{Ll.gSemIcons=tc.createUINode(),Ll.gSemIcons.disablePicking(),tc._rootUI.add(Ll.gSemIcons)},Ll.showSelector=e=>{Ll._bShowSelector=e},Ll.setSelectorRadius=e=>{Ll._selectorRad=e,Ll.mainSelector.scale.set(e,e,e)},Ll.setSelectorOffset=(e,t,n)=>{void 0!==e&&(Ll._selOffset.x=e),void 0!==t&&(Ll._selOffset.y=t),void 0!==n&&(Ll._selOffset.z=n);let i=tc.getSceneQueriedPoint();void 0!==i&&(Ll.mainSelector.position.x=i.x+Ll._selOffset.x,Ll.mainSelector.position.y=i.y+Ll._selOffset.y,Ll.mainSelector.position.z=i.z+Ll._selOffset.z)},Ll.getSelectorRadius=()=>Ll._selectorRad,Ll.getSelectorLocation=()=>Ll.mainSelector.position,Ll.setSelectorModel=(e,t)=>{void 0!==e&&(Ll.mainSelector.removeChildren(),Ll.mainSelector.load(e).disablePicking(),t&&Ll.mainSelector.setMaterial(tc.MatHub.getMaterial("selector")))},Ll.setSelectorColor=(e,t)=>{let n=tc.MatHub.materials.selector;n.uniforms.tint.value=e,void 0!==t&&(n.uniforms.opacity.value=t)},Ll.addSemIcon=(e,t)=>{if(void 0===Ll.gSemIcons)return;let n=(new Ze).setFromObject(t),i=new ft;n.getBoundingSphere(i);let r=new mo(Ll.getOrCreateSpriteSemIcon());r.position.copy(i.center),r.scale.set(.8,.8,1),r.name=e,Ll.gSemIcons.add(r)},Ll.addLPIcon=e=>{if(void 0===Ll.gLPIcons)return;let t=e._near,n=new mo(Ll.getOrCreateSpriteLP());n.position.copy(e.pos),n.scale.set(.1,.1,.1);let i=new $n(tc.Utils.geomUnitSphere,tc.MatHub.materials.lp);i.scale.set(t,t,t),i.position.copy(e.pos),Ll.gLPIcons.add(n),Ll.gLPIcons.add(i)},Ll.setSemIconsOpacity=e=>{tc.MatHub.spriteSemIcon.opacity=void 0===e?1:e},Ll.buildInfoNode=()=>{Ll.infoNode=tc.createUINode(),Ll.infoNode.attachToRoot(),Ll.infoContainer=new ThreeMeshUI.Block({width:.2,height:.05,padding:.01,borderRadius:.02,backgroundColor:tc.MatHub.colors.black,backgroundOpacity:.4,fontFamily:Ll.PATH_FONT_JSON,fontTexture:Ll.PATH_FONT_TEX,justifyContent:"center",textAlign:"center"}),Ll.infoContainer.position.y=.03,Ll.infoNode.add(Ll.infoContainer),Ll.infoNodeText=new ThreeMeshUI.Text({content:"Info",fontSize:.02,fontColor:tc.MatHub.colors.white}),Ll.infoContainer.add(Ll.infoNodeText),ThreeMeshUI.update()},Ll.getInfoNode=()=>Ll.infoNode,Ll.setInfoNodeText=e=>{Ll.bShowInfo&&(Ll.infoNodeText.set({content:e}),ThreeMeshUI.update())},Ll.createHorizontalContainer=(e,t)=>{let n=t.length,i=.03,r=0,a=[],o=0;t.forEach((e=>{let t=e.getDimensions();a.push(t[1]),r+=t[0]}));let s=Math.max(...a),l=r+n*i+i,c=new Ll.Label(e,l,s+.03),d=l/2;return t.forEach((e=>{let t=e.getDimensions()[0]/2,n=d-o-t-i;e.setPosition(n,0,.01),d=n,o=t,c.add(e)})),c},Ll.verticalPositions=(e,t,n)=>{let i=e.length,r=0,a=[],o=0;e.forEach((e=>{let t=e.getDimensions();a.push(t[0]),r+=t[1]}));let s=Math.max(...a),l=r+i*n+n,c=new Ll.Label(t,s+.05,l),d=l/2;return e.forEach((e=>{c.add(e);let t=e.getDimensions()[1]/2,i=d-o-t-n;e.setPosition(0,i,.01),d=i,o=t})),c},Ll.createAnnotationDataBlock=(e,t,n=void 0,i=void 0,r=void 0)=>{if(e===tc.FE.SEMSHAPE_CONVEX&&!tc.SemFactory.bConvexBuilding)return;let a,o,s=tc.getUINode("annPopUp");if(!s){s=tc.createUINode("annPopUp");let l=new Ll.Label("annTitle",.25,.1).setBackgroundOpacity(0).setText("New Annotation").setFontSize(.05).setTextAlign("left"),c=Ll.createHorizontalContainer("annTitleContainer",[l]),d=new Ll.Label("annIDlbl",.25,.1).setBackgroundOpacity(0).setText("ID").setFontSize(.05).setTextAlign("left"),h=new Ll.Label("annID",1,.1);void 0===n?h.setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black).setOnSelect((()=>{let e=tc.getUINode("idKeyboard");if(e)e.delete();else{let e=new tc.SUI.Keyboard("idKeyboard","eng");e.setFieldToWrite("annID").setHideOnEnter(!0).setOnEnter((()=>{a=h.getText(),e.delete()})).show().attachTo(h)}})):h.setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black).setText(n).setOnSelect((()=>{let e=tc.getUINode("idKeyboard");if(e)e.delete();else{let e=new tc.SUI.Keyboard("idKeyboard","eng");e.setFieldToWrite("annID").setHideOnEnter(!0).setOnEnter((()=>{a=h.getText(),e.delete()})).show().attachTo(h)}}));let u=Ll.createHorizontalContainer("annIDContainer",[h,d]),p=new Ll.Label("annTxtlbl",.25,.1).setBackgroundOpacity(0).setText("Annotation text").setFontSize(.05).setTextAlign("left"),m=new Ll.Label("annText",1,.1);void 0===i?m.setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black).setOnSelect((()=>{let e=tc.getUINode("textKeyboard");if(e)e.delete();else{let e=new tc.SUI.Keyboard("textKeyboard","eng");e.setFieldToWrite("annText").setHideOnEnter(!0).setOnEnter((()=>{o=m.getText(),e.delete()})).show().attachTo(m)}})):m.setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black).setText(i.replace(/<[^>]*>/g,"")).setOnSelect((()=>{let e=tc.getUINode("textKeyboard");if(e)e.delete();else{let e=new tc.SUI.Keyboard("textKeyboard","eng");e.setFieldToWrite("annText").setHideOnEnter(!0).setOnEnter((()=>{o=m.getText(),e.delete()})).show().attachTo(m)}}));let f=Ll.createHorizontalContainer("annTextContainer",[m,p]),g=new Ll.Button("recBTN",2);void 0!==r&&g.setText("Play Vocal Note").setOnSelect((()=>{new Audio(r).play()}));let _,v=new Ll.Button("recBTN",2).setText("Record Vocal Note").setOnSelect((()=>{v.getBSwitched()?(v.switch(!1),Nl.stop(),Nl=void 0,Ol=void 0,Il=[]):(v.switch(!0),navigator.mediaDevices.getUserMedia({audio:!0}).then((function(e){Nl=new MediaRecorder(e),Nl.ondataavailable=function(e){e.data.size>0&&Il.push(e.data)},Nl.onstop=function(){const e=new Blob(Il,{type:"audio/wav"});var t;(t=e,new Promise(((e,n)=>{const i=new FileReader;i.onload=()=>{const t=i.result.split(",")[1];e(t)},i.onerror=e=>{n(e)},i.readAsDataURL(t)}))).then((e=>{Ol="data:audio/wav;base64,"+e})).catch((e=>{console.error("Error converting Blob to base64:",e)}))},Nl.start()})).catch((function(e){console.log("An error has occured: ",e)})))})),S=new Ll.Button("saveBTN",2).setText("Add").setOnSelect((()=>{let i=a;n&&(i=n);let r,l=tc.ROOT_NID,c='"<p>'+o+'</p>"';if(void 0===i||i.length<2||i===tc.ROOT_NID)return;if(i===l)return;e===tc.FE.SEMSHAPE_SPHERE&&(r=tc.SemFactory.createSurfaceSphere(i,t));const d=tc.SemFactory.convexPoints;e===tc.FE.SEMSHAPE_CONVEX&&(r=tc.SemFactory.completeConvexShape(i)),console.log("CONVEX S: ",r),void 0===r&&(r=tc.getSemanticNode(i));let h=tc.XPFNetwork.getCurrentSemanticGroup();if(h)h.add(r);else{let e=tc.getSemanticNode(l);e?e.add(r):tc.getRootSemantics().add(r)}c&&c.length>2&&r.setDescription(c),Ol&&r.setAudio(Ol);let u={semanticgraph:{}};u.semanticgraph.nodes={},u.semanticgraph.nodes[r.nid]={},e===tc.FE.SEMSHAPE_SPHERE&&(u.semanticgraph.nodes[r.nid].spheres=tc.SceneHub.getJSONsemanticSpheresList(i)),e===tc.FE.SEMSHAPE_CONVEX&&(u.semanticgraph.nodes[r.nid].convexshapes=tc.SceneHub.getJSONsemanticConvexShapes(i)),r.getDescription()&&(u.semanticgraph.nodes[r.nid].description=r.getDescription()),r.getAudio()&&(u.semanticgraph.nodes[r.nid].audio=r.getAudio()),u.semanticgraph.edges=tc.SceneHub.getJSONgraphEdges(tc.NTYPES.SEM),console.log(u),tc.SceneHub._bEdit=!0,tc.SceneHub.sendEdit(u,tc.SceneHub.MODE_ADD),tc.Photon.fireEvent("AFE_AddSceneEdit",u),tc.SceneHub._bEdit=!1,s.delete();const p={action:e===tc.FE.SEMSHAPE_SPHERE?"add_sphere":"add_convex",type:e,node:r,point:e===tc.FE.SEMSHAPE_SPHERE?t:d,radius:e===tc.FE.SEMSHAPE_SPHERE?tc.SUI.getSelectorRadius():void 0};tc.undoStack.push(p),e===tc.FE.SEMSHAPE_CONVEX&&tc.SceneHub.parseScene(u)}));_=r?Ll.verticalPositions([c,u,f,g,v,S],"firstContainerAnn",.03):Ll.verticalPositions([c,u,f,v,S],"firstContainerAnn",.03),s.add(_)}return s},Ll.showAnnotationPopupXR=e=>{if(console.log(`semid: ${e}`),void 0===e)return;let t=tc.getSemanticNode(e).getAudio(),n=HATHOR.getHTMLDescriptionFromSemNode(e),i=tc.getUINode("annPopUp");if(!i){i=tc.createUINode("annPopUp");let r,a=new Ll.Label("annTitle",.25,.1).setBackgroundOpacity(0).setText(e).setFontSize(.05).setTextAlign("left"),o=Ll.createHorizontalContainer("annTitleContainer",[a]),s=new Ll.Label("annTxtlbl",.25,.1).setBackgroundOpacity(0).setText(n.replace(/<[^>]*>/g,"")).setFontSize(.05).setTextAlign("left"),l=Ll.createHorizontalContainer("annTextContainer",[s]),c=new Ll.Button("recBTN",2).setText("Play Vocal Note").setOnSelect((()=>{new Audio(t).play()})),d=new Ll.Button("recBTN",2).setText("Edit Annotation").setOnSelect((()=>{i.delete(),Ll.createAnnotationDataBlock(void 0,void 0,e,n,t).setPosition(4.5,2.5,-2.3).setRotation(0,300,0).setScale(1.8).attachToRoot()})),h=new Ll.Button("closeBTN",2).setText("Close").setOnSelect((()=>{i.delete()}));new Promise(((e,n)=>{tc.FE.checkAuth((n=>{n.username?(r=t?Ll.verticalPositions([o,l,c,d,h],"firstContainerAnn",.03):Ll.verticalPositions([o,l,d,h],"firstContainerAnn",.03),e(r)):(r=t?Ll.verticalPositions([o,l,c,h],"firstContainerAnn",.03):Ll.verticalPositions([o,l,h],"firstContainerAnn",.03),e(r))}))})).then((e=>(i.add(e),i)))}return i},Ll.createSketchfabBlock=(e,t)=>{let n=tc.getUINode(e);if(!n){n=tc.createUINode(e);let i=new Ll.Label("sketchfabIcon",.1,.1).setIcon(tc.FE.PATH_RES_ICONS+"sketchfab-logo.png",!1),r=new Ll.Label("sketchfabTitle",.25,.1).setBackgroundOpacity(0).setText("Sketchfab").setFontSize(.05).setTextAlign("left"),a=Ll.createHorizontalContainer("sketchfabBlockTitleContainer",[r,i]),o=new Ll.Label(t,1,.1).setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black),s=Ll.verticalPositions([a,o],"firstContainerSketch",.03);n.add(s)}return n},Ll.createSketchCard=(e,t,n,i,r,a=!1,o)=>{let s=new Ll.Label(e+"ImageSketchContainer",.5,.28),l=tc.SUI.buildPanelNode(e+"ImageSketchfab",r,.5,.28,!1,!0,0);s.add(l),l.setPosition(void 0,void 0,.002);let c=new Ll.Label("modelName",.3,.2);try{c.setText(i)}catch(e){console.error(e),c.setText("Model")}let d,h=new Ll.Button(e+"buttonNode",2).setText("Add Model").setOnSelect(o),u=[s,c,h];return a||(d=new Ll.Button(e+"bookmark",2).setText("Add Bookmark").setOnSelect((()=>{tc.FE.checkAuth((i=>{const a={username:i.username,obj:{name:t,type:"sketchfab",url:n,tag:"sceneobj",assetId:e,thumbnail:r}};$.ajax({url:tc.PATH_RESTAPI+"addtocollection",type:"POST",data:JSON.stringify(a),contentType:"application/json; charset=utf-8",dataType:"json",success:e=>{tc._userObjects=e,console.log("NEW LIST: ",tc._userObjects)}}).fail((e=>{console.log(e)}))}))})),u=[s,c,h,d]),Ll.verticalPositions(u,"backCard",.03).setBaseColor(tc.MatHub.colors.black)},Ll.changeVisibility=(e,t)=>{e.forEach((e=>{e.visible=t}))},Ll.checkAuth=e=>{tc.Utils.checkAuth((t=>{Ll._userAuth=t,void 0!==t.username&&void 0===tc.Photon._username&&tc.Photon.setUsername(t.username),e&&e(t)}))},Ll.createMessageLabel=(e,t,n,i,r=.04,a)=>{let o=new Ll.Label(e,t,n,r);o.setMaterialById("red").setText(i).show().attachToRoot(),"editModeLabelMessage"===e&&"writeAnnotationToolbar"===e||(tc.Nav._camera.add(o),o.setPosition(0,0,-2.5)),a&&setTimeout((()=>{tc.getUINode(e).hide()}),a)},Ll.toggleBtn=(e,t)=>{e.forEach((e=>{e._bSwitched&&e.switch(!1)})),t.switch(!0)},Ll.annotationToolbar=e=>{let t=new Ll.Button("undoBtn").setIcon(tc.FE.PATH_RES_ICONS+"undo.png").setOnSelect((()=>{Rl.undoAnnotation()})),n=new Ll.Button("redoBtn").setIcon(tc.FE.PATH_RES_ICONS+"redo.png").setOnSelect((()=>{Rl.redoAnnotation()})),i=Ll.createHorizontalContainer("redoUndoContainer",[n,t]).setBackgroundOpacity(0).setOnHover((()=>{})).setOnLeave((()=>{})),r=new Ll.Button("pencilBtn").setIcon(tc.FE.PATH_RES_ICONS+"edit.png").setOnSelect((()=>{a._bSwitched&&a.switch(!1),r.switch(!0),Rl.startWritingAnnotation()})).switch(!0),a=new Ll.Button("eraserBtn").setIcon(tc.FE.PATH_RES_ICONS+"eraser.png").setOnSelect((()=>{r._bSwitched&&r.switch(!1),a.switch(!0),Rl.startErasingAnnotation()})),o=Ll.createHorizontalContainer("toolsContainer",[r,a]).setBackgroundOpacity(0).setOnHover((()=>{})),s=new Ll.Button("blackBtn").setIcon(tc.FE.PATH_RES_ICONS+"blackBtn.png").setOnSelect((()=>{tc.SemFactory.annotationColor=0,Ll.toggleBtn(d,s)})).switch(!0),l=new Ll.Button("redBtn").setIcon(tc.FE.PATH_RES_ICONS+"redBtn.png").setOnSelect((()=>{tc.SemFactory.annotationColor=16711680,Ll.toggleBtn(d,l)})),c=new Ll.Button("blueBtn").setIcon(tc.FE.PATH_RES_ICONS+"blueBtn.png").setOnSelect((()=>{tc.SemFactory.annotationColor=255,Ll.toggleBtn(d,c)})),d=[c,l,s],h=Ll.createHorizontalContainer("toolsContainer",d).setBackgroundOpacity(0).setOnHover((()=>{})),u=new Ll.Label("pencilSize",.3,.1,.04).setText(tc.SemFactory.annotationWidth.toString()),p=new Ll.Button("minusBtn").setIcon(tc.FE.PATH_RES_ICONS+"minus.png").setOnSelect((()=>{tc.SemFactory.annotationWidth>1&&(tc.SemFactory.annotationWidth-=1,u.setText(tc.SemFactory.annotationWidth.toString()))})),m=new Ll.Button("plusBtn").setIcon(tc.FE.PATH_RES_ICONS+"plus.png").setOnSelect((()=>{tc.SemFactory.annotationWidth<=20&&(tc.SemFactory.annotationWidth+=1,u.setText(tc.SemFactory.annotationWidth.toString()))})),f=Ll.createHorizontalContainer("toolsContainer",[p,u,m]).setBackgroundOpacity(0).setOnHover((()=>{})).setOnLeave((()=>{})),g=Ll.verticalPositions([i,o,h,f],e,.03);return g.attachToRoot(),g},Ll.baseToolbarSetup=()=>{let e=[new tc.SUI.Button("sui_sketchfab"),new tc.SUI.Button("sui_talk"),new tc.SUI.Button("sui_photon"),new tc.SUI.Button("sui_profile")],t=[new tc.SUI.Button("sui_exitxr"),new tc.SUI.Button("sui_pdf"),new tc.SUI.Button("sui_uscale"),new tc.SUI.Button("sui_home")],n=[tc.SUI.createToolbar("toolbarTopMenu",e),tc.SUI.createToolbar("toolbarBottomMenu",t)];return tc.SUI.verticalPositions(n,"baseToolbar",.03)},Ll.toolbarEditor=e=>Ll.createToolbar("editToolbarMenu",e),Ll.toggleButtonsProfile=(e,t,n)=>{tc.getUINode(e)&&tc.getUINode(e).switch(!0),tc.getUINode(t)&&tc.getUINode(t).switch(!1),n?tc.getUINode("editToolbarMenu").show():tc.getUINode("editToolbarMenu").hide()},Ll.createProfileBlock=async e=>{let t=tc.createUINode(e);const n=new Promise(((t,n)=>{Ll.checkAuth((n=>{let i=[];if(void 0!==n.username){let e=new Bs("userLogged",.1,.1).setIcon(tc.FE.PATH_RES_ICONS+"user.png",!0),t=new Bs("userLogged",.5,.07).setText(n.username).setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black),r=new Hs("userMode",1,1,.03).setIcon(tc.FE.PATH_RES_ICONS+"user.png",!1).setText("User"),a=new Hs("editMode",1,1,.03).setIcon(tc.FE.PATH_RES_ICONS+"edit_mode.png",!1).setText("Editor");"editor"===tc.FE._uiCurrProfile?a.switch(!0):r.switch(!0);let o=Ll.createToolbar("mod",[a,r]).setBackgroundOpacity(0);r.setOnSelect((()=>{r.getBSwitched()||(tc.FE.uiLoadProfile("default"),tc.SUI.toggleButtonsProfile("userMode","editMode",!1))})),a.setOnSelect((()=>{a.getBSwitched()||(tc.FE.uiLoadProfile("editor"),tc.SUI.toggleButtonsProfile("editMode","userMode",!0))}));let s=new Hs("logoutButton",2,1,1.3).setText("Logout").setBaseColor(tc.MatHub.colors.red).setTextColor(tc.MatHub.colors.white);i.push(e,t,o,s)}else{let t=new Ll.Field("username",.5,.07,e).addOnEnterBehaviorToSetOnKeyboardWhenFieldIsSelected((()=>{t.setNextNodeToSelect("password")})).setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black).setPlaceholder("Username"),n=new Ll.Field("password",.5,.07).addOnEnterBehaviorToSetOnKeyboardWhenFieldIsSelected((()=>{n.setNextNodeToSelect("loginButton")})).setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black).setPlaceholder("Password"),r=new Ll.Button("loginButton",2).setText("LOGIN").setBaseColor(tc.MatHub.colors.green);i.push(t,n,r)}t(i)}))}));return await n.then((e=>{let n=Ll.verticalPositions(e,"containerProfileBlock",.03),i=tc.getUINode("logoutButton");void 0!==i&&i.setOnSelect((()=>{$.get(tc.PATH_RESTAPI+"logout",(e=>{tc.fireEvent("Logout"),n.hide()}))}));let r=tc.getUINode("loginButton");if(void 0!==r){let e=tc.getUINode("username"),t=tc.getUINode("password");r.setOnSelect((()=>{let i=JSON.stringify({username:e.getText(),password:t.getText()});$.ajax({url:tc.PATH_RESTAPI+"login",type:"POST",data:i,contentType:"application/json; charset=utf-8",dataType:"json",success:e=>{console.log(e),e&&(tc.fireEvent("Login",e),console.log("LOGGED IN"),n.hide())}}).fail((e=>{console.log("Login failed"),n.hide()}))}))}return t.add(n),ThreeMeshUI.update(),t}))},Ll.createChatBlock=e=>{let t=tc.createUINode(e),n=[],i=new Ll.Label("titleContainer",.7,.07).setText("Chat Session"),r=new Ll.Label("chatBox",.7,.4).setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black),a=new Ll.Label("chatTextBox",.7,.05);a.setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black);let o=new Ll.Button("testButton");o.setText("Push Me"),n.push(i,r,a,o);let s=Ll.verticalPositions(n,"containerChatBlock",.03);return console.log(s.children),t.add(s),ThreeMeshUI.update(),t},Ll.createMsgContainer=(e,t)=>{let n=[],i=new Ll.Label("userName",.4,.05).setText(e),r=new Ll.Label("msg",.4,.05).setText(t);return n.push(i,r),Ll.verticalPositions(n,"containerMsgBlock",.03)},Ll.verticalToolbarEditor=(e,t)=>{let n=new tc.SUI.Button("moveObj");n.setIcon(tc.FE.PATH_RES_ICONS+"move.png").setOnSelect((()=>{tc.getUINode(e+"Axis")&&tc.getUINode(e+"Axis").delete(),n.getBSwitched()?(tc._lastSelectedEditMode=void 0,t.setNowDragging(!1),n.switch(!1)):(tc._lastSelectedEditMode="drag",Ll.toggleBtn(a,n),t.setNowDragging(!0))}));let i=new tc.SUI.Button("rotateObj");i.setIcon(tc.FE.PATH_RES_ICONS+"rotate.png").setOnSelect((()=>{if(i.getBSwitched())tc._lastSelectedAxis=void 0,tc._lastSelectedEditMode=void 0,t.setNowRotating(!1),i.switch(!1),tc.getUINode(e+"Axis")&&tc.getUINode(e+"Axis").delete();else{tc._lastSelectedEditMode="rot",Ll.toggleBtn(a,i),t.setNowRotating(!0),tc._lastSelectedAxis=void 0;let n=new tc.SUI.Button("rotX",1,1,1.3);n.setText("X").setOnSelect((()=>{Ll.toggleBtn(s,n),tc._lastSelectedAxis="x",tc.fireEvent("ChangedRotationAxis",tc._lastSelectedAxis)}));let r=new tc.SUI.Button("rotY",1,1,1.3);r.setText("Y").setOnSelect((()=>{Ll.toggleBtn(s,r),tc._lastSelectedAxis="y",tc.fireEvent("ChangedRotationAxis",tc._lastSelectedAxis)}));let o=new tc.SUI.Button("rotZ",1,1,1.3);o.setText("Z").setOnSelect((()=>{Ll.toggleBtn(s,o),tc._lastSelectedAxis="z",tc.fireEvent("ChangedRotationAxis",tc._lastSelectedAxis)}));let s=[o,r,n];tc.getUINode(e+"Axis")||Ll.createHorizontalContainer(e+"Axis",s).setPosition(0,-.15,0).attachTo(e)}}));let r=new tc.SUI.Button("scaleObj");r.setIcon(tc.FE.PATH_RES_ICONS+"scale.png").setOnSelect((()=>{tc.getUINode(e+"Axis")&&tc.getUINode(e+"Axis").delete(),r.getBSwitched()?(tc._lastSelectedEditMode=void 0,r.switch(!1),t.setNowScaling(!1)):(tc._lastSelectedEditMode="scale",Ll.toggleBtn(a,r),t.setNowScaling(!0))}));let a=[n,i,r],o=Ll.createHorizontalContainer(e,a);for(let e of a)e.setPosition(e.position.x-.005,void 0,void 0);return o},Ll.createToolbar=(e,t,n,i)=>(t.length,Ll.STD_BTN_SIZE,Ll.createHorizontalContainer(e,t)),Ll.createLayerRow=e=>{let t=new Ll.Button(e+"Button"),n=new Ll.Label(e+"Label",.5,.07).setText(e);return Ll.createToolbar(e+"Toolbar",[n,t])},Ll.createLayersNodes=(e,t)=>{let n=tc.getUINode(e);if(!n){let i=tc.snodes,r=[];for(let e in i){let n=i[e];if("."!==e){let i=Ll.createLayerRow(e);r.unshift(i);let a=tc.getUINode(e+"Button").setBaseColor(tc.MatHub.colors.green);a.setOnSelect((()=>{n.visible?(tc.FE.switchNode(e,!1,t),a.setBaseColor(tc.MatHub.colors.black)):(tc.FE.switchNode(e,!0,t),a.setBaseColor(tc.MatHub.colors.green))}))}}n=Ll.verticalPositions(r,e,.03)}return n},Ll.createImageFromUrl=(e,t,n,i,r,a=2)=>{void 0===t&&(t=1),void 0===n&&(n=1);let o=new Co({map:tc.Utils.textureLoader.load(e),transparent:i,depthWrite:r,side:a});return new $n(new vi(t,n),o).setPosition(void 0,void 0,.02)},Ll.buildPanelNode=(e,t,n,i,r,a,o=2)=>{void 0===n&&(n=1),void 0===i&&(i=1);let s=tc.createUINode(e),l=new $n(new vi(n,i,2),tc.MatHub.materials.fullyTransparent);return s.add(l),void 0!==t&&tc.Utils.textureLoader.load(t,(e=>{l.material=new Ao({map:e,transparent:r,depthWrite:a,side:2})})),s},Ll.addMeasurementPoint=e=>{if(void 0===e)return;let t=.01,n=.001;if(void 0===Ll._prevMPoint){Ll._prevMPoint=e;let t=Ll._measLine.geometry.attributes.position.array;return t[0]=e.x,t[1]=e.y,void(t[2]=e.z)}Ll._measLine.visible=!1;let i=Ll._prevMPoint.distanceTo(e);t*=i,n*=i;let r=new $n(tc.Utils.geomUnitCube,tc.MatHub.getMaterial("measurement"));r.position.copy(Ll._prevMPoint),r.scale.set(t,t,t),Ll.gMeasures.add(r);let a=new $n(tc.Utils.geomUnitCube,tc.MatHub.getMaterial("measurement"));a.position.copy(e),a.scale.set(t,t,t),Ll.gMeasures.add(a);let o=2*i,s=(new Nn).setFromPoints([Ll._prevMPoint,e]);Ll.gMeasures.add(new xo(s,tc.MatHub.getMaterial("measurement")));let l=new Ll.Label;l.setBaseColor(tc.MatHub.colors.white).setTextColor(tc.MatHub.colors.black),l.userData.vStart=new Ye,l.userData.vEnd=new Ye,l.userData.vStart.copy(Ll._prevMPoint),l.userData.vEnd.copy(e),l.userData.vSEdir=new Ye,l.userData.vSEdir.x=l.userData.vStart.x-l.userData.vEnd.x,l.userData.vSEdir.y=l.userData.vStart.y-l.userData.vEnd.y,l.userData.vSEdir.z=l.userData.vStart.z-l.userData.vEnd.z,l.userData.vSEdir.normalize(),l.setPosition(.5*(Ll._prevMPoint.x+e.x),.5*(Ll._prevMPoint.y+e.y),.5*(Ll._prevMPoint.z+e.z)),l.setScale(o).setText(tc.Utils.getHumanReadableDistance(i)),Ll.gMeasures.add(l),Ll._measLabels.push(l);let c={};return c.A=l.userData.vStart,c.B=l.userData.vEnd,Ll._prevMPoint=void 0,c},Ll.clearMeasurements=()=>{Ll.gMeasures.removeChildren(),Ll._measLabels=[]},Ll._updateMeasurements=()=>{if(!(Ll._measLabels.length<=0))for(let e in Ll._measLabels)Ll._measLabels[e].orientToCamera()},Ll.addNodeToCamera=(e,t)=>{if(tc.getUINode(e)){let n=!1;for(let t in tc.Nav._camera.children)tc.Nav._camera.children[t].nid===e&&(n=!0);if(!n){let n=tc.getUINode(e);tc.Nav._camera.add(n),n.setPosition(t.x,t.y,t.z)}}},Ll.update=()=>{if(tc.Nav.isTransitioning()||tc._bPauseQuery)Ll.infoNode.visible=!1;else{if(Ll._prevMPoint){if(tc._queryDataScene){let e=Ll._measLine.geometry.attributes.position.array;e[3]=tc._queryDataScene.p.x,e[4]=tc._queryDataScene.p.y,e[5]=tc._queryDataScene.p.z,Ll._measLine.geometry.attributes.position.needsUpdate=!0}Ll._measLine.visible=!0}else Ll._measLine.visible=!1;if(tc._queryDataScene&&!tc.Nav._bInteracting?(Ll._bShowSelector&&(Ll.mainSelector.visible=!0),Ll.mainSelector.position.x=tc._queryDataScene.p.x+Ll._selOffset.x,Ll.mainSelector.position.y=tc._queryDataScene.p.y+Ll._selOffset.y,Ll.mainSelector.position.z=tc._queryDataScene.p.z+Ll._selOffset.z):Ll.mainSelector.visible=!1,Ll.gSemIcons&&(tc.Nav._bInteracting?Ll.gSemIcons.hide():void 0===tc._hoveredSemNode&&Ll.gSemIcons.show()),tc.Nav.isOrbit()&&!tc.XR._bPresenting||!tc.Nav.currentQueryValidForLocomotion()?Ll.fpTeleport.visible=!1:(Ll.fpTeleport.visible=!0,Ll.fpTeleport.position.copy(tc._queryDataScene.p)),tc.XR._pointerLineMesh){let e=0;tc._queryDataScene&&(e=tc._queryDataScene.d),tc._queryDataUI&&(e<=0||tc._queryDataUI.d<e)&&(e=tc._queryDataUI.d,Ll.mainSelector.visible=!1,Ll.fpTeleport.visible=!1),e>0?(tc.XR._pointerLineMesh.visible=!0,tc.XR._pointerLineMesh.scale.set(1,1,e)):tc.XR._pointerLineMesh.visible=!1}if(Ll._updateMeasurements(),tc._queryDataSem)tc.XR._bPresenting&&(Ll.bShowInfo&&(Ll.infoNode.visible=!0),tc.XR.controller0?(Ll.infoNode.position.copy(tc.XR.controller0pos),Ll.infoNode.position.x-=.1*tc.XR.controller0dir.x,Ll.infoNode.position.y-=.1*tc.XR.controller0dir.y,Ll.infoNode.position.z-=.1*tc.XR.controller0dir.z,Ll.infoNode.setScale(1)):(Ll.infoNode.position.lerpVectors(tc._queryDataSem.p,tc.Nav._currPOV.pos,.1),Ll.infoNode.setScale(tc._queryDataSem.d*Ll._labelScaleVR)),Ll.infoNode.orientToCamera()),tc.Photon._bStreamFocus||(Ll.mainSelector.visible=!1);else if(tc.XR._bPresenting&&Ll.bShowInfo&&tc._queryDataScene&&void 0!==tc.XPFNetwork._semCurr){Ll.infoNode.position.lerpVectors(tc._queryDataScene.p,tc.Nav._currPOV.pos,.5);const e=tc._queryDataScene.d*(tc.Nav._currPOV.fov/Ll._labelScale);Ll.infoNode.setScale(e),Ll.infoNode.orientToCamera(),Ll.infoNode.visible=!0}else Ll.infoNode.visible=!1;if(Ll.mainSelector.visible&&tc.Photon._bStreamFocus){let e=Ll._selectorRad*(1+.2*Math.cos(10*tc._clock.elapsedTime));Ll.mainSelector.scale.set(e,e,e);let t=tc.getSceneFocalPoint();void 0!==t&&void 0!==tc.plight&&(tc.enablePointLight(),tc.plight.position.copy(t),tc.plight.distance=2*Ll._selectorRad)}Ll.addNodeToCamera("editModeLabelMessage",{x:1,y:.4,z:-1.8}),Ll.addNodeToCamera("annotationToolbar",{x:1,y:.4,z:-1.8})}};const Ul=Ll;let Dl={POPUP_DT:500,init:()=>{Dl.PATH_RES_ICONS=ATON.PATH_RES+"icons/",Dl._setupBase()},_setupBase:()=>{document.body.oncontextmenu=()=>!1},basicSetup:()=>{},showSemLabel:e=>{$(Dl._elLabel).html(e),$(Dl._elLabel).show()},hideSemLabel:()=>{$(Dl._elLabel).hide(),$(Dl._elLabel).html("")},button:e=>{e.icon&&!e.icon.includes(".")&&(e.icon=ATON.UI.PATH_RES_ICONS+e.icon+".png");let t=document.createElement("div");e.id&&(t.id=e.id),t.className="atonBTN",e.icon&&(t.innerHTML="<img src='"+e.icon+"'>"),e.text&&(t.innerHTML+="<span>"+e.text+"</span>"),e.tooltip&&(t.title=e.tooltip);let n=$(t);return e.onpress&&n.bind("click",e.onpress),n},buttonFullscreen:()=>{},disclosureWidget:e=>{let t=document.createElement("details"),n=$(t);return n.append(e.content),n.prepend("<summary>"+e.summary+"</summary>"),n},createSearch:e=>{let t=e.id??"idScenes",n=e.inputId??"sid",i=e.className??"",r=e.datalist??"sidlist",a=e.placeholder??"Search by term, user or paste a scene-ID...",o=document.createElement("div");o.id=t,""!==i&&(o.className=i);let s=document.createElement("input");s.id=n,s.type="text",s.setAttribute("list",r),s.placeholder=a;let l=document.createElement("datalist");l.id=r;let c=document.createElement("button");return c.innerHTML="Go",c.disabled=!0,c.onclick=()=>ATON.Utils.goToScene(s.value),c.id="btn-go",c.className="atonBTN",c.style="display:inline; cursor:not-allowed",o.appendChild(s),o.appendChild(c),Dl._fetchData(`${ATON.PATH_RESTAPI}scenes`).then((e=>Dl._populateSceneList(l,e))),s.oninput=()=>{s.value.length>3&&(c.disabled=!1,c.className+=" atonBTN-green",c.style.cursor="pointer")},o.appendChild(l),o},_fetchData:async(e,t=null)=>{let n=new Request(e);null!==t&&(n=new Request(n,t));let i=await fetch(n);return await i.json()},_populateSceneList:(e,t)=>{t.forEach((t=>{let n=document.createElement("option");n.setAttribute("value",t.sid),e.appendChild(n)}))}};const Fl=Dl;let Hl={EARTH_R_KM:6371};Hl.EARTH_D_KM=2*Hl.EARTH_R_KM,Hl.init=()=>{Hl._bActive=!1,Hl._wpid=void 0,Hl._currGeoPos=new THREE.Vector2,Hl._GeoPOIs=[],Hl._currGeoPOI=void 0,Hl._closestGeoPOI=void 0,Hl._maxGeoError=40},Hl.enableGeoTracking=()=>{Hl._bActive||ATON.Utils.isConnectionSecure()&&navigator.geolocation&&(Hl._wpid=navigator.geolocation.watchPosition(Hl._onGeoPosition,Hl._onGeoError,{enableHighAccuracy:!0}),Hl._bActive=!0)},Hl.disableGeoTracking=()=>{Hl._bActive&&(navigator.geolocation.clearWatch(Hl._wpid),Hl._bActive=!1)},Hl.setMaxGeoError=e=>{e>0&&(Hl._maxGeoError=e)},Hl._onGeoError=()=>{console.log("Geolocation error")},Hl._onGeoPosition=e=>{if(!Hl._bActive)return;if(!e.coords)return;let t=e.coords.accuracy;t&&t>Hl._maxGeoError||(Hl._currGeoPos.x=e.coords.latitude,Hl._currGeoPos.y=e.coords.longitude,ATON.fireEvent("GeoLocation",e),Hl._handleGeoPOIs())},Hl._handleGeoPOIs=()=>{let e=Hl._GeoPOIs.length;if(!(e<=0)){Hl._closestGeoPOIdist=void 0,Hl._closestGeoPOI=void 0;for(let t=0;t<e;t++){let e=Hl._GeoPOIs[t],n=Hl.geodistance(Hl._currGeoPos,e.pos);(void 0===Hl._closestGeoPOIdist||n<Hl._closestGeoPOIdist)&&(Hl._closestGeoPOIdist=n,Hl._closestGeoPOI=t),n<=e.radius?(Hl._currGeoPOI!==t&&ATON.fireEvent("EnterGeoPOI",{id:t,distance:n}),Hl._currGeoPOI=t):(void 0!==Hl._currGeoPOI&&ATON.fireEvent("LeaveGeoPOI",{id:Hl._currGeoPOI,distance:n}),Hl._currGeoPOI=void 0)}}},Hl.getCurrentGeoLocation=()=>{if(Hl._bActive)return Hl._currGeoPos},Hl.geolocationFromLatLon=(e,t)=>new THREE.Vector2(e,t),Hl.geodistance_orig=(e,t)=>{let n=ATON.DEG2RAD*(t.x-e.x),i=ATON.DEG2RAD*(t.y-e.y),r=Math.sin(n/2)*Math.sin(n/2)+Math.cos(ATON.DEG2RAD*e.x)*Math.cos(ATON.DEG2RAD*t.x)*Math.sin(i/2)*Math.sin(i/2),a=2*Math.atan2(Math.sqrt(r),Math.sqrt(1-r));return Hl.EARTH_R_KM*a*1e3},Hl.geodistance=(e,t)=>{let n=.5-Math.cos((t.x-e.x)*ATON.DEG2RAD)/2+Math.cos(e.x*ATON.DEG2RAD)*Math.cos(t.x*ATON.DEG2RAD)*(1-Math.cos((t.y-e.y)*ATON.DEG2RAD))/2;return Hl.EARTH_D_KM*Math.asin(Math.sqrt(n))*1e3},Hl.addGeoPOI=(e,t)=>{let n={};return n.pos=new THREE.Vector2(e.x,e.y),n.radius=t,Hl._GeoPOIs.push(n),Hl._bActive||Hl.enableTracking(),Hl._handleGeoPOIs(),Hl._GeoPOIs.length-1},Hl.getGeoPOIbyIndex=e=>Hl._GeoPOIs[e],Hl.getClosestGeoPOI=()=>Hl._closestGeoPOI,Hl.getClosestGeoPOIdistance=()=>Hl._closestGeoPOIdist;const Bl=Hl;let kl={};kl._id=$("meta[name='aton\\:appid']").attr("content"),kl._data={},kl.setup=void 0,kl.update=void 0,kl._bRunning=!1,kl._sendDataPatch=(e,t,n)=>new Promise(((i,r)=>{if(void 0===e)return void r("No storage ID specified");if(e.length<3)return void r("Storage ID too short");if(void 0===t)return void r("No storage patch");if(void 0===kl._id)return void r("No app-ID");void 0===n&&(n=ATON.PATCH_ADD);let a={};a.wappid=kl._id,a.fid=e,a.data=t,a.mode=n===ATON.PATCH_DEL?"DEL":"ADD";let o=JSON.stringify(a);$.ajax({url:ATON.PATH_RESTAPI+"patch/wapp",type:"POST",data:o,contentType:"application/json; charset=utf-8",dataType:"json",success:t=>{void 0!==t?(kl._data[e]=t,i(t)):r("Error writing on server")}})})),kl.getAppID=()=>kl._id,kl.addToStorage=(e,t)=>kl._sendDataPatch(e,t,ATON.PATCH_ADD),kl.deleteFromStorage=(e,t)=>kl._sendDataPatch(e,t,ATON.PATCH_DEL),kl.getStorage=e=>new Promise(((t,n)=>{void 0!==kl._id?void 0!==e?$.getJSON(ATON.PATH_WAPPS+kl._id+"/data/"+e+".json",(n=>{console.log(n),kl._data[e]=n,t(n)})):n("No storage ID specified"):n()})),kl.registerServiceWorker=e=>{if(e)return kl.basePath&&(e=kl.basePath+e),"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register(e).then((e=>console.log("PWA service worker registered"))).catch((e=>console.log("PWA service worker not registered",e)))})),kl},kl.realize=(e,t,n)=>(kl.setup=e,kl.update=t,kl.params=new URLSearchParams(window.location.search),kl.basePath=ATON.Utils.getBaseFolder(window.location.href.split("?")[0]),console.log("App base path: "+kl.basePath),kl.registerServiceWorker(n),kl),kl.realizeAndRun=(e,t,n)=>{kl.realize(e,t,n).run()},kl.run=()=>!kl._bRunning&&(kl.setup?kl.setup():(ATON.FE.realize(),console.log("App [Warn]: your App should define a setup() routine")),kl.update&&(ATON.addUpdateRoutine(kl.update),console.log("App: update routine registered")),kl._bRunning=!0,kl._bRunning);const Vl=kl;let zl={PASS_BASE:"p_base",PASS_AA:"p_aa",PASS_AO:"p_ao",PASS_SSR:"p_ssr",PASS_BLOOM:"p_bloom",PASS_DOF:"p_dof",PASS_GAMMA:"p_gamma",init:()=>{if(void 0===ATON._renderer)return;let e=ATON._renderer.getPixelRatio(),t=ATON._renderer.getSize(new THREE.Vector2);const n=new THREE.WebGLRenderTarget(t.width*e,t.height*e,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,colorSpace:ATON._stdEncoding});n.texture.name="EffectComposer.rt1",zl.composer=new THREE.EffectComposer(ATON._renderer,n),zl.passes={},ATON._renderer.autoClear=!1;let i=window.innerWidth*ATON._stdpxd,r=window.innerHeight*ATON._stdpxd;zl.passes[zl.PASS_BASE]=new THREE.RenderPass(ATON._mainRoot,ATON.Nav._camera),zl.composer.addPass(zl.passes[zl.PASS_BASE]),zl.passes[zl.PASS_AO]=new THREE.SAOPass(ATON._mainRoot,ATON.Nav._camera,!1,!0),zl.passes[zl.PASS_AO].params.saoBias=1,zl.passes[zl.PASS_AO].params.saoScale=100,zl.passes[zl.PASS_AO].params.saoIntensity=.2,zl.passes[zl.PASS_BLOOM]=new THREE.UnrealBloomPass(new THREE.Vector2(i,r),1.5,.4,.85),zl.passes[zl.PASS_BLOOM].threshold=.9,zl.passes[zl.PASS_BLOOM].strength=1,zl.passes[zl.PASS_BLOOM].radius=1.2,zl.passes[zl.PASS_DOF]=new THREE.BokehPass(ATON._mainRoot,ATON.Nav._camera,{focus:5,aperture:.001,maxblur:.01,width:i,height:r}),zl.composer.addPass(zl.passes[zl.PASS_AO]),zl.composer.addPass(zl.passes[zl.PASS_BLOOM]),zl.composer.addPass(zl.passes[zl.PASS_DOF]),zl.togglePass(zl.PASS_AO,!1),zl.togglePass(zl.PASS_BLOOM,!1),zl.togglePass(zl.PASS_DOF,!1),console.log(zl.composer)},togglePass:(e,t)=>{void 0!==zl.composer&&(ATON.device.lowGPU||void 0!==zl.passes[e]&&(zl.passes[e].enabled=void 0===t?!zl.passes[e].enabled:t))},isPassEnabled:e=>void 0!==zl.composer&&(void 0!==zl.passes[e]&&zl.passes[e].enabled),setAOintensity:e=>{void 0!==zl.composer&&void 0!==zl.passes[zl.PASS_AO]&&(zl.passes[zl.PASS_AO].params.saoIntensity=e)},getAOintensity:()=>void 0===zl.composer||void 0===zl.passes[zl.PASS_AO]?0:zl.passes[zl.PASS_AO].params.saoIntensity,setBloomStrength:e=>{void 0!==zl.composer&&void 0!==zl.passes[zl.PASS_BLOOM]&&(zl.passes[zl.PASS_BLOOM].strength=e)},getBloomStrength:()=>void 0===zl.composer||void 0===zl.passes[zl.PASS_BLOOM]?0:zl.passes[zl.PASS_BLOOM].strength,setBloomThreshold:e=>{void 0!==zl.composer&&void 0!==zl.passes[zl.PASS_BLOOM]&&(zl.passes[zl.PASS_BLOOM].threshold=e)},getBloomThreshold:()=>void 0===zl.composer||void 0===zl.passes[zl.PASS_BLOOM]?0:zl.passes[zl.PASS_BLOOM].threshold,setDOFfocus:e=>{if(void 0===zl.composer)return;if(void 0===zl.passes[zl.PASS_DOF])return;let t=zl.passes[zl.PASS_DOF].uniforms;void 0!==t&&(t.focus.value=e)},getDOFfocus:()=>{if(void 0===zl.composer)return 0;if(void 0===zl.passes[zl.PASS_DOF])return 0;let e=zl.passes[zl.PASS_DOF].uniforms;return void 0===e?0:e.focus.value},setDOFaperture:e=>{if(void 0===zl.composer)return;if(void 0===zl.passes[zl.PASS_DOF])return;let t=zl.passes[zl.PASS_DOF].uniforms;void 0!==t&&(t.aperture.value=e)}};const Gl=zl;let Wl={STD_XPF_TRANSITION_DURATION:1,SEM_PREFIX:"XPF",SEMGROUP_PREFIX:"GXPF",init:()=>{Wl._list=[],Wl._iCurr=void 0,Wl._iNext=void 0,Wl._geom=void 0,Wl._mesh=void 0,Wl._mat=void 0,Wl._size=50,Wl._gSem=[],Wl._semIMGMasks={},Wl._semCanvas=void 0,Wl._semCTX=void 0,Wl._semCurr=void 0,Wl._shColor=new THREE.Color(0,0,1),Wl._shOpacity=.2,Wl._txCache={},Wl._pathMod=void 0,Wl._realizeBaseMat(),Wl._elVid=void 0,Wl._vidPlaying=!1},_realizeBaseMat:()=>{Wl._uniforms={tBase:{type:"t"},tSem:{type:"t"},tSemHint:{type:"t"},semHL:{type:"vec4",value:new THREE.Vector4(0,1,0,.15)},opacity:{type:"float",value:1},shColor:{type:"vec4",value:new THREE.Vector4(0,0,1,.2)},time:{type:"float",value:0}},Wl._mat=new THREE.ShaderMaterial({uniforms:Wl._uniforms,vertexShader:"\n            varying vec3 vPositionW;\n            varying vec3 vNormalW;\n            varying vec3 vNormalV;\n            varying vec2 vUv;\n\n            void main(){\n                vUv = uv;\n\n                vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix);\n                vNormalW   = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );\n                vNormalV   = normalize( vec3( normalMatrix * normal ));\n\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }\n        ",fragmentShader:"\n            varying vec3 vPositionW;\n\t\t    varying vec3 vNormalW;\n            varying vec3 vNormalV;\n            varying vec2 vUv;\n\n            uniform float time;\n            uniform sampler2D tBase;\n            uniform sampler2D tSem;\n            uniform sampler2D tSemHint;\n            //uniform sampler2D tDepth;\n\n            uniform vec4 semHL, shColor;\n            uniform float opacity;\n\n\t\t    void main(){\n                vec4 frag = texture2D(tBase, vUv);\n                vec4 sem  = texture2D(tSem, vUv);\n                vec4 semH = texture2D(tSemHint, vUv);\n                float shv = max( max(semH.r,semH.g), semH.b);\n\n                float t = (1.0 * cos(time*2.0));\n                t = clamp(t, 0.0,1.0);\n\n                frag = mix(frag, semHL, (sem.r * semHL.a));\n\n                frag = mix(frag, shColor, (t * shv * shColor.a));\n\n                frag.a = opacity;\n\n                gl_FragColor = frag;\n\t\t    }\n        ",depthTest:!1,depthWrite:!1}),Wl.setSemanticHintMapOpacity(.2)},setPathModifier:e=>{if(void 0!==e){Wl._pathMod=e;for(let t in Wl.list)Wl.list[t].setPathModifier(e)}},update:()=>{if(ATON.Nav.isTransitioning())return;if(Wl._list.length<1)return;let e,t,n,i,r=Wl._list.length,a=ATON.Nav._currPOV.pos,o=ATON.Nav._vDir;Wl._uniforms.time.value+=ATON._dt,void 0===Wl._dirLNode&&(Wl._dirLNode=new THREE.Vector3);for(let s=0;s<r;s++){let r=Wl._list[s],l=a.distanceToSquared(r._location);(void 0===e||l<e)&&(e=l,t=s),s!==Wl._iCurr&&(Wl._dirLNode.x=r._location.x-a.x,Wl._dirLNode.y=r._location.y-a.y,Wl._dirLNode.z=r._location.z-a.z,Wl._dirLNode=Wl._dirLNode.normalize(),Wl._dirLNode.dot(o)>.8&&(void 0===n||l<n)&&(n=l,i=s))}i!==Wl._iNext&&(Wl.toggleSUI(i,!0),ATON.fireEvent("NextXPF",i)),Wl._iNext=i,Wl.querySemanticMasks(),t!==Wl._iCurr&&(void 0!==Wl._iCurr&&Wl._gSem[Wl._iCurr].hide(),Wl.setCurrentXPF(t))},realizeBaseGeometry:()=>{void 0===Wl._geom&&(Wl._group=new THREE.Group,ATON._rootVisibleGlobal.add(Wl._group),Wl._geom=new THREE.SphereGeometry(1,40,40),Wl._geom.scale(-Wl._size,Wl._size,Wl._size),Wl._geom.castShadow=!1,Wl._geom.receiveShadow=!1,Wl._mesh=new THREE.Mesh(Wl._geom,Wl._mat),Wl._mesh.frustumCulled=!1,Wl._mesh.renderOrder=-100,Wl._mesh.layers.enable(ATON.NTYPES.SCENE),Wl._group.add(Wl._mesh),Wl._mesh.visible=!1)},setBaseGeometry:e=>{},add:e=>{if(void 0===e)return;Wl.realizeBaseGeometry();let t=Wl._list.length;Wl._list.push(e);let n=e.getMesh();n&&Wl._group.add(n);let i=ATON.getOrCreateSemanticNode(Wl.SEMGROUP_PREFIX+t);Wl._gSem.push(i),i.attachToRoot(),t>0||(ATON.Nav.toggleLocomotionValidator(!1),ATON._bqScene=!0)},clear:()=>{Wl._iCurr=void 0,Wl._iNext=void 0,Wl._semCurr=void 0;for(let e=0;e<Wl._list.length;e++){let t=Wl._list[e];t=null,Wl._gSem[e]&&(Wl._gSem[e].removeChildren(),Wl._gSem[e]=null)}Wl._gSem=[],Wl._list=[]},getNumXPFs:()=>Wl._list.length,getMainGroup:()=>Wl._group,getSemanticGroup:e=>Wl._gSem[e],getCurrentSemanticGroup:()=>{if(void 0!==Wl._iCurr)return Wl._gSem[Wl._iCurr]},_preloadBaseLayer:(e,t)=>{if(void 0!==Wl._txCache[e])return Wl._txCache[e];let n=Wl._list[e]._pathbaselayer;Wl._pathMod&&(n=Wl._pathMod(n)),ATON.Utils.textureLoader.load(n,(n=>{n.colorSpace=ATON._stdEncoding,n.generateMipmaps=!0,Wl._txCache[e]=n,t&&t(n)}))},_clearTexCache:()=>{if(void 0!==Wl._iCurr)for(let e in Wl._txCache)Wl._txCache[e]&&e!==Wl._iCurr&&(Wl._txCache[e].dispose(),Wl._txCache[e]=void 0)},_setBaseLayerTexture:(e,t)=>{Wl._mat.map=t,Wl._mat.needsUpdate=!0,Wl._mesh.position.copy(e.getLocation()),Wl._mesh.rotation.set(e.getRotation().x,e.getRotation().y,e.getRotation().z)},updateCurrentXPFbaseLayer:e=>{if(void 0===Wl._iCurr)return;let t=Wl._list[Wl._iCurr];if(void 0===t)return;let n=t._pathbaselayer;if(Wl._pathMod&&(n=Wl._pathMod(n)),ATON.Utils.isVideo(n)){if(void 0===Wl._elVid){let e="<video id='idXPFVideo' loop crossOrigin='anonymous' playsinline style='display:none'>";e+="<source src='"+n+"'>",e+="</video>",$(e).appendTo("body"),Wl._elVid=document.getElementById("idXPFVideo"),Wl._elVid.onplaying=()=>{console.log("XPF VideoPano playing"),Wl._vidPlaying=!0},Wl._elVid.onpause=()=>{console.log("XPF VideoPano paused"),Wl._vidPlaying=!1},Wl._elVid.addEventListener("touchstart",(function(){Wl._elVid.play()})),enableInlineVideo(Wl._elVid)}let i=new THREE.VideoTexture(Wl._elVid);return i.colorSpace=ATON._stdEncoding,Wl._mat.map=i,Wl._mat.needsUpdate=!0,Wl._uniforms.tBase.value=i,Wl._mesh.position.copy(t.getLocation()),Wl._mesh.rotation.set(t.getRotation().x,t.getRotation().y,t.getRotation().z),void(e&&e(i))}ATON.Utils.textureLoader.load(n,(n=>{n.colorSpace=ATON._stdEncoding,n.generateMipmaps=!0,Wl._mat.map=n,Wl._mat.needsUpdate=!0,Wl._uniforms.tBase.value=n,Wl._mesh.position.copy(t.getLocation()),Wl._mesh.rotation.set(t.getRotation().x,t.getRotation().y,t.getRotation().z),e&&e(n)}))},playOrPauseXPFVideoStream:()=>{void 0!==Wl._elVid&&(Wl._vidPlaying?Wl._elVid.pause():Wl._elVid.play())},updateCurrentXPFsemLayer:e=>{let t=Wl._list.indexOf(e);t<0||t===Wl._iCurr&&Wl.loadSemanticMasksIfAny(Wl._iCurr)},setCurrentXPF:(e,t)=>{Wl.toggleSUI(e,!1),Wl._iCurr=e,Wl._iNext=void 0,Wl._mesh.visible=!0,Wl._gSem[e].show(),Wl.updateCurrentXPFbaseLayer(t),ATON.fireEvent("CurrentXPF",e),ATON.fireEvent("NextXPF",void 0),Wl.loadSemanticMasksIfAny(e)},toggleSUI:(e,t)=>{if(void 0===e)return;let n=Wl._list[e];void 0!==n&&n._lnode.toggleSUI(t)},loadSemanticMasksIfAny:e=>{let t=Wl._list[e];if(void 0!==t){Wl._semIMGMasks={},Wl._uniforms.tSemHint.value=0,void 0!==t._semHintURL&&(Wl._uniforms.tSemHint.value=ATON.Utils.textureLoader.load(t._semHintURL));for(let e in t._semMasksURLs){void 0===Wl._semCanvas&&(Wl._semCanvas=document.createElement("canvas"),Wl._semCanvas.width=2048,Wl._semCanvas.height=2048,Wl._semCTX=Wl._semCanvas.getContext("2d"));let n=t._semMasksURLs[e],i=new Image;i.src=n,Wl._semIMGMasks[e]=i}}},getXPFbyIndex:e=>Wl._list[e],getCurrentXPFindex:()=>Wl._iCurr,getCurrentXPF:()=>{if(void 0!==Wl._iCurr)return Wl._list[Wl._iCurr]},getNextXPFindex:()=>Wl._iNext,getNextXPF:()=>{if(void 0!==Wl._iNext)return Wl._list[Wl._iNext]},getDistanceToXPFindex:e=>{if(void 0===e)return;let t=Wl._list[e];return void 0!==t?ATON.Nav._currPOV.pos.distanceTo(t.getLocation()):void 0},showSUIonlyForXPF:e=>{let t=Wl._list.length;if(!(t<1))for(let n=0;n<t;n++){let t=Wl._list[n]._lnode;t&&(n==e?t.toggleSUI(!0):t.toggleSUI(!1))}},requestTransitionByIndex:(e,t)=>{let n=Wl._list[e];void 0!==n&&(void 0===t&&(t=Wl.STD_XPF_TRANSITION_DURATION),ATON.XR._bPresenting&&(t=0),Wl.setCurrentXPF(e),ATON.Nav.requestTransitionToLocomotionNode(n.getLocomotionNode(),t))},requestTransitionToTarget:(e,t,n)=>{if(void 0===e)return;let i=new ATON.POV;i.setTarget(e),i.setPosition(ATON.Nav._currPOV.pos),t&&i.setFOV(t),ATON.Nav.requestPOV(i,n)},requestTransitionToDirection:(e,t,n)=>{if(void 0===e)return;let i=new THREE.Vector3;i.x=e.x+ATON.Nav._currPOV.pos.x,i.y=e.y+ATON.Nav._currPOV.pos.y,i.z=e.z+ATON.Nav._currPOV.pos.z,Wl.requestTransitionToTarget(i,t,n)},setHomeXPF:e=>{let t=Wl._list[e];if(void 0===t)return;let n=t.getLocomotionNode(),i=(new ATON.POV).setPosition(n.pos).setTarget(n.pos.x,n.pos.y,n.pos.z+1);ATON.Nav.setHomePOV(i)},getSemanticMaskURLfromXPFindex:(e,t)=>{let n=Wl._list[e];if(void 0!==n)return n.getSemanticMaskURL(t)},getSemanticMaskURLfromCurrentXPF:e=>{if(void 0!==Wl._iCurr)return Wl.getSemanticMaskURLfromXPFindex(Wl._iCurr,e)},setSemanticColor:(e,t)=>{void 0===t&&(t=.15),Wl._uniforms.semHL.value=new THREE.Vector4(e.r,e.g,e.b,t)},setSemanticOpacity:e=>{void 0===e&&(e=.15),Wl._uniforms.semHL.value.w=e},setSemanticHintMapOpacity:e=>{void 0===e&&(e=.2),Wl._shOpacity=e,Wl._uniforms.shColor.value.w=e},setSemanticHintMapColor:(e,t)=>{void 0!==e&&(Wl._shColor=e,Wl._uniforms.shColor.value.x=e.r,Wl._uniforms.shColor.value.y=e.g,Wl._uniforms.shColor.value.z=e.b,void 0!==t&&Wl.setSemanticHintMapOpacity(t))},querySemanticMasks:()=>{if(void 0===Wl._semCTX)return;if(void 0===ATON._queryDataScene)return;if(void 0===ATON._queryDataScene.uv)return;let e,t=Wl._semCTX,n=ATON._queryDataScene.uv;for(let i in Wl._semIMGMasks){let r=Wl._semIMGMasks[i],a=parseInt(r.width*n.x),o=parseInt(r.height*(1-n.y));if(t.drawImage(r,0,0),t.getImageData(a,o,1,1).data[0]>127){e=i;break}}if(void 0===e)return void 0!==Wl._semCurr&&ATON.fireEvent("SemanticMaskLeave",Wl._semCurr),Wl._semCurr=void 0,Wl._uniforms.tSem.value=0,Wl._uniforms.shColor.value.w=Wl._shOpacity,void(Wl._mat.needsUpdate=!0);Wl.highlightSemanticMaskInCurrentXPF(e),Wl._semCurr=e},highlightSemanticMaskInCurrentXPF:e=>{if(void 0===e)return void 0!==Wl._semCurr&&ATON.fireEvent("SemanticMaskLeave",Wl._semCurr),Wl._semCurr=void 0,Wl._uniforms.tSem.value=0,Wl._uniforms.shColor.value.w=Wl._shOpacity,void(Wl._mat.needsUpdate=!0);if(Wl._semCurr===e)return;let t=Wl.getSemanticMaskURLfromCurrentXPF(e);Wl._uniforms.tSem.value=ATON.Utils.textureLoader.load(t),Wl._mat.needsUpdate=!0,ATON.fireEvent("SemanticMaskHover",e),Wl._uniforms.shColor.value.w=0,void 0!==Wl._semCurr&&ATON.fireEvent("SemanticMaskLeave",Wl._semCurr)},loadFromPhotoscanFile:(e,t)=>{if(void 0===e)return;e=ATON.Utils.resolveCollectionURL(e);let n=ATON.Utils.getBaseFolder(e),i=0;$.ajax({url:e,dataType:"text",success:function(e){e=e.split(/\r\n|\n/);for(let t in e){let r=e[t];if(!r.startsWith("#")){let e=r.split(/\s{2,}|\t/);if(e.length>10){let t=new ATON.XPF,r=n+e[0],a=parseFloat(e[1]),o=parseFloat(e[2]),s=parseFloat(e[3]),l=ATON.DEG2RAD*parseFloat(e[4]);ATON.DEG2RAD,parseFloat(e[5]),ATON.DEG2RAD,parseFloat(e[6]),t.setLocation(a,s,-o),t.setBaseLayer(r),t.setRotation(0,-l,0),Wl.add(t),i++}}}console.log("Num panoramas parsed: "+i),t&&t()}})}};const Xl=Wl;let ql={init:()=>{ql.list=[]},anyCopyrightFound:()=>ql.list.length>0,extract:e=>{if(void 0===e)return;if(void 0===e.asset)return;let t={};if(e.asset.copyright&&(t.copyright=e.asset.copyright),e.asset.extras)for(let n in e.asset.extras)"string"==typeof e.asset.extras[n]&&(t[n]=e.asset.extras[n]);if(ql.extractXMP3DC(e,t),0!==Object.keys(t).length){e.asset.generator&&(t.generator=e.asset.generator);for(let e in ql.list){let n=ql.list[e];if(ql.compare(t,n))return}ql.list.push(t)}},compare:(e,t)=>{if(void 0===e||void 0===t)return!1;const n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(let i of n)if(e[i]!==t[i])return!1;return!0},extractXMP3DC:(e,t)=>{if(void 0===e||void 0===t)return;if(!e.userData)return;let n=e.userData.gltfExtensions;if(!n)return;if(!n.KHR_xmp)return;let i=n.KHR_xmp.packets;if(!i)return;let r=i[0];r["model3d:spdxLicense"]&&(t.license=r["model3d:spdxLicense"]),r["dc:date"]&&(t.date=r["dc:date"]),r["dc:title"]&&(t.title=r["dc:title"]),r["xmp:CreatorTool"]&&(t.creatorTool=r["xmp:CreatorTool"]),r["dc:description"]&&(t.description=r["dc:description"]),r["dc:rights"]&&(t.rights=r["dc:rights"]),r["xmpRights:Owner"]&&(t.owner=r["xmpRights:Owner"])}};const jl=ql;let Yl={REST_API_CESIUMION_DEF_TOKEN:"https://api.cesium.com/v2/tokens/default",THRES_ORI:.01,THRES_POS:1e-6,init:()=>{Yl._tsets=[],Yl._tsET=20,Yl._tsB=!1,Yl._bTileBVH=!0,Yl._tsTasks=[],Yl.tsSchedCB=e=>{Yl._tsTasks.push(e)},Yl._tseBase=8,Yl.estimateTSErrorTarget(),Yl._tsuSync=0,Yl._bPCs=!1,Yl._pqLRU=void 0,Yl._pqDownload=void 0,Yl._pqParse=void 0,Yl._numTilesLoaded=0,Yl._numTSLoaded=0},clear:()=>{for(let e in Yl._tsets)Yl._tsets[e]=null;Yl._tsets=[],Yl._bPCs=!1},getTSetsErrorTarget:()=>Yl._tsET,setTSetsErrorTarget:e=>{Yl._tsET=e;const t=Yl._tsets.length;if(!(t<=0))for(let n=0;n<t;n++)Yl._tsets[n].errorTarget=e},setTSetsDisplayBounds:e=>{Yl._tsB=e;const t=Yl._tsets.length;if(!(t<=0))for(let n=0;n<t;n++)Yl._tsets[n].displayBoxBounds=e},updateTSetsCamera:e=>{void 0===e&&(e=ATON.Nav._camera);const t=Yl._tsets.length;if(!(t<=0))for(let n=0;n<t;n++){const t=Yl._tsets[n];for(let e=0;e<t.cameras.length;e++)t.deleteCamera(t.cameras[e]);t.setCamera(e),ATON._renderer.xr.isPresenting?t.setResolution(e,300,300):t.setResolutionFromRenderer(e,ATON._renderer)}},setBaseTSE:e=>{Yl._tseBase=e,console.log(Yl._tseBase),Yl.estimateTSErrorTarget()},estimateTSErrorTarget:()=>{let e=Yl._tseBase;(ATON.device.lowGPU||ATON.device.isMobile)&&(e+=4),ATON.XR._bPresenting&&(e+=3),e<1&&(e=1),e>25&&(e=25),console.log("Estimated TSet error target: "+e),Yl.setTSetsErrorTarget(e)},loadTileSetFromURL:(e,t,n)=>{if(void 0===t)return;let i=new TILES.TilesRenderer(e);if(!i)return;ATON._assetReqNew(e),i.displayBoxBounds=Yl._tsB,i.fetchOptions.mode="cors",n&&(i.fetchOptions.headers={},i.fetchOptions.headers.Authorization=`Bearer ${n.accessToken}`,i.preprocessURL=e=>(e=new URL(e),/^http/.test(e.protocol)&&e.searchParams.append("v",n.v),e.toString())),i.errorTarget=Yl._tsET,i.optimizeRaycast=!1,void 0===Yl._pqLRU?(i.lruCache.maxSize=500,i.lruCache.minSize=150,i.lruCache.unloadPercent=.2,i.downloadQueue.schedulingCallback=Yl.tsSchedCB,i.parseQueue.schedulingCallback=Yl.tsSchedCB,i.downloadQueue.maxJobs=6,i.parseQueue.maxJobs=1,Yl._pqLRU=i.lruCache,Yl._pqDownload=i.downloadQueue,Yl._pqParse=i.parseQueue):(i.lruCache=Yl._pqLRU,i.downloadQueue=Yl._pqDownload,i.parseQueue=Yl._pqParse),i.setCamera(ATON.Nav._camera),i.setResolutionFromRenderer(ATON.Nav._camera,ATON._renderer),i.manager.addHandler(/\.gltf$/,ATON._aLoader),i.manager.addHandler(/\.ktx2$/,ATON._ktx2Loader),i.manager.addHandler(/\.drc$/,ATON._dracoLoader),t.add(i.group),$.getJSON(e,(e=>{ATON.CC.extract(e)}));let r=0,a=new THREE.Box3,o=new THREE.Sphere;const s=new THREE.Matrix4;let l=new THREE.Vector3,c=!1;i.onLoadTileSet=()=>{if(console.log("TileSet loaded"),Yl._numTSLoaded++,n||t.bUseGeoCoords){let e;console.log("TileSet using GeoCoords"),i.getOrientedBounds(a,s)?(l.setFromMatrixPosition(s),e=l.length()):i.getBoundingSphere(o)&&(l=o.center.clone(),e=l.length());const t=l.normalize(),n=new THREE.Vector3(0,1,0),r=ATON.Utils.rotationBetweenDirections(t,n);i.group.quaternion.x=r.x,i.group.quaternion.y=r.y,i.group.quaternion.z=r.z,i.group.quaternion.w=r.w,i.group.position.y=-e}else i.getBounds(a)?(a.getBoundingSphere(o),t.autocenter&&(a.getCenter(i.group.position),i.group.position.multiplyScalar(-1))):i.getBoundingSphere(o)&&t.autocenter&&(i.group.position.copy(o.center),i.group.position.multiplyScalar(-1))},i.onLoadModel=n=>{r<2?r++:2===r&&(r++,ATON.recomputeSceneBounds(),void 0===ATON.Nav.homePOV&&ATON.Nav.computeAndRequestDefaultHome(.5),ATON._assetReqComplete(e)),Yl._numTilesLoaded++,n.traverse((e=>{if(e.layers.enable(t.type),e.isMesh?(e.castShadow=!0,e.receiveShadow=!0,Yl._bTileBVH&&e.geometry&&(e.geometry.computeVertexNormals(),e.geometry.computeBoundsTree({}),ATON.Utils._bvhBounds>0&&ATON.Utils._addBVHbounds(e,ATON.Utils._bvhBounds)),ATON._bqScene=!0):(c=!0,Yl._bPCs=!0,e.layers.disable(t.type),e.material=ATON.MatHub.materials.point),t.userData.cMat&&(e.material=t.userData.cMat),e.material){let t=e.material.map;t&&(t.minFilter=THREE.LinearMipmapLinearFilter,t.magFilter=THREE.LinearFilter,t.colorSpace=ATON._stdEncoding)}}))},i.onDisposeModel=(e,t)=>{ATON.Utils.cleanupVisitor(e),e=null},c||ATON.Utils.setPicking(t,t.type,!0),Yl._tsets.push(i)},loadCesiumIONAsset:(e,t)=>{let n=ATON.getAPIToken("cesium.ion");if(null==n&&(console.log("A valid Cesium ION token is required"),n=prompt("Please enter a valid Cesium ION token:"),null==n||""==n))return;let i=new URL(`https://api.cesium.com/v1/assets/${e}/endpoint`);i.searchParams.append("access_token",n),fetch(i,{mode:"cors"}).then((e=>e.ok?e.json():Promise.reject(`${e.status} : ${e.statusText}`))).then((e=>{i=new URL(e.url);const r=i.searchParams.get("v");Yl.loadTileSetFromURL(i.toString(),t,{accessToken:e.accessToken,v:r}),ATON.setAPIToken("cesium.ion",n)}))},update:()=>{const e=Yl._tsets.length;if(e<1)return;for(let t=0;t<e;t++)Yl._tsets[t].update();if(Yl.detectMotion())return;let t=Yl._tsTasks.shift();void 0!==t&&(t(),t=null)},detectMotion:()=>!!ATON.Nav._bControl&&(ATON.Nav._dOri>Yl.THRES_ORI||ATON.Nav._dPos>Yl.THRES_POS)};const $l=Yl;let Kl,Zl={};window.ATON=Zl,Zl.Node=t,Zl.POV=class{constructor(e){this.pos=new THREE.Vector3(1,0,0),this.target=new THREE.Vector3(0,0,0),this.up=ATON.STD_UPVECTOR,this.fov=void 0,this.nextPOV=void 0,this.prevPOV=void 0,this.as(e)}as(e){if(void 0!==e)return ATON.Nav.povlist[e]=this,this.id=e,this}setPosition(e,t,n){return e instanceof THREE.Vector3?this.pos.copy(e):this.pos.set(e,t,n),this}setTarget(e,t,n){return e instanceof THREE.Vector3?this.target.copy(e):this.target.set(e,t,n),this}setFOV(e){return this.fov=e,this}addKeywords(e){let t=e.split(",");void 0===this.kwords&&(this.kwords={});for(let e in t){let n=t[e].trim();n.length>0&&(this.kwords[n]=!0)}return this}hasKeyword(e){if(void 0!==this.kwords)return void 0!==this.kwords[e]}setNextPOV(e){if(e)return this.nextPOV=e,this}setPrevPOV(e){if(e)return this.prevPOV=e,this}},Zl.LightProbe=class{constructor(e,t,n){this.pos=new THREE.Vector3(0,0,0),this._res=void 0!==e?e:128,this._near=void 0!==t?t:1,this._far=void 0!==n?n:ATON.Nav.STD_FAR,this._envtex=void 0,this._CC=void 0,void 0===ATON._pmremGenerator&&(ATON._pmremGenerator=new THREE.PMREMGenerator(ATON._renderer),ATON._pmremGenerator.compileCubemapShader())}setPosition(e,t,n){return e instanceof THREE.Vector3?this.pos.copy(e):this.pos.set(e,t,n),this}setNear(e){return this._near=e,this}setFar(e){return this._far=e,this}_createCCtarget(){this._CCtarget||(this._CCtarget=new THREE.WebGLCubeRenderTarget(this._res,{format:THREE.RGBEFormat,generateMipmaps:!0,minFilter:THREE.LinearMipmapLinearFilter,colorSpace:ATON._stdEncoding}))}update(){this._envtex&&this._envtex.dispose(),void 0===this._CC&&(this._createCCtarget(),this._CC=new THREE.CubeCamera(this._near,this._far,this._CCtarget)),this._CC.position.copy(this.pos),this._CC.update(ATON._renderer,ATON._mainRoot);let e=this._CCtarget.texture;return this._envtex=ATON._pmremGenerator.fromCubemap(e).texture,ATON._renderer.shadowMap.enabled&&ATON._dMainL&&(ATON._dMainL.shadow.needsUpdate=!0),this}getEnvTex(){return this._envtex}assignToNode(e){}},Zl.XPF=class{constructor(e){this.id=e,this._geom=void 0,this._mesh=void 0,this._pathbaselayer=void 0,this._size=20,this._location=new THREE.Vector3(0,0,0),this._rotation=new THREE.Vector3(0,0,0),this._lnode=ATON.Nav.addLocomotionNode(this._location),this._pathMod=void 0,this._semMasksURLs={},this._semHintURL=void 0}setSize(e){this._size=e}realizeSUI(){return void 0===this._lnode||this._lnode.realizeSUI(),this}realizeGeometry(){return void 0!==this._geom||(this._geom=new THREE.SphereGeometry(1,60,60),this._geom.scale(-this._size,this._size,this._size),this._geom.castShadow=!1,this._geom.receiveShadow=!1,this._mat=new THREE.MeshBasicMaterial({depthTest:!1,depthWrite:!1}),this._mesh=new THREE.Mesh(this._geom,this._mat),this._mesh.frustumCulled=!1,this._mesh.renderOrder=-100),this}getMesh(){return this._mesh}getLocomotionNode(){return this._lnode}setRotation(e,t,n){return e instanceof THREE.Vector3?this._rotation.copy(e):this._rotation.set(e,t,n),void 0===this._mesh||this._mesh.rotation.copy(this._rotation),this}getRotation(){return this._rotation}setLocation(e,t,n){return e instanceof THREE.Vector3?this._location.copy(e):this._location.set(e,t,n),this._lnode&&this._lnode.setLocation(this._location),void 0===this._mesh||this._mesh.position.copy(this._location),this}getLocation(){return this._location}hasGeometry(){return void 0!==this._geom}setPathModifier=e=>(this._pathMod=e,this);updateBaseLayer(){}setBaseLayer(e){if(void 0===e)return this;this._pathbaselayer=ATON.Utils.resolveCollectionURL(e);let t=this;return this._pathMod&&(this._pathbaselayer=this._pathMod(this._pathbaselayer)),this.hasGeometry()?(ATON.Utils.isVideo(this._pathbaselayer)||ATON.Utils.textureLoader.load(t._pathbaselayer,(e=>{e.colorSpace=ATON._stdEncoding,e.generateMipmaps=!0,t._mat.map=e,t._mat.map.needsUpdate=!0,t._mat.needsUpdate=!0,console.log("XPF base layer "+t._pathbaselayer+" loaded")})),this):this}setSemanticMask(e,t){return void 0===e||(this._semMasksURLs[e]=ATON.Utils.resolveCollectionURL(t),ATON.XPFNetwork.updateCurrentXPFsemLayer(this)),this}removeSemanticMask(e){return void 0===e||(this._semMasksURLs[e]=void 0,ATON.XPFNetwork.updateCurrentXPFsemLayer(this)),this}removeAllSemanticMasks(){return this._semMasksURLs={},this}getSemanticMaskURL(e){return this._semMasksURLs[e]}setSemanticHintMap(e){return void 0===e||(this._semHintURL=ATON.Utils.resolveCollectionURL(e),ATON.XPFNetwork.updateCurrentXPFsemLayer(this)),this}removeSemanticHintMap(){return this._semHintURL=void 0,ATON.XPFNetwork.updateCurrentXPFsemLayer(this),this}},Zl.Flare=class{constructor(e,t){this.setup=e||void 0,this.update=t||void 0,this._deps=[]}register(){return ATON.addFlare(this),this}include(e){return this._deps.push(e),this}},Zl.EventHub=a,Zl.Utils=c,Zl.CC=jl,Zl.SceneHub=Ps,Zl.MatHub=s,Zl.Nav=Us,Zl.AudioHub=Ns,Zl.XR=Fs,Zl.SUI=Ul,Zl.UI=Fl,Zl.Photon=Cl,Zl.SemFactory=Rl,Zl.FE=Tl,Zl.MediaFlow=Ml,Zl.Phygital=Bl,Zl.App=Vl,Zl.FX=Gl,Zl.XPFNetwork=Xl,Zl.MRes=$l,Zl.evX=0,Zl.evY=0,Zl.oldEvX=0,Zl.oldEvY=0,Zl._draggableUIObjects=[],Zl._userObjects=void 0,Zl.STD_UPVECTOR=new THREE.Vector3(0,1,0),Zl.ROOT_NID=".",Zl.RAD2DEG=180/Math.PI,Zl.DEG2RAD=Math.PI/180,Zl.PATCH_ADD=0,Zl.PATCH_DEL=1,Zl.NTYPES={},Zl.NTYPES.SCENE=3,Zl.NTYPES.SEM=4,Zl.NTYPES.UI=5,Zl.BASE_URL=window.location.origin,Zl.PATH_RESTAPI=`${Zl.BASE_URL}/api/`,Zl.PATH_RESTAPI_SCENE=`${Zl.PATH_RESTAPI}scene/`,Zl.PATH_RESTAPI_COLLECTION=`${Zl.PATH_RESTAPI}collection/`,Zl.PATH_WAPPS=`${Zl.BASE_URL}/a/`,Zl.PATH_MODS=`${Zl.BASE_URL}/mods/`,Zl.PATH_DRACO_LIB=`${Zl.BASE_URL}/dist/draco/`,Zl.PATH_BASIS_LIB=`${Zl.BASE_URL}/dist/basis/`,Zl.PATH_IFC_LIB="ifc/",Zl.PATH_COLLECTION=`${Zl.BASE_URL}/collections/`,Zl.PATH_SCENES=`${Zl.BASE_URL}/scenes/`,Zl.PATH_RES=`${Zl.BASE_URL}/res/`,Zl.PATH_FE=`${Zl.BASE_URL}/s/`,Zl.PATH_PROFILESLIST=`${Zl.BASE_URL}/dist/@webxr-input-profiles/assets/dist/profiles`,Zl.SHADOWS_NEAR=.1,Zl.SHADOWS_FAR=50,Zl.SHADOWS_SIZE=15,Zl.SHADOWS_RES=1024,Zl.AMB_L=.2,Zl.SCALE_DEFAULT=0,Zl.SCALE_DEFAULTSCENE=1.2,Zl.SCALE_SCENE=3.5,Zl.SCALE_BIG=5,Zl.SCALE_VERYBIG=10,Zl.SCALE_SMALL=-5,Zl.SCALE_VERYSMALL=-10,Zl._isXRDragging=!1,Zl._startInterval=!1,Zl._dragControls=void 0,Zl.T1Click=!1,Zl.T2Click=!1,Zl.T3Click=!1,Zl.T4Click=!1,Zl._lastTimeStamp=0,Zl.undoStack=[],Zl.redoStack=[],Zl._flares=[],Zl._resMappers=[];let Jl,Ql=!1;async function ec(){!async function(e,t){const n={image:e,bufferSize:t},i={method:"POST",headers:{"Content-Type":"application/json"},mode:"cors",body:JSON.stringify(n)};try{fetch("https://localhost:8084/imgs_manager",i)}catch(e){throw console.error("Error:",e),e}}(Kl.toDataURL("image/jpeg",.5),parseInt(Zl._fps))}Zl.setPathCollection=e=>{Zl.PATH_COLLECTION=e},Zl.setPathScenes=e=>{Zl.PATH_SCENES=e},Zl.setAsStandalone=e=>{e||(e="../"),Zl.PATH_DRACO_LIB=e+"dist/draco/",Zl.PATH_BASIS_LIB=e+"dist/basis/",Zl.PATH_RES=e+"res/"},Zl.addResourceMapper=e=>{Zl._resMappers.push(e)},Zl._onUserInteraction=()=>{Zl._elPanoVideo&&!Zl._vpanoPlaying&&Zl._elPanoVideo.play(),Zl.XPFNetwork._elVid&&!Zl.XPFNetwork._vidPlaying&&Zl.XPFNetwork._elVid.play(),Zl.AudioHub._listener&&Zl.AudioHub._listener.context&&"suspended"===Zl.AudioHub._listener.context.state&&Zl.AudioHub._listener.context.resume();for(let e in Zl.MediaFlow._vStreams){let t=Zl.MediaFlow._vStreams[e].el;t.playing||t.uid||t.play()}},Zl.checkAuth=(e,t)=>{$.ajax({type:"GET",url:Zl.PATH_RESTAPI+"user",xhrFields:{withCredentials:!0},dataType:"json",success:n=>{void 0!==n&&n.username?e(n):t&&t()},error:()=>{t&&t()}})},Zl._setupBaseListeners=()=>{let e,t,n=Zl._renderer.domElement;window.addEventListener("resize",Zl._onResize,!1),window.onorientationchange=Zl._readDeviceOrientationMode,document.addEventListener("fullscreenchange",(e=>{Zl._bFS=!!document.fullscreenElement,Zl.fireEvent("Fullscreen",Zl._bFS),Zl._bFS?console.log("Now fullscreen"):console.log("Exit fullscreen")})),void 0!==document.hidden?(e="hidden",t="visibilitychange"):void 0!==document.mozHidden?(e="mozHidden",t="mozvisibilitychange"):void 0!==document.msHidden?(e="msHidden",t="msvisibilitychange"):void 0!==document.webkitHidden&&(e="webkitHidden",t="webkitvisibilitychange"),void 0!==e&&document.addEventListener(t,(()=>{if(document[e]){if(Zl.XR._bPresenting)return;console.log("Suspend")}else{if(Zl.XR._bPresenting)return;console.log("Resume")}}),!1),n.addEventListener("mousemove",Zl._updateScreenMove,!1),n.addEventListener("mousedown_remote",(e=>{switch(e.button){case 1:Zl._mainClick=!0,Zl.fireEvent("MouseLeftButton"),Zl._onUserInteraction(),Zl._updateScreenMove(e.srcEvent),Zl._handleQueries(),Zl.fireEvent("Tap",e.srcEvent),Zl._handleOnSelect();break;case 2:Zl.fireEvent("MouseMidButton");break;case 3:Zl.fireEvent("MouseRightButton")}})),n.addEventListener("mousedown",(e=>{switch(e.button){case 1:Zl._mainClick=!0,Zl.fireEvent("MouseLeftButton",e),Zl._onUserInteraction(),Zl._updateScreenMove(e.srcEvent),Zl._handleQueries(),Zl.fireEvent("Tap",e.srcEvent),Zl._handleOnSelect();break;case 2:Zl.fireEvent("MouseMidButton");break;case 3:Zl.fireEvent("MouseRightButton")}})),n.addEventListener("mouseup",(e=>{switch(e.button){case 0:case 1:Zl._mainClick=!1}})),n.addEventListener("wheel",Zl._onMouseWheel,!1),Hammer(n).on("doubletap",(e=>{Zl._onUserInteraction(),Zl.fireEvent("DoubleTap",e.srcEvent)})),Hammer(n).on("tap",(e=>{Zl.XR.isPresenting()||(Zl._mainClick=!0),Zl._onUserInteraction(),Zl._updateScreenMove(e.srcEvent),Zl._handleQueries(),Zl.fireEvent("Tap",e.srcEvent),Zl._handleOnSelect()})),Zl.on("DoubleTap",(e=>{Zl.defaultDoubleTapFromScreenCoords(e)})),Zl._kModShift=!1,Zl._kModCtrl=!1,Zl._bListenKeyboardEvents=!0,Zl._lastSelectedAxis="x",Zl._lastSelectedEditMode=void 0,Zl._mainClick=!1,Zl._kModBackspace=!1,window.addEventListener("keydown",(e=>{switch(Zl._onUserInteraction(),e.key){case"Shift":Zl._kModShift=!0;break;case"Control":Zl._kModCtrl=!0;break;case"Backspace":Zl._kModBackspace=!0}Zl._bListenKeyboardEvents&&Zl.fireEvent("KeyPress",e.key)}),!1),window.addEventListener("keyup",(e=>{switch(e.key){case"Shift":Zl._kModShift=!1;break;case"Control":if(Zl._kModCtrl=!1,Zl.SemFactory.nowAnnotating){Zl.SemFactory.newAnnotation(),Zl.Photon.fireEvent("StopActualAnnotation");let e={semanticgraph:{}};if(e.semanticgraph.nodes={},e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid]={},e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid].manualshapes=[],e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid].colors=[],e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid].widths=[],Rl.nowWritingAnnotation){const t=[];for(let e in Rl.annotationPoints[Rl.annotationsIndex-1]){const n=Rl.annotationPoints[Rl.annotationsIndex-1][e];t.push(n.x),t.push(n.y),t.push(n.z)}e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid].manualshapes.push(t),e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid].colors.push(Rl.annotationColors[Rl.annotationsIndex-1]),e.semanticgraph.nodes[Rl.aPoints[Rl.annotationsIndex-1].nid].widths.push(Rl.annotationWidths[Rl.annotationsIndex-1]),e.semanticgraph.edges=Zl.SceneHub.getJSONgraphEdges(Zl.NTYPES.SEM),e.semanticgraph.edges["."].pop("manual_ann"+Rl.annotationsIndex),console.log("E: ",e),Zl.SceneHub.sendEdit(e,Zl.SceneHub.MODE_ADD);const n={action:"add_manual",point:Rl.annotationPoints[Rl.annotationsIndex-1],annId:Rl.aPoints[Rl.annotationsIndex-1].nid,color:Rl.annotationColors[Rl.annotationsIndex-1],width:Rl.annotationWidths[Rl.annotationsIndex-1],index:Rl.annotationsIndex-1,node:Rl.aPoints[Rl.annotationsIndex-1]};Zl.undoStack.push(n)}else Rl.nowErasingAnnotation&&(console.log("E: ",e),Zl.SceneHub.sendEdit(e,Zl.SceneHub.MODE_DEL));Zl.Photon.fireEvent("AFE_AddSceneEdit",e)}break;case"Backspace":Zl._kModBackspace=!1}Zl._bListenKeyboardEvents&&Zl.fireEvent("KeyUp",e.key)}),!1),Zl.on("KeyPress",(e=>{switch(console.log("PUlSANTE PREMUTO: ",e),e){case"+":Zl.Nav.setFOV(Zl.Nav.getFOV()+1);break;case"-":Zl.Nav.setFOV(Zl.Nav.getFOV()-1);break;case"w":if(Zl.Nav._mode===Zl.Nav.MODE_FPW){const e=new THREE.Vector3;Zl.Nav._camera.getWorldDirection(e),Zl.Nav._controls.target.add(e.multiplyScalar(.1))}break;case"s":if(Zl.Nav._mode===Zl.Nav.MODE_FPW){const e=new THREE.Vector3;Zl.Nav._camera.getWorldDirection(e);const t=Zl.Nav._controls.target.clone();Zl.Nav._controls.target.add(e.multiplyScalar(-.1));const n=t.sub(Zl.Nav._controls.target);Zl.Nav._camera.position.sub(n)}break;case"a":if(Zl.Nav._mode===Zl.Nav.MODE_FPW){const e=new THREE.Vector3,t=new THREE.Vector3;Zl.Nav._camera.getWorldDirection(e),t.crossVectors(Zl.Nav._camera.up,e),t.normalize();const n=t.multiplyScalar(.1);Zl.Nav._controls.target.add(n),Zl.Nav._camera.position.add(n)}break;case"d":if(Zl.Nav._mode===Zl.Nav.MODE_FPW){const e=new THREE.Vector3,t=new THREE.Vector3;Zl.Nav._camera.getWorldDirection(e),t.crossVectors(Zl.Nav._camera.up,e),t.normalize();const n=t.multiplyScalar(-.1);Zl.Nav._controls.target.add(n),Zl.Nav._camera.position.add(n)}break;case"r":Zl.actualEditingNode&&Zl.actualEditingNode.setNowRotating(!0);break;case"x":case"y":case"z":Zl._lastSelectedAxis=e,Zl.fireEvent("ChangedRotationAxis",Zl._lastSelectedAxis)}}))},Zl._handleOnSelect=()=>{if(void 0!==Zl._hoveredSceneNode){let e=Zl.getSceneNode(Zl._hoveredSceneNode);if(e&&e.onSelect)return e.onSelect(),!0}if(void 0!==Zl._hoveredUI){let e=Zl.getUINode(Zl._hoveredUI);if(e&&e.onSelect)return e.onSelect(),!0}return!1},Zl._onResize=()=>{if(Zl.Nav._camera.aspect=window.innerWidth/window.innerHeight,Zl.Nav._camera.updateProjectionMatrix(),Zl._renderer.setSize(window.innerWidth,window.innerHeight),Zl.FX.composer&&(Zl.FX.composer.setSize(window.innerWidth,window.innerHeight),Zl.FX.passes[Zl.FX.PASS_AA])){let e=Zl.FX.passes[Zl.FX.PASS_AA].material.uniforms;e&&e.resolution.value.set(1/window.innerWidth,1/window.innerHeight)}console.log("onResize")},Zl._onMouseWheel=e=>{e.preventDefault(),Zl.fireEvent("MouseWheel",e.deltaY)},Zl.focusOn3DView=()=>{Zl._renderer.domElement.focus()},Zl._SUIactivation=()=>Zl._handleOnSelect(),Zl._stdActivation=()=>{if(Zl._SUIactivation())return;if(!Zl.Nav._bControl)return;if(void 0!==Zl.XPFNetwork._semCurr&&Zl.fireEvent("SemanticMaskSelect",Zl.XPFNetwork._semCurr),Zl.XR._bPresenting){if(HATHOR._actState!==HATHOR.SELECTION_EDITNODES){if(Us.requestTransitionToLocomotionNodeInSightIfAny(Zl.XR.STD_TELEP_DURATION))return;"immersive-vr"===Zl.XR._sessionType&&Zl.XR.teleportOnQueriedPoint()}else if(Zl.actualEditingNode){if(Zl._hoveredSceneNode!==Zl.actualEditingNode.nid){if(Us.requestTransitionToLocomotionNodeInSightIfAny(Zl.XR.STD_TELEP_DURATION))return;"immersive-vr"===Zl.XR._sessionType&&Zl.XR.teleportOnQueriedPoint(),Zl._mainClick=!1}}else{if(Us.requestTransitionToLocomotionNodeInSightIfAny(Zl.XR.STD_TELEP_DURATION))return;"immersive-vr"===Zl.XR._sessionType&&Zl.XR.teleportOnQueriedPoint(),Zl._mainClick=!1}return void Zl.FE.playAudioFromSemanticNode(Zl._hoveredSemNode)}if(Zl.Nav.isFirstPerson()||Zl.Nav.isDevOri()){if(Us.requestTransitionToLocomotionNodeInSightIfAny(.5))return;if(Zl.Nav.currentQueryValidForLocomotion()){let e=Zl._queryDataScene.p,t=Zl.Nav._vDir,n=new THREE.Vector3(e.x,e.y+Zl.userHeight,e.z),i=new THREE.Vector3(n.x+t.x,n.y+t.y,n.z+t.z),r=(new Zl.POV).setPosition(n).setTarget(i).setFOV(Zl.Nav._currPOV.fov);Zl.Nav.requestPOV(r,.5)}return}let e=Zl.getSemanticNode(Zl._hoveredSemNode);Zl._queryDataSem&&e?Zl.Nav.requestPOVbyNode(e,.5):Zl._queryDataScene&&Zl.Nav.requestRetarget(Zl._queryDataScene.p,void 0,.5)},Zl.defaultDoubleTapFromScreenCoords=e=>{Zl._updateScreenMove(e),Zl._handleQueryScene(),Zl._stdActivation()},Zl.isFullscreen=()=>Zl._bFS,Zl.toggleFullScreen=()=>{document.fullscreenElement?document.exitFullscreen&&document.exitFullscreen():document.documentElement.requestFullscreen()},Zl.realize=()=>{console.log("Initialize ATON..."),Zl.Utils.init(),Zl.Utils.profileDevice(),Zl._clock=new THREE.Clock(!0),Zl.bounds=new THREE.Sphere,Zl._worldScale=1,Zl._ws=0,Zl._bFS=!1,Zl._renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,preserveDrawingBuffer:!0}),Zl._renderer.setSize(window.innerWidth,window.innerHeight),Zl.Utils.profileRenderingCapabilities(),Zl._stdpxd=1,Zl._fps=60,Zl._dt=.01,Zl._dtAccum=0,Zl._dtCount=0,Zl._avgFPSaccum=0,Zl._avgFPS=60,Zl._dRenderBudgetMinFPS=30,Zl._dRenderBudgetMaxFPS=60,Zl._bAdaptiveDensity=!0,Zl._adMin=.4,Zl._adMax=1.5,Zl.device.lowGPU&&(Zl._adMax=1),Zl._aniMixers=[],Zl._stdEncoding=THREE.LinearSRGBColorSpace,Zl._renderer.outputColorSpace=Zl._stdEncoding,Zl._renderer.toneMapping=THREE.LinearToneMapping,Zl._renderer.toneMappingExposure=1,Zl._renderer.setAnimationLoop(Zl._onFrame),Zl._maxAnisotropy=Zl._renderer.capabilities.getMaxAnisotropy(),Zl.userHeight=1.7,document.body.appendChild(Zl._renderer.domElement),Kl=Zl._renderer.domElement,Kl.id="idView3D",Kl.style.outline="none",Kl.style.border="none",Zl.UI.init(),Zl._vpanoPlaying=!1,Zl._bUserInts=0,Zl.EventHub.init(),Zl.MatHub.init(),Zl._assetsManager={},Zl._aLoader=new THREE.GLTFLoader,Zl._numReqLoad=0,Zl._collMod=void 0,Zl._ktx2Loader=new THREE.KTX2Loader,Zl._ktx2Loader.setTranscoderPath(Zl.PATH_BASIS_LIB),Zl._ktx2Loader.detectSupport(Zl._renderer),Zl._dracoLoader=new THREE.DRACOLoader,Zl._dracoLoader.setDecoderPath(Zl.PATH_DRACO_LIB),Zl._dracoLoader.setWorkerLimit(2),Zl._dracoLoader.preload(),Zl._aLoader.setDRACOLoader(Zl._dracoLoader),Zl._aLoader.setKTX2Loader(Zl._ktx2Loader),THREE.DefaultLoadingManager.addHandler(/\.ktx2$/,Zl._ktx2Loader),Zl._updRoutines=[],Zl._pmremGenerator=void 0,Zl._lps=[],Zl._bAutoLP=!1,Zl._envMapInt=1,Zl._numLPbounces=2,Zl._lpbCount=0,Zl._bShadowsFixedBound=!1,Zl._shadowsFixedBoundCenter=void 0,Zl._shadowsNear=Zl.SHADOWS_NEAR,Zl._shadowsFar=Zl.SHADOWS_FAR,Zl._shadowsSize=Zl.SHADOWS_SIZE,Zl._shadowsRes=Zl.SHADOWS_RES,Zl.initGraphs(),Zl.SceneHub.init(),Zl.MRes.init(),Zl.CC.init(),Zl.AudioHub.init(),Zl.Nav.init(),Zl.XR.init(),Zl.SUI.init(),Zl.Photon.init(),Zl.MediaFlow.init(),Zl.SemFactory.init(),Zl.Phygital.init(),Zl.XPFNetwork.init(),Zl.device.lowGPU||Zl.device.isMobile||Zl.FX.init(),Zl.FX.composer||(Zl._render=()=>{Zl._renderer.render(Zl._mainRoot,Zl.Nav._camera)}),Zl.setDefaultPixelDensity(1),Zl._queryDataScene=void 0,Zl._queryDataSem=void 0,Zl._queryDataUI=void 0,Zl._hoveredSceneNode=void 0,Zl._hoveredSemNode=void 0,Zl._hoveredUI=void 0,Zl._bq=!0,Zl._bQuerySemOcclusion=!0,Zl._bQueryNormals=!0,Zl._bPauseQuery=!1,Zl._bCenteredQuery=!1,Zl._bqScene=!1,Zl._bqSem=!1,Zl._qSync=0,Zl._qSyncInt=1,Zl._tgiDur=void 0,Zl._tgiPer=void 0,Zl._tHover=void 0,Zl._bMainPanoInfinite=!0,Zl._matMainPano=void 0,Zl._mMainPano=void 0,Zl._screenPointerCoords=new THREE.Vector2(0,0),Zl._rcSUI=new THREE.Raycaster,Zl._rcScene=new THREE.Raycaster,Zl._rcScene.layers.set(Zl.NTYPES.SCENE),Zl._rcScene.firstHitOnly=!0,Zl._rcSemantics=new THREE.Raycaster,Zl._rcSemantics.layers.set(Zl.NTYPES.SEM),Zl._rcSemantics.firstHitOnly=!0,Zl._rcUI=new THREE.Raycaster,Zl._rcUI.layers.set(Zl.NTYPES.UI),Zl._rcUI.firstHitOnly=!0,Zl._setupBaseListeners(),Zl.device.isMobile&&Zl._readDeviceOrientationMode();for(let e in Zl._flares){let t=Zl._flares[e];if(t._deps.length>0){let e=t._deps.length;for(let n in t._deps){let i=document.createElement("script");i.src=t._deps[n],document.documentElement.firstChild.appendChild(i),i.onload=()=>{e--,e<=0&&(console.log("All deps loaded for plugin!"),void 0!==t.setup&&t.setup(),void 0!==t.update&&Zl.addUpdateRoutine(t.update))}}return}void 0!==t.setup&&t.setup(),void 0!==t.update&&Zl.addUpdateRoutine(t.update)}Zl._gizmo=void 0,Zl._bGizmo=!1,Zl.focusOn3DView()},Zl.addFlare=e=>{void 0!==e&&Zl._flares.push(e)},Zl.registerFlare=Zl.addFlare,Zl.setCollectionPathModifier=e=>{Zl._collMod=e},Zl.setTimedGazeDuration=e=>{Zl._tgiDur=e},Zl.getTimedGazeProgress=()=>{if(void 0!==Zl._tgiDur)return Zl._tgiPer},Zl.getElapsedTime=()=>Zl._clock.elapsedTime,Zl.renderPause=()=>{Zl._renderer.setAnimationLoop(void 0)},Zl.renderResume=()=>{Zl._renderer.setAnimationLoop(Zl._onFrame)},Zl._setupLoadManager=()=>{Zl._loadManager=new THREE.LoadingManager,Zl._loadManager.onStart=(e,t,n)=>{console.log("Started loading file: "+e+".\nLoaded "+t+" of "+n+" files."),Zl.fireEvent("NodeRequestFired",e)},Zl._loadManager.onLoad=()=>{console.log("Loading complete!"),Zl.fireEvent("AllNodeRequestsCompleted")},Zl._loadManager.onProgress=(e,t,n)=>{},Zl._loadManager.onError=e=>{console.log("There was an error loading "+e)}},Zl.loadPDFManagerSetup=()=>{Zl._loadManagerPDF=new THREE.LoadingManager,Zl._loadManagerPDF.onStart=(e,t,n)=>{console.log("Started loading file: "+e+".\nLoaded "+t+" of "+n+" files."),Zl.fireEvent("NodeRequestFired",e)},Zl._loadManagerPDF.onLoad=()=>{console.log("Loading complete!"),Zl.fireEvent("PDFLoaded")},Zl._loadManagerPDF.onProgress=(e,t,n)=>{console.log("Loading file: "+e+".\nLoaded "+t+" of "+n+" files.")},Zl._loadManagerPDF.onError=e=>{console.log("There was an error loading "+e)}},Zl.setDefaultPixelDensity=e=>{Zl._stdpxd=e,Zl._renderer.setPixelRatio(e),Zl.FX.composer&&Zl.FX.composer.setPixelRatio(e),void 0!==Zl._renderer.xr&&(Zl.device.isMobile?Zl._renderer.xr.setFramebufferScaleFactor(Zl._stdpxd*Zl.XR.MOBILE_DENSITY_F):Zl._renderer.xr.setFramebufferScaleFactor(Zl._stdpxd))},Zl.resetPixelDensity=()=>{Zl._renderer.setPixelRatio(Zl._stdpxd)},Zl._readDeviceOrientationMode=()=>{90===Math.abs(window.orientation)?(console.log("Landscape Mode"),Zl.fireEvent("MobileLandscapeMode")):(console.log("Portrait Mode"),Zl.fireEvent("MobilePortraitMode")),setTimeout(Zl._onResize,500)},Zl.snodes={},Zl.semnodes={},Zl.uinodes={},Zl.createSceneNode=e=>new Zl.Node(e,Zl.NTYPES.SCENE),Zl.getSceneNode=e=>{if(void 0!==e)return Zl.snodes[e]},Zl.getOrCreateSceneNode=e=>{let t=Zl.getSceneNode(e);return void 0!==t?t:Zl.createSceneNode(e)},Zl.getRootScene=()=>Zl._rootVisible,Zl.createSemanticNode=e=>new Zl.Node(e,Zl.NTYPES.SEM),Zl.getSemanticNode=e=>{if(void 0!==e)return Zl.semnodes[e]},Zl.getOrCreateSemanticNode=e=>{let t=Zl.getSemanticNode(e);return void 0!==t?t:Zl.createSemanticNode(e)},Zl.getRootSemantics=()=>Zl._rootSem,Zl.createUINode=e=>new Zl.Node(e,Zl.NTYPES.UI),Zl.getUINode=e=>{if(void 0!==e)return Zl.uinodes[e]},Zl.getorCreateUINode=(e,t="button")=>{let n=Zl.getUINode(e);if(!n)switch(t){case"button":n=new Zl.SUI.Button(e);break;case"label":n=new Zl.SUI.Label(e)}return n},Zl.getRootUI=()=>Zl._rootUI,Zl._unpackScale=e=>0==e?1:e>=0?1.1*e:1/(-1.1*e),Zl.setUserScaleLevel=e=>{Zl.setWorldScaleLevel(-e)},Zl.getUserScale=()=>1/Zl._worldScale,Zl.setWorldScaleLevel=e=>{void 0===e&&(e=0),e<-127&&(e=127),e>127&&(e=127),Zl._ws=e;let t=Zl._unpackScale(e);Zl._rootVisible.scale.set(t,t,t),Zl._rootSem.scale.set(t,t,t),Ul.gLocNodes.scale.set(t,t,t),Ul.gMeasures.scale.set(t,t,t),Zl.Photon.avaGroup&&Zl.Photon.avaGroup.scale.set(t,t,t),Zl.recomputeSceneBounds();let n=t/Zl._worldScale;Zl.Nav._currPOV.pos.x*=n,Zl.Nav._currPOV.pos.y*=n,Zl.Nav._currPOV.pos.z*=n,Zl.Nav._currPOV.target.x*=n,Zl.Nav._currPOV.target.y*=n,Zl.Nav._currPOV.target.z*=n,Zl.Nav.syncCurrCamera(),Zl.XR._bPresenting&&Zl.XR.setRefSpaceLocation(Zl.Nav._currPOV.pos),Zl._worldScale=t,console.log("World scale: "+t)},Zl.getWorldScaleLevel=()=>Zl._ws,Zl.getWorldScale=()=>Zl._worldScale,Zl._assetReqNew=e=>{Zl._numReqLoad++,Zl.fireEvent("NodeRequestFired",e)},Zl._assetReqComplete=e=>{Zl.fireEvent("NodeRequestCompleted",e),Zl._numReqLoad--,Zl._numReqLoad<=0&&Zl._onAllReqsCompleted()},Zl._pdfLoad=e=>{Zl.fireEvent("NodeRequestFired",e)},Zl._pdfComplete=e=>{Zl.fireEvent("PDFLoaded",e)},Zl._onAllReqsCompleted=()=>{Zl.recomputeSceneBounds(),Zl.getRootScene().assignLightProbesByProximity(),Zl.fireEvent("AllNodeRequestsCompleted"),Zl._postAllReqsCompleted(),setTimeout((()=>{Zl.updateLightProbes(),Zl._renderer.shadowMap.enabled&&Zl._bShadowsFixedBound&&0===Zl._aniMixers.length&&(Zl._dMainL.shadow.autoUpdate=!1,console.log("Lazy shadows"))}),1e3)},Zl._postAllReqsCompleted=e=>{void 0===e&&(e=Zl._rootVisible);for(let t in e.children){let n=e.children[t];n&&n.toggle&&(Zl._postAllReqsCompleted(n),n.toggle(n.visible))}ThreeMeshUI.update()},Zl.recomputeSceneBounds=e=>{e?Zl.bounds.union(e):(Zl.bounds.center.copy(Zl._rootVisible.getBound().center),Zl.bounds.radius=Zl._rootVisible.getBound().radius),console.log(Zl.bounds),Zl.bounds.radius<=0||(Zl._renderer.shadowMap.enabled&&(Zl._rootVisible.traverse((e=>{e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0)})),Zl.adjustShadowsParamsFromSceneBounds(),Zl._bShadowsFixedBound&&Zl.updateDirShadows()),Zl._bAutoLP&&(void 0===Zl._lps[0]?Zl.addLightProbe((new Zl.LightProbe).setPosition(Zl.bounds.center).setNear(Zl.bounds.radius)):Zl._lps[0].setPosition(Zl.bounds.center).setNear(Zl.bounds.radius),console.log("Auto LP")),Zl.FX.composer&&Zl.FX.setDOFaperture(1/(30*Zl.bounds.radius)),Zl._mMainPano&&Zl._mMainPano.position.copy(Zl.bounds.center))},Zl.registerNodeResourceHandler=(e,t)=>{Zl._resHandler||(Zl._resHandler={}),Zl._resHandler[e]=t,console.log("Registered handler for extension: "+e)},Zl.initGraphs=()=>{Zl._mainRoot=new THREE.Scene,Zl._mainRoot.background=new THREE.Color(.7,.7,.7),Zl._rootVisibleGlobal=new THREE.Scene,Zl._mainRoot.add(Zl._rootVisibleGlobal),Zl._rootVisible=Zl.createSceneNode().setAsRoot(),Zl._rootVisibleGlobal.add(Zl._rootVisible),Zl._rootSem=Zl.createSemanticNode().setAsRoot(),Zl._mainRoot.add(Zl._rootSem),Zl._rootUI=Zl.createUINode().setAsRoot(),Zl._mainRoot.add(Zl._rootUI),Zl.ambLight=new THREE.AmbientLight(new THREE.Color(1,1,1)),Zl._rootVisibleGlobal.add(Zl.ambLight),Zl.plight=new THREE.PointLight,Zl.plight.intensity=0,Zl._rootVisibleGlobal.add(Zl.plight)},Zl.enablePointLight=()=>{Zl.plight.intensity=2},Zl.disablePointLight=()=>{Zl.plight.intensity=0},Zl.setBackgroundColor=e=>{Zl._mainRoot.background=e},Zl.setFog=(e,t)=>{void 0!==e&&(void 0===t&&(t=200),Zl._rootVisibleGlobal.fog=new THREE.Fog(e,1,t),Zl.setBackgroundColor(e))},Zl.disableFog=()=>{Zl._rootVisibleGlobal.fog=null},Zl.setAutoLP=e=>{Zl._bAutoLP=e},Zl.setNeutralAmbientLight=e=>{Zl.ambLight.color=new THREE.Color(e,e,e)},Zl.addLightProbe=e=>{void 0!==e&&(Zl._lps.push(e),Zl.setNeutralAmbientLight(0),void 0!==Zl.SUI.gLPIcons&&Ul.addLPIcon(e))},Zl.getNumLightProbes=()=>Zl._lps.length,Zl._updLP=()=>{for(let e in Zl._lps)Zl._lps[e].update();Zl._rootVisible.traverse((e=>{let t=e.userData.LP;void 0!==t&&t instanceof Zl.LightProbe&&(e.material.envMap=t.getEnvTex(),e.material.envMapIntensity=Zl._envMapInt,e.material.needsUpdate=!0)}))},Zl.setLightProbesNumBounces=e=>{e<1||(Zl._numLPbounces=e)},Zl.dirtyLightProbes=e=>{void 0===e&&(e=Zl._numLPbounces),Zl._lpbCount=e},Zl.updateLightProbes=()=>{if(!Zl.XR._bPresenting&&0!==Zl._lps.length){for(let e=0;e<Zl._numLPbounces;e++)Zl._updLP();console.log("LPs updated.")}},Zl.setMainPanorama=e=>{let t;if(e=Zl.Utils.resolveCollectionURL(e),void 0===Zl._mMainPano&&(Zl._gMainPano=new THREE.SphereGeometry(1,60,60),Zl._gMainPano.castShadow=!1,Zl._gMainPano.receiveShadow=!1,Zl._mMainPano=new THREE.Mesh(Zl._gMainPano,Zl._matMainPano),Zl._mMainPano.frustumCulled=!1,Zl._mMainPano.renderOrder=-100,Zl._mMainPano.layers.disable(Zl.NTYPES.SCENE),Zl._mMainPano.layers.disable(Zl.NTYPES.SEM),Zl._mMainPano.layers.disable(Zl.NTYPES.UI),Zl.setMainPanoramaRadius(.8*Zl.Nav.STD_FAR)),Zl.Utils.isVideo(e)){if(void 0===Zl._elPanoVideo){let t="<video id='idPanoVideo' loop crossOrigin='anonymous' playsinline style='display:none'>";e.endsWith("mp4")&&(t+="<source src='"+e+"' type='video/mp4'>"),e.endsWith("webm")&&(t+="<source src='"+e+"' type='video/webm'>"),t+="</video>",$(t).appendTo("body"),Zl._elPanoVideo=document.getElementById("idPanoVideo"),Zl._elPanoVideo.onplaying=()=>{console.log("VideoPano playing"),Zl._vpanoPlaying=!0},Zl._elPanoVideo.onpause=()=>{console.log("VideoPano paused"),Zl._vpanoPlaying=!1},Zl._elPanoVideo.addEventListener("touchstart",(function(){Zl._elPanoVideo.play()})),enableInlineVideo(Zl._elPanoVideo)}t=new THREE.VideoTexture(Zl._elPanoVideo),t.colorSpace=Zl._stdEncoding,Zl._realizeOrUpdateMainPano(t),Zl.fireEvent("MainPanoVideo")}else{if(e.endsWith(".hdr"))return void(new THREE.RGBELoader).load(e,(e=>{e.minFilter=THREE.LinearMipmapLinearFilter,e.magFilter=THREE.LinearFilter,e.colorSpace=Zl._stdEncoding,Zl._realizeOrUpdateMainPano(e),Zl.fireEvent("MainPanoHDR")}));if(e.endsWith(".exr"))return void(new THREE.EXRLoader).load(e,(e=>{e.minFilter=THREE.LinearMipmapLinearFilter,e.magFilter=THREE.LinearFilter,e.colorSpace=Zl._stdEncoding,Zl._realizeOrUpdateMainPano(e),Zl.fireEvent("MainPanoHDR")}));Zl.Utils.textureLoader.load(e,(e=>{e.colorSpace=Zl._stdEncoding,e.generateMipmaps=!0,Zl._realizeOrUpdateMainPano(e),Zl.fireEvent("MainPano")}))}},Zl.playMainPanorama=()=>{Zl._elPanoVideo&&(Zl._vpanoPlaying||Zl._elPanoVideo.play())},Zl.pauseMainPanorama=()=>{Zl._elPanoVideo&&Zl._vpanoPlaying&&Zl._elPanoVideo.pause()},Zl.playOrPauseMainPanorama=()=>{Zl._elPanoVideo&&(Zl._vpanoPlaying?Zl._elPanoVideo.pause():Zl._elPanoVideo.play())},Zl.stopAndRemoveMainPanorama=()=>{Zl._elPanoVideo&&(Zl._vpanoPlaying&&Zl._elPanoVideo.pause(),Zl._elPanoVideo.remove(),Zl._elPanoVideo=void 0,Zl._vpanoPlaying=!1)},Zl._realizeOrUpdateMainPano=e=>{if(void 0!==Zl._matMainPano)return Zl._matMainPano.map=e,void Zl.updateLightProbes();Zl._matMainPano=new THREE.MeshBasicMaterial({map:e,depthTest:!1,depthWrite:!1}),Zl._mMainPano.material=Zl._matMainPano,Zl._bMainPanoInfinite&&(Zl._mMainPano.onAfterRender=()=>{"immersive-ar"!==Zl.XR._sessionType&&Zl.Nav._currPOV&&Zl._mMainPano.position.copy(Zl.Nav._currPOV.pos)}),Zl._rootVisibleGlobal.add(Zl._mMainPano),Zl.updateLightProbes()},Zl.setMainPanoramaRadius=e=>{void 0!==Zl._gMainPano&&Zl._gMainPano.scale(-e,e,e)},Zl.setMainPanoramaRotation=e=>{void 0!==Zl._mMainPano&&Zl._mMainPano.rotation.set(0,e,0)},Zl.setMainPanoramaInfinite=e=>{Zl._bMainPanoInfinite=e,void 0!==Zl._mMainPano&&(Zl._mMainPano.onAfterRender=e?()=>{Zl.Nav._currPOV&&Zl._mMainPano.position.copy(Zl.Nav._currPOV.pos)}:void 0)},Zl.setMainPanoramaLocation=e=>{Zl._bMainPanoInfinite||void 0!==Zl._mMainPano&&Zl._mMainPano.position.copy(e)},Zl.setMainLightDirection=e=>{let t=e.clone();t.normalize(),t.x*=.5*Zl.SHADOWS_FAR,t.y*=.5*Zl.SHADOWS_FAR,t.z*=.5*Zl.SHADOWS_FAR,void 0===Zl._dMainL&&(Zl._dMainL=new THREE.DirectionalLight(new THREE.Color(1,1,1),1),Zl._dMainL.castShadow=!1,Zl._dMainL.intensity=.8,Zl._dMainLtgt=new THREE.Object3D,Zl._rootVisibleGlobal.add(Zl._dMainLtgt),Zl._dMainL.target=Zl._dMainLtgt,Zl._rootVisibleGlobal.add(Zl._dMainL),Zl._dMainLpos=new THREE.Vector3),Zl._dMainLdir=t,Zl._dMainL.position.set(-t.x,-t.y,-t.z),Zl._renderer.shadowMap.enabled&&(Zl._dMainL.shadow.needsUpdate=!0),Zl.toggleMainLight(!0)},Zl.getMainLightDirection=()=>{if(void 0===Zl._dMainLdir)return;let e=Zl._dMainLdir.clone();return e.normalize(),e},Zl.toggleMainLight=e=>{if(void 0===Zl._dMainL)return;Zl._dMainL.visible=e;let t=Zl._lps.length;e?(t>0?Zl.setNeutralAmbientLight(0):Zl.setNeutralAmbientLight(Zl.AMB_L),Zl.updateDirShadows()):t>0?Zl.setNeutralAmbientLight(0):Zl.setNeutralAmbientLight(Zl.AMB_L)},Zl.isMainLightEnabled=()=>void 0!==Zl._dMainL&&!!Zl._dMainL.visible,Zl.setExposure=e=>{Zl._renderer.toneMappingExposure=e},Zl.getExposure=()=>Zl._renderer.toneMappingExposure,Zl.adjustShadowsParamsFromSceneBounds=()=>{if(void 0===Zl._dMainL)return;let e=Zl._rootVisible.getBound().radius,t=Zl._rootVisible.getBound().center;e<=0||e>=Zl.SHADOWS_SIZE?(Zl._bShadowsFixedBound=!1,Zl._shadowsSize=Zl.SHADOWS_SIZE):(Zl._bShadowsFixedBound=!0,Zl._shadowsFixedBoundCenter=t,Zl._shadowsSize=1.5*e),Zl._dMainL.shadow.map&&(Zl._dMainL.shadow.map.dispose(),Zl._dMainL.shadow.map=null),Zl._dMainL.shadow.camera.left=-Zl._shadowsSize,Zl._dMainL.shadow.camera.right=Zl._shadowsSize,Zl._dMainL.shadow.camera.bottom=-Zl._shadowsSize,Zl._dMainL.shadow.camera.top=Zl._shadowsSize,Zl._dMainL.shadow.mapSize.width=Zl._shadowsRes,Zl._dMainL.shadow.mapSize.height=Zl._shadowsRes,Zl._dMainL.shadow.camera.near=Zl._shadowsNear,Zl._dMainL.shadow.camera.far=Zl._shadowsFar;let n=-2e-4*e;n<-.001&&(n=-.001),Zl._dMainL.shadow.bias=n},Zl.toggleShadows=e=>{if(void 0!==Zl._dMainL)if(e){if(Zl.XR.isPresenting())return;if(Zl.device.lowGPU)return;Zl._dMainL.castShadow=!0,Zl._renderer.shadowMap.enabled=!0,Zl.device.isMobile?Zl._renderer.shadowMap.type=THREE.PCFShadowMap:Zl._renderer.shadowMap.type=THREE.PCFSoftShadowMap,Zl._rootVisible.traverse((e=>{e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0)})),Zl.adjustShadowsParamsFromSceneBounds(),Zl.updateDirShadows(),Zl._dMainL.shadow.needsUpdate=!0,console.log("Shadows ON")}else Zl._dMainL.castShadow=!1,Zl._renderer.shadowMap.enabled=!1,console.log("Shadows OFF")},Zl.updateDirShadows=()=>{if(void 0===Zl._dMainLdir)return;if(void 0===Zl._dMainLpos)return;let e=Zl._shadowsFixedBoundCenter;void 0===e?(e=Zl.Nav.getCurrentEyeLocation(),Zl._dMainLpos.x=e.x+Zl.Nav._vDir.x*Zl._shadowsSize,Zl._dMainLpos.y=e.y+Zl.Nav._vDir.y*Zl._shadowsSize,Zl._dMainLpos.z=e.z+Zl.Nav._vDir.z*Zl._shadowsSize):(Zl._dMainLpos.x=e.x,Zl._dMainLpos.y=e.y,Zl._dMainLpos.z=e.z),Zl._dMainL.position.set(Zl._dMainLpos.x-Zl._dMainLdir.x,Zl._dMainLpos.y-Zl._dMainLdir.y,Zl._dMainLpos.z-Zl._dMainLdir.z),Zl._dMainLtgt.position.copy(Zl._dMainLpos)},Zl._updateEnvironment=()=>{Zl._renderer.shadowMap.enabled&&(Zl._bShadowsFixedBound||Zl.updateDirShadows())},Zl.setGlobalAudio=(e,t)=>{void 0!==e&&(void 0===t&&(t=!0),e=Zl.Utils.resolveCollectionURL(e),void 0===Zl._auMain||null===Zl._auMain?Zl._auMain=new THREE.Audio(Zl.AudioHub._listener):Zl._auMain.isPlaying&&Zl._auMain.stop(),Zl.AudioHub._loader.load(e,(e=>{Zl._auMain.setBuffer(e),Zl._auMain.setLoop(t),Zl._auMain.play()})))},Zl._markFPS=()=>{Zl._numReqLoad>0||Zl._dt<0||(Zl._dtCount+=1,Zl._dtAccum+=Zl._dt,Zl._dtAccum<1||(Zl._fps=1/(Zl._dtAccum/Zl._dtCount),Zl._dtCount=0,Zl._dtAccum=0,Zl._handleDynamicRenderProfiles()))},Zl.toggleAdaptiveDensity=e=>{Zl._bAdaptiveDensity=e},Zl.setDynamicRenderingFPS=(e,t)=>{e>=t||(e&&(Zl._dRenderBudgetMinFPS=e),t&&(Zl._dRenderBudgetMaxFPS=t))},Zl._handleDynamicRenderProfiles=()=>{let e=Zl._renderer.getPixelRatio();Zl._fps<Zl._dRenderBudgetMinFPS&&(Zl._bAdaptiveDensity&&!Zl.XR._bPresenting&&(e-=.1,e>=Zl._adMin&&(Zl._renderer.setPixelRatio(e),Zl.FX.composer&&Zl.FX.composer.setPixelRatio(e))),Zl.fireEvent("RequestLowerRender")),Zl._fps>Zl._dRenderBudgetMaxFPS&&(Zl._bAdaptiveDensity&&!Zl.XR._bPresenting&&(e+=.1,e<=Zl._adMax&&(Zl._renderer.setPixelRatio(e),Zl.FX.composer&&Zl.FX.composer.setPixelRatio(e))),Zl.fireEvent("RequestHigherRender"))},Zl._onFrame=()=>{Zl._dt=Zl._clock.getDelta(),Zl._markFPS(),Zl.XR._bPresenting?Zl.XR.update():Zl.Nav._controls.update(Zl._dt),Zl.checkEmptyStacks(),Zl._handleQueries(),Zl.Nav.update(),Zl.Photon.update(),Zl.SUI.update(),Zl.MatHub.update(),Zl._updateEnvironment(),Zl._updateAniMixers(),Zl._updateRoutines(),Zl.MRes.update(),Zl.XPFNetwork.update();let e=Zl._draggableUIObjects.length;if(Zl._hoveredUI){const e=Zl.getUINode(Zl._hoveredUI);Zl._draggableUIObjects.includes(e)||"."!==e.parent.nid||Zl._draggableUIObjects.push(e)}else Zl._dragControls.dispose(),Zl._draggableUIObjects=[];if(Zl._draggableUIObjects.length>e&&(Zl._dragControls=new THREE.DragControls(Zl._draggableUIObjects,Zl.Nav._camera,Zl._renderer.domElement),Zl._dragControls.recursive=!1,Zl._dragControls.transformGroup=!0,Zl._dragControls.addEventListener("drag",(e=>{e.object.lookAt(Zl.Nav._camera.position)}))),Zl._isXRDragging){const e=Zl.getUINode(Zl._hoveredUI);Zl._dragControls.dispatchEvent({type:"drag",object:e})}Zl._render(),Jl=requestAnimationFrame(ec)},Zl.checkEmptyStacks=()=>{0===Zl.undoStack.length?$("#btn-undo").hide():$("#btn-undo").show(),0===Zl.redoStack.length?$("#btn-redo").hide():$("#btn-redo").show()},Zl._render=()=>{!Zl.FX.composer||Zl.XR._bPresenting?Zl._renderer.render(Zl._mainRoot,Zl.Nav._camera):Zl.FX.composer.render()},Zl.addUpdateRoutine=e=>{void 0!==e&&Zl._updRoutines.push(e)},Zl.deleteAllUpdateRoutines=()=>{Zl._updRoutines=[]},Zl._updateRoutines=()=>{let e=Zl._updRoutines.length;if(!(e<=0))for(let t=0;t<e;t++)Zl._updRoutines[t]()},Zl._updateAniMixers=()=>{let e=Zl._aniMixers.length;if(!(e<1))for(let t=0;t<e;t++)Zl._aniMixers[t].update(Zl._dt)},Zl._updateScreenMove=e=>{e.preventDefault&&e.preventDefault(),Zl._bCenteredQuery||(Zl.oldEvX!==Zl.evX||Zl.oldEvY!==Zl.evY?(Zl._screenPointerCoords.x=Zl.evX/window.innerWidth*2-1,Zl._screenPointerCoords.y=-Zl.evY/window.innerHeight*2+1):(Zl._screenPointerCoords.x=e.clientX/window.innerWidth*2-1,Zl._screenPointerCoords.y=-e.clientY/window.innerHeight*2+1),Zl.oldEvX=Zl.evX,Zl.oldEvY=Zl.evY)},Zl.toggleCenteredQuery=e=>{Zl._bCenteredQuery=e,e&&(Zl._screenPointerCoords.x=0,Zl._screenPointerCoords.y=0)},Zl.toggleQueries=e=>{Zl._bq=e},Zl._registerRCS=()=>{Zl._rcRR=0,Zl._rcHandlers=[],Zl._rcHandlers.push(Zl._handleQueryScene),Zl._rcHandlers.push(Zl._handleQuerySemantics),Zl._rcHandlers.push(Zl._handleQueryUI)},Zl._handleQueries=()=>{if(!Zl._bq)return;if(Zl._bPauseQuery)return;if(Zl.Nav._bInteracting)return;if(Zl._numReqLoad>0)return;if(Zl.Nav.isTransitioning())return;if(Zl._handleQueryUI(),Zl._bqScene&&Zl._handleQueryScene(),Zl._bqSem&&Zl._handleQuerySemantics(),Zl.Nav._bLocValidator&&Zl.Nav.locomotionValidator(),void 0===Zl._tgiDur)return;if(void 0===Zl._tHover)return;const e=Zl._clock.elapsedTime-Zl._tHover;e>=Zl._tgiDur?(Zl._stdActivation(),Zl._tHover=void 0,Zl._tgiPer=void 0):Zl._tgiPer=e/Zl._tgiDur},Zl.getIntersectObjects=()=>{let e=[];return Zl._rcScene.intersectObjects(Zl._mainRoot.children,!0,e),e},Zl._handleQueryScene=()=>{if(Zl.XR.isPresenting()?Zl.XR.setupQueryRay(Zl._rcScene):Zl._rcScene.setFromCamera(Zl._screenPointerCoords,Zl.Nav._camera),Zl._hitsScene=[],Zl._rcScene.intersectObjects(Zl._mainRoot.children,!0,Zl._hitsScene),Zl._hitsScene.length<=0)return Zl._queryDataScene=void 0,void(Zl._hoveredSceneNode=void 0);const e=Zl._hitsScene[0];if(Zl._queryDataScene={},Zl._queryDataScene.p=e.point,Zl._queryDataScene.d=e.distance,Zl._queryDataScene.o=e.object,Zl._queryDataScene.uv=e.uv,Zl.fireEvent("HitsScene",Zl._queryDataScene),!Zl._bQueryNormals)return;if(!e.face)return;if(!e.face.normal)return;Zl._queryDataScene.matrixWorld=(new THREE.Matrix3).getNormalMatrix(e.object.matrixWorld),Zl._queryDataScene.n=e.face.normal.clone().applyMatrix3(Zl._queryDataScene.matrixWorld).normalize(),Zl._queryDataScene.list=[];const t=Zl._queryDataScene.list;let n=e.object.parent;for(;n;)n.nid&&n.nid!==Zl.ROOT_NID&&t.push(n.nid),n=n.parent;const i=t[0];if(i)if(Zl._hoveredSceneNode!==i){if(Zl._hoveredSceneNode){Zl.fireEvent("SceneNodeLeave",Zl._hoveredSceneNode);let e=Zl.getSceneNode(Zl._hoveredSceneNode);e&&e.onLeave&&e.onLeave(),Zl._tHover=void 0}Zl._hoveredSceneNode=i,Zl.fireEvent("SceneNodeHover",i);let e=Zl.getSceneNode(i);e&&(e.onHover&&e.onHover(),Zl._mainClick&&e.editable&&e.onHover&&(e.nowEditing=!0,Zl.actualEditingNode=e))}else if(Zl._hoveredSceneNode===i){let e=Zl.getSceneNode(i);if(void 0!==e&&e.isImporter){if(Zl._mainClick&&Zl._mainClick!==Ql)switch(HATHOR._actState){case HATHOR.SELECTION_STD:let t=i.split("objcount")[1];HATHOR.setSpawnSketchfabImporter(void 0,e,t);break;case HATHOR.SELECTION_EDITNODES:e.editable&&(e.nowEditing=!0,Zl.actualEditingNode=e)}Ql=Zl._mainClick}}if(Zl.actualEditingNode)if(Zl.XR.isPresenting()){if(Zl.actualEditingNode.nid===Zl._hoveredSceneNode&&!Zl._hoveredUI&&Zl._isXRDragging&&"drag"===Zl._lastSelectedEditMode){const e=Zl._queryDataScene.p,t=Zl.actualEditingNode.isImported?Zl.actualEditingNode.parent.position.clone():Zl.actualEditingNode.position.clone(),n={action:"drag",node:Zl.actualEditingNode,position:t};Zl.undoStack.push(n),Zl.actualEditingNode.positionEvent(e)}}else if(!Zl._hoveredUI&&Zl._mainClick&&"drag"===Zl._lastSelectedEditMode){const t=Zl.actualEditingNode.isImported?Zl.actualEditingNode.parent.position.clone():Zl.actualEditingNode.position.clone(),n={action:"drag",node:Zl.actualEditingNode,position:t};Zl.undoStack.push(n),Zl.actualEditingNode.positionEvent(e.point)}Zl._hoveredUI},Zl.selectHoveredNode=()=>{const e=Zl._hitsScene[0];if(!Zl._bQueryNormals)return;if(!e.face)return;if(!e.face.normal)return;Zl._queryDataScene.matrixWorld=(new THREE.Matrix3).getNormalMatrix(e.object.matrixWorld),Zl._queryDataScene.n=e.face.normal.clone().applyMatrix3(Zl._queryDataScene.matrixWorld).normalize(),Zl._queryDataScene.list=[];const t=Zl._queryDataScene.list;let n=e.object.parent;for(;n;)n.nid&&n.nid!==Zl.ROOT_NID&&t.push(n.nid),n=n.parent;const i=t[0],r=Zl.getSceneNode(i);return console.log("HOVERED NODE BEFORE SetNowEditing (FUNCTION selectHoveredNode): ",r),r.editable?(r.setNowEditing(!0),r):void 0},Zl.getSceneFocalPoint=()=>{if(void 0===Zl._queryDataScene)return;let e=Zl._queryDataScene.p,t=new THREE.Vector3;return t.lerpVectors(e,Zl.Nav._currPOV.pos,.02),t},Zl.getSceneQueriedPoint=()=>{if(void 0!==Zl._queryDataScene)return Zl._queryDataScene.p},Zl.getSceneQueriedDistance=()=>{if(void 0!==Zl._queryDataScene)return Zl._queryDataScene.d},Zl.getSceneQueriedNormal=()=>{if(void 0!==Zl._queryDataScene)return Zl._queryDataScene.n},Zl.setQueryRange=(e,t,n)=>{void 0!==n&&n!==Zl.NTYPES.SCENE||(Zl._rcScene.near=e,Zl._rcScene.far=t),void 0!==n&&n!==Zl.NTYPES.SEM||(Zl._rcSemantics.near=e,Zl._rcSemantics.far=t)},Zl._handleQuerySemantics=()=>{if(Zl.XR.isPresenting()?Zl.XR.setupQueryRay(Zl._rcSemantics):Zl._rcSemantics.setFromCamera(Zl._screenPointerCoords,Zl.Nav._camera),Zl._hitsSem=[],Zl._rcSemantics.intersectObjects(Zl._mainRoot.children,!0,Zl._hitsSem),Zl._hitsSem.length<=0){if(Zl._queryDataSem=void 0,Zl._hoveredSemNode){Zl.fireEvent("SemanticNodeLeave",Zl._hoveredSemNode);let e=Zl.getSemanticNode(Zl._hoveredSemNode);e&&e.onLeave&&e.onLeave()}return Zl._hoveredSemNode=void 0,void(Zl._tHover=void 0)}const e=Zl._hitsSem[0];if(Zl._bQuerySemOcclusion&&Zl._queryDataScene&&Zl._queryDataScene.d<e.distance){if(Zl._queryDataSem=void 0,Zl._hoveredSemNode){Zl.fireEvent("SemanticNodeLeave",Zl._hoveredSemNode);let e=Zl.getSemanticNode(Zl._hoveredSemNode);e&&e.onLeave&&e.onLeave()}return Zl._hoveredSemNode=void 0,void(Zl._tHover=void 0)}Zl._queryDataSem={},Zl._queryDataSem.p=e.point,Zl._queryDataSem.d=e.distance,Zl._queryDataSem.o=e.object,Zl._queryDataSem.list=[];const t=Zl._queryDataSem.list;let n=e.object.parent;for(;n;)n.nid&&n.nid!==Zl.ROOT_NID&&t.push(n.nid),n=n.parent;const i=t[0];if(i&&Zl._hoveredSemNode!==i){if(Zl._hoveredSemNode){Zl.fireEvent("SemanticNodeLeave",Zl._hoveredSemNode);let e=Zl.getSemanticNode(Zl._hoveredSemNode);e&&e.onLeave&&e.onLeave(),Zl._tHover=void 0}Zl._hoveredSemNode=i,Zl.fireEvent("SemanticNodeHover",i);let e=Zl.getSemanticNode(i);e&&e.onHover&&e.onHover(),Zl._tHover=Zl._clock.elapsedTime}},Zl._handleQueryUI=()=>{if(Zl.XR.isPresenting()?Zl.XR.setupQueryRay(Zl._rcUI):Zl._rcUI.setFromCamera(Zl._screenPointerCoords,Zl.Nav._camera),Zl._hitsUI=[],Zl._rcUI.intersectObjects(Zl._mainRoot.children,!0,Zl._hitsUI),Zl._hitsUI.length<=0){if(Zl._hoveredUI){Zl.fireEvent("UINodeLeave",Zl._hoveredUI);const e=Zl.getUINode(Zl._hoveredUI);e&&e.onLeave&&e.onLeave()}return Zl._queryDataUI=void 0,Zl._hoveredUI=void 0,void(Zl._tHover=void 0)}const e=Zl._hitsUI[0];if(Zl._queryDataScene&&Zl._queryDataScene.d<e.distance){if(Zl._queryDataUI=void 0,Zl._hoveredUI){Zl.fireEvent("UINodeLeave",Zl._hoveredUI);const e=Zl.getUINode(Zl._hoveredUI);e&&e.onLeave&&e.onLeave()}return Zl._hoveredUI=void 0,void(Zl._tHover=void 0)}Zl._queryDataUI={},Zl._queryDataUI.p=e.point,Zl._queryDataUI.d=e.distance,Zl._queryDataUI.o=e.object,Zl._queryDataUI.list=[],Zl.fireEvent("HitsUI",Zl._queryDataUI);const t=Zl._queryDataUI.list;let n=e.object.parent;for(;n;)n.nid&&n.nid!==Zl.ROOT_NID&&t.push(n.nid),n=n.parent;const i=t[0];if(i&&Zl._hoveredUI!==i){if(Zl._hoveredUI){Zl.fireEvent("UINodeLeave",Zl._hoveredUI);const e=Zl.getUINode(Zl._hoveredUI);e&&e.onLeave&&e.onLeave(),Zl._tHover=void 0}Zl._hoveredUI=i,Zl.fireEvent("UINodeHover",i);const e=Zl.getUINode(i);e&&e.onHover&&e.onHover(),Zl._tHover=Zl._clock.elapsedTime}},Zl.getHoveredSemanticNode=()=>{if(void 0!==Zl._hoveredSemNode)return Zl.getSemanticNode(Zl._hoveredSemNode)},Zl.setAPIToken=(e,t)=>{window.sessionStorage.setItem("ATON.tokens."+e,t)},Zl.getAPIToken=e=>window.sessionStorage.getItem("ATON.tokens."+e),Zl.clearToken=e=>{window.sessionStorage.removeItem("ATON.tokens."+e)},Zl.useGizmo=e=>{Zl._bGizmo=e,Zl._setupGizmo()},Zl._setupGizmo=()=>{Zl._bGizmo?void 0!==Zl.Nav._camera&&void 0!==Zl._renderer&&(void 0===Zl._gizmo?(Zl._gizmo=new THREE.TransformControls(Zl.Nav._camera,Zl._renderer.domElement),Zl._rootUI.add(Zl._gizmo),Zl._gizmo.setMode("rotate"),Zl._gizmo.addEventListener("dragging-changed",(function(e){let t=e.value;Zl.Nav.setUserControl(!t),Zl._bPauseQuery=t,t||(Zl.recomputeSceneBounds(),Zl.updateLightProbes(),console.log(Zl._gizmo.object))}))):(Zl._gizmo.camera=Zl.Nav._camera,Zl._gizmo.detach())):Zl._gizmo&&Zl._gizmo.detach()};const tc=Zl})()})();